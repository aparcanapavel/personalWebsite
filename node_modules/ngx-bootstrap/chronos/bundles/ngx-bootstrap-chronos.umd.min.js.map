{"version":3,"sources":["ng://ngx-bootstrap/chronos/utils.ts","ng://ngx-bootstrap/chronos/utils/type-checks.ts","ng://ngx-bootstrap/chronos/units/aliases.ts","ng://ngx-bootstrap/chronos/units/constants.ts","ng://ngx-bootstrap/chronos/utils/zero-fill.ts","ng://ngx-bootstrap/chronos/format/format.ts","ng://ngx-bootstrap/chronos/create/date-from-array.ts","ng://ngx-bootstrap/chronos/utils/date-getters.ts","ng://ngx-bootstrap/chronos/parse/regex.ts","ng://ngx-bootstrap/chronos/parse/token.ts","ng://ngx-bootstrap/chronos/create/parsing-flags.ts","ng://ngx-bootstrap/chronos/units/year.ts","ng://ngx-bootstrap/chronos/units/month.ts","ng://ngx-bootstrap/chronos/utils/date-setters.ts","ng://ngx-bootstrap/chronos/create/clone.ts","ng://ngx-bootstrap/chronos/utils/start-end-of.ts","ng://ngx-bootstrap/chronos/units/day-of-week.ts","ng://ngx-bootstrap/chronos/units/day-of-year.ts","ng://ngx-bootstrap/chronos/units/week-calendar-utils.ts","ng://ngx-bootstrap/chronos/locale/locale.class.ts","ng://ngx-bootstrap/chronos/locale/calendar.ts","ng://ngx-bootstrap/chronos/locale/locale.defaults.ts","ng://ngx-bootstrap/chronos/utils/compare-arrays.ts","ng://ngx-bootstrap/chronos/units/week.ts","ng://ngx-bootstrap/chronos/units/week-year.ts","ng://ngx-bootstrap/chronos/units/timestamp.ts","ng://ngx-bootstrap/chronos/units/quarter.ts","ng://ngx-bootstrap/chronos/units/offset.ts","ng://ngx-bootstrap/chronos/units/hour.ts","ng://ngx-bootstrap/chronos/locale/locales.ts","ng://ngx-bootstrap/chronos/units/timezone.ts","ng://ngx-bootstrap/chronos/units/second.ts","ng://ngx-bootstrap/chronos/units/minute.ts","ng://ngx-bootstrap/chronos/units/millisecond.ts","ng://ngx-bootstrap/chronos/units/day-of-month.ts","ng://ngx-bootstrap/chronos/duration/valid.ts","ng://ngx-bootstrap/chronos/utils/abs-ceil.ts","ng://ngx-bootstrap/chronos/duration/bubble.ts","ng://ngx-bootstrap/chronos/duration/humanize.ts","ng://ngx-bootstrap/chronos/duration/constructor.ts","ng://ngx-bootstrap/chronos/create/valid.ts","ng://ngx-bootstrap/chronos/create/from-string.ts","ng://ngx-bootstrap/chronos/format.ts","ng://ngx-bootstrap/chronos/utils/defaults.ts","ng://ngx-bootstrap/chronos/create/from-array.ts","ng://ngx-bootstrap/chronos/create/check-overflow.ts","ng://ngx-bootstrap/chronos/create/from-string-and-format.ts","ng://ngx-bootstrap/chronos/create/from-object.ts","ng://ngx-bootstrap/chronos/create/from-anything.ts","ng://ngx-bootstrap/chronos/create/from-string-and-array.ts","ng://ngx-bootstrap/chronos/create/local.ts","ng://ngx-bootstrap/chronos/utils/abs-round.ts","ng://ngx-bootstrap/chronos/utils/date-compare.ts","ng://ngx-bootstrap/chronos/duration/create.ts","ng://ngx-bootstrap/chronos/moment/add-subtract.ts","ng://ngx-bootstrap/chronos/i18n/ar.ts","ng://ngx-bootstrap/chronos/i18n/bg.ts","ng://ngx-bootstrap/chronos/i18n/ca.ts","ng://ngx-bootstrap/chronos/i18n/cs.ts","ng://ngx-bootstrap/chronos/i18n/da.ts","ng://ngx-bootstrap/chronos/i18n/de.ts","ng://ngx-bootstrap/chronos/i18n/en-gb.ts","ng://ngx-bootstrap/chronos/i18n/es-do.ts","ng://ngx-bootstrap/chronos/i18n/es.ts","ng://ngx-bootstrap/chronos/i18n/es-us.ts","ng://ngx-bootstrap/chronos/i18n/fi.ts","ng://ngx-bootstrap/chronos/i18n/fr.ts","ng://ngx-bootstrap/chronos/i18n/gl.ts","ng://ngx-bootstrap/chronos/i18n/he.ts","ng://ngx-bootstrap/chronos/i18n/hi.ts","ng://ngx-bootstrap/chronos/i18n/hu.ts","ng://ngx-bootstrap/chronos/i18n/id.ts","ng://ngx-bootstrap/chronos/i18n/it.ts","ng://ngx-bootstrap/chronos/i18n/ja.ts","ng://ngx-bootstrap/chronos/i18n/ko.ts","ng://ngx-bootstrap/chronos/i18n/lt.ts","ng://ngx-bootstrap/chronos/i18n/mn.ts","ng://ngx-bootstrap/chronos/i18n/nb.ts","ng://ngx-bootstrap/chronos/i18n/nl-be.ts","ng://ngx-bootstrap/chronos/i18n/nl.ts","ng://ngx-bootstrap/chronos/i18n/pl.ts","ng://ngx-bootstrap/chronos/i18n/pt-br.ts","ng://ngx-bootstrap/chronos/i18n/ro.ts","ng://ngx-bootstrap/chronos/i18n/ru.ts","ng://ngx-bootstrap/chronos/i18n/sk.ts","ng://ngx-bootstrap/chronos/i18n/sl.ts","ng://ngx-bootstrap/chronos/i18n/sv.ts","ng://ngx-bootstrap/chronos/i18n/th.ts","ng://ngx-bootstrap/chronos/i18n/tr.ts","ng://ngx-bootstrap/chronos/i18n/zh-cn.ts"],"names":["absFloor","num","Math","ceil","floor","isString","str","isDate","value","Date","Object","prototype","toString","call","isDateValid","date","getTime","isNaN","isFunction","fn","Function","isNumber","isArray","input","Array","hasOwnProp","a","b","hasOwnProperty","isObject","isUndefined","toInt","argumentForCoercion","coercedNumber","isFinite","aliases","_mapUnits","hour","minute","second","millisecond","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","_unit","normalizeUnits","units","undefined","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","zeroFill","targetLength","forceSign","absNumber","abs","zerosToFill","length","pow","max","substr","formatFunctions","formatTokenFunctions","formattingTokens","addFormatToken","token","padded","ordinal","callback","apply","arguments","opts","locale","createUTCDate","y","m","d","UTC","getUTCFullYear","setUTCFullYear","createDate","h","M","s","ms","getFullYear","setFullYear","getHours","isUTC","getUTCHours","getMinutes","getUTCMinutes","getSeconds","getUTCSeconds","getMilliseconds","getUTCMilliseconds","getDay","getUTCDay","getDate","getUTCDate","getMonth","getUTCMonth","isSameMonth","date1","date2","isSameYear","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchShortOffset","matchTimestamp","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","unescapeFormat","regexEscape","replace","matched","p1","p2","p3","p4","tokens","addParseToken","_token","func","array","config","i","addWeekParseToken","_w","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","getYear","parseTwoDigitYear","daysInYear","year","isLeapYear","daysInMonth","month","NaN","modMonth","mod","n","x","defaultTimeUnit","day","seconds","getNum","def","setMonth","dayOfMonth","min","setUTCMonth","setDate","setUTCDate","cloneDate","startOf","_date","setHours","setUTCHours","setMinutes","setUTCMinutes","setSeconds","setUTCSeconds","setMilliseconds","setUTCMilliseconds","setLocaleDayOfWeek","weekday","getLocaleDayOfWeek","add","setISODayOfWeek","parseIsoWeekday","getLocale","weekdaysParse","setDayOfWeek","getDayOfWeek","endOf","subtract","getDayOfYear","someDate","round","firstWeekOffset","dow","doy","fwd","weekOfYear","resWeek","resYear","weekOffset","week","weeksInYear","weekOffsetNext","MONTHS_IN_FORMAT","defaultLocaleMonths","split","defaultLocaleMonthsShort","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultLongDateFormat","LTS","LT","L","LL","LLL","LLLL","defaultMonthsShortRegex","defaultMonthsRegex","Locale","this","set","confKey","prop","_config","calendar","key","now","output","_calendar","sameElse","longDateFormat","format","_longDateFormat","formatUpper","toUpperCase","val","slice","defineProperty","_invalidDate","_ordinal","preparse","postformat","relativeTime","withoutSuffix","isFuture","_relativeTime","pastFuture","diff","months","_months","standalone","isFormat","test","monthsShort","_monthsShort","monthsParse","monthName","strict","_monthsParseExact","handleMonthStrictParse","_monthsParse","_longMonthsParse","_shortMonthsParse","_shortMonths","monthsRegex","computeMonthsParse","_monthsStrictRegex","_monthsRegex","monthsShortRegex","_monthsShortStrictRegex","_monthsShortRegex","_week","firstDayOfWeek","firstDayOfYear","weekdays","_weekdays","_key","weekdaysMin","_weekdaysMin","weekdaysShort","_weekdaysShort","weekdayName","_weekdaysParseExact","handleWeekStrictParse","_weekdaysParse","_minWeekdaysParse","_shortWeekdaysParse","_fullWeekdaysParse","weekdaysRegex","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","weekdaysShortRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","weekdaysMinRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","isPM","charAt","hours","minutes","isLower","formatLongDate","ii","mom","llc","toLocaleLowerCase","indexOf","shortPieces","longPieces","mixedPieces","push","sort","cmpLenRev","join","minPieces","minp","shortp","longp","baseConfig","sameDay","nextDay","nextWeek","lastDay","lastWeek","invalidDate","dayOfMonthOrdinalParse","future","past","ss","mm","hh","dd","MM","yy","meridiemParse","compareArrays","array1","array2","dontConvert","len","lengthDiff","diffs","initWeek","getWeek","getISOWeek","addWeekYearFormatToken","getter","_getWeekYearFormatCb","getWeekYear","_getISOWeekYearFormatCb","getISOWeekYear","initTimestamp","unix","valueOf","_d","parseFloat","initQuarter","getQuarter","addOffsetFormatToken","separator","offset","getUTCOffset","_offset","_isUTC","getDateOffset","getTimezoneOffset","sign","initOffset","_useUTC","_tzm","offsetFromString","matcher","matches","match","parts","chunkOffset","parseInt","_min","initHour","hFormat","lowercase","matchMeridiem","_meridiemParse","kFormat","kInput","_isPm","_locale","_meridiem","bigHour","pos","pos1","pos2","globalLocale","locales","localeFamilies","normalizeLocale","mergeConfigs","parentConfig","childConfig","parentProp","res","assign","childProp","loadLocale","name","console","error","getSetGlobalLocale","values","data","defineLocale","_abbr","abbr","parentLocale","forEach","setDefaultLocale","initWeekYear","initYear","initTimezone","initSecond","initMonth","_strict","initMinute","initMillisecond","parseMs","initDayOfYear","_dayOfYear","initDayOfWeek","getISODayOfWeek","invalidWeekday","initDayOfMonth","_dayOfMonthOrdinalParse","_ordinalParse","chooseLocale","names","next","j","ordering","orderingHash","reduce","mem","order","absCeil","number","daysToMonths","monthsToDays","thresholds","Duration","duration","_data","normalizedInput","years","quarters","quarter","weeks","days","milliseconds","_isValid","isDurationValid","keys","some","unitHasDecimal","_milliseconds","_days","bubble","dur","monthsFromDays","isValid","humanize","withSuffix","localeData","posNegDuration","createDuration","as","substituteTimeAgo","localeKey","mathAbs","_units","Error","flags","parsedParts","isNowValid","isFrozen","createInvalid","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromISO","_i","allowTime","dateFormat","timeFormat","tzFormat","l","exec","_f","configFromStringAndFormat","extractFromRFC2822Strings","yearStr","monthStr","dayStr","hourStr","minuteStr","secondStr","result","untruncateYear","configFromRFC2822","preprocessRFC2822","trim","markInvalid","parsedArray","checkWeekday","weekdayStr","parsedInput","_a","calculateOffset","obsOffset","militaryOffset","numOffset","hm","expandFormat","_format","localFormattingTokens","replaceLongDateFormatTokens","lastIndex","defaults","c","configFromArray","currentDate","expectedWeekday","yearToUse","currentDateArray","nowValue","dayOfYearFromWeekInfo","w","weekYear","temp","weekdayOverflow","GG","W","E","curWeek","gg","e","_overflowWeeks","_overflowWeekday","dayOfYearFromWeeks","resDayOfYear","dayOfYear","_overflowDayOfYear","_nextDay","checkOverflow","ISO_8601","RFC_2822","skipped","totalParsedInputLength","inputLength","meridiemFixWrap","_hour","meridiemHour","isPm","configFromObject","normalizeObjectUnits","inputObject","normalizedProp","map","obj","createFromConfig","prepareConfig","_l","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromInput","configFromString","_arr","createLocalOrUTC","_input","isObjectEmpty","getOwnPropertyNames","k","parseDate","absRound","isAfter","isBefore","aspNetRegex","isoRegex","convertDuration","isDuration","parseIso","diffRes","momentsDifference","base","other","_other","cloneWithOffset","offsetDiff","setTime","positiveMomentsDifference","from","to","inp","period","addSubtract","isAdding","parseWeekday","_num","_weekDay","symbolMap","1","2","3","4","5","6","7","8","9","0","numberMap","١","٢","٣","٤","٥","٦","٧","٨","٩","٠","pluralForm","plurals","pluralize","u","f","arLocale","weekdaysParseExact","bgLocale","Number","lastDigit","last2Digits","monthsShortDot","caLocale","monthsStrictRegex","monthsShortStrictRegex","longMonthsParse","shortMonthsParse","plural","translate","csLocale","months$1","monthsShort$1","daLocale","processRelativeTime","deLocale","monthsParseExact","enGbLocale","esDoLocale","monthsRegex$1","monthsParse$1","esLocale","monthsRegex$2","monthsParse$2","esUsLocale","numbersPast","numbersFuture","verbalNumber","fiLocale","ll","lll","llll","frLocale","glLocale","monthsRegex$3","monthsParse$3","heLocale","१","२","३","४","५","६","७","८","९","०","hiLocale","weekEndings","huLocale","idLocale","itLocale","jaLocale","koLocale","isUpper","translateSingular","forms","special","ltLocale","translateSeconds","mnLocale","nbLocale","monthsShortWithDots","monthsShortWithoutDots","nlBeLocale","monthsRegex$4","monthsParse$4","nlLocale","monthsRegex$5","monthsParse$5","monthsNominative","monthsSubjective","plLocale","ptBrLocale","relativeTimeWithPlural","roLocale","word","ruLocale","monthsParse$6","skLocale","slLocale","svLocale","thLocale","suffixes","70","80","20","50","100","10","30","60","90","trLocale","zhCnLocale","isFirstDayOfWeek","isSameDay","getFirstDayOfMonth","formatDate","formatMoment","makeFormatFunction","formatArr","listLocales","updateLocale","tmpLocale","isDisabledDay","daysDisabled","isSame","inputMs","shiftDate","setFullDate"],"mappings":"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","sourcesContent":["\n\nexport function mod(n: number, x: number): number {\n  return (n % x + x) % x;\n}\n\nexport function absFloor(num: number): number {\n  return num < 0 ? Math.ceil(num) || 0 : Math.floor(num);\n}\n\n","import { absFloor } from '../utils';\n\nexport function isString(str: any): str is string {\n  return typeof str === 'string';\n}\n\nexport function isDate(value: any): value is Date {\n  return value instanceof Date || Object.prototype.toString.call(value) === '[object Date]';\n}\n\nexport function isBoolean(value: any): value is boolean {\n  return value === true || value === false;\n}\n\nexport function isDateValid(date: Date): boolean {\n  return date && date.getTime && !isNaN(date.getTime());\n}\n\nexport function isFunction(fn: any): fn is Function {\n  return (\n    fn instanceof Function ||\n    Object.prototype.toString.call(fn) === '[object Function]'\n  );\n}\n\nexport function isNumber(value?: any): value is number {\n  return typeof value === 'number' || Object.prototype.toString.call(value) === '[object Number]';\n}\n\nexport function isArray<T>(input?: any): input is T[] {\n  return (\n    input instanceof Array ||\n    Object.prototype.toString.call(input) === '[object Array]'\n  );\n}\n\nexport function hasOwnProp<T>(a: T /*object*/, b: string): b is Extract<keyof T, string> {\n  return Object.prototype.hasOwnProperty.call(a, b);\n}\n\nexport function isObject<T>(input: any /*object*/): input is T {\n  // IE8 will treat undefined and null as object if it wasn't for\n  // input != null\n  return (\n    input != null && Object.prototype.toString.call(input) === '[object Object]'\n  );\n}\n\nexport function isObjectEmpty(obj: any): boolean {\n  if (Object.getOwnPropertyNames) {\n    return (Object.getOwnPropertyNames(obj).length === 0);\n  }\n  let k;\n  for (k in obj) {\n    if (obj.hasOwnProperty(k)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n\nexport function isUndefined(input: any): boolean {\n  return input === void 0;\n}\n\nexport function toInt<T>(argumentForCoercion: string | number | T): number {\n  const coercedNumber = +argumentForCoercion;\n  let value = 0;\n\n  if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n    value = absFloor(coercedNumber);\n  }\n\n  return value;\n}\n","import { hasOwnProp, isString } from '../utils/type-checks';\nimport { DateObject, UnitOfTime } from '../types';\n\nconst aliases: { [key: string]: string } = {};\n\nexport type ExtendedUnitOfTime = UnitOfTime | 'date' | 'week' | 'isoWeek' | 'dayOfYear' |\n  'weekday' | 'isoWeekday' | 'second' | 'millisecond' | 'minute' | 'hour' | 'quarter' | 'weekYear' | 'isoWeekYear';\n\nconst _mapUnits: { [key: string]: UnitOfTime } = {\n  date: 'day',\n  hour: 'hours',\n  minute: 'minutes',\n  second: 'seconds',\n  millisecond: 'milliseconds'\n};\n\nexport function addUnitAlias(unit: ExtendedUnitOfTime, shorthand: string): void {\n  const lowerCase = unit.toLowerCase();\n  let _unit = unit;\n  if (lowerCase in _mapUnits) {\n    _unit = _mapUnits[lowerCase];\n  }\n  aliases[lowerCase] = aliases[`${lowerCase}s`] = aliases[shorthand] = _unit;\n}\n\nexport function normalizeUnits(units: string | string[]): string {\n  return isString(units) ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n}\n\nexport function normalizeObjectUnits(inputObject: { [key: string]: number }): DateObject {\n  const normalizedInput: { [key: string]: number } = {};\n  let normalizedProp;\n  let prop;\n\n  for (prop in inputObject) {\n    if (hasOwnProp(inputObject, prop)) {\n      normalizedProp = normalizeUnits(prop);\n      if (normalizedProp) {\n        normalizedInput[normalizedProp] = inputObject[prop];\n      }\n    }\n  }\n\n  return normalizedInput as any;\n}\n","// place in new Date([array])\nexport const YEAR = 0;\nexport const MONTH = 1;\nexport const DATE = 2;\nexport const HOUR = 3;\nexport const MINUTE = 4;\nexport const SECOND = 5;\nexport const MILLISECOND = 6;\nexport const WEEK = 7;\nexport const WEEKDAY = 8;\n","export function zeroFill(num: number,\n                         targetLength: number,\n                         forceSign?: boolean): string {\n  const absNumber = `${Math.abs(num)}`;\n  const zerosToFill = targetLength - absNumber.length;\n  const sign = num >= 0;\n  const _sign = sign ? (forceSign ? '+' : '') : '-';\n  // todo: this is crazy slow\n  const _zeros = Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1);\n\n  return (_sign + _zeros + absNumber);\n}\n","import { Locale } from '../locale/locale.class';\nimport { zeroFill } from '../utils/zero-fill';\nimport { isFunction } from '../utils/type-checks';\nimport { DateFormatterOptions, DateFormatterFn } from '../types';\n\nexport let formatFunctions: {\n  [key: string]: (date: Date, locale: Locale, isUTC?: boolean, offset?: number) => string;\n} = {};\nexport let formatTokenFunctions: { [key: string]: DateFormatterFn } = {};\n\n// tslint:disable-next-line\nexport const formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n// token:    'M'\n// padded:   ['MM', 2]\n// ordinal:  'Mo'\n// callback: function () { this.month() + 1 }\nexport function addFormatToken(token: string,\n                               padded: [string, number, boolean],\n                               ordinal: string,\n                               callback: DateFormatterFn): void {\n\n  if (token) {\n    formatTokenFunctions[token] = callback;\n  }\n\n  if (padded) {\n    formatTokenFunctions[padded[0]] = function (): string {\n      return zeroFill(callback.apply(null, arguments), padded[1], padded[2]);\n    };\n  }\n\n  if (ordinal) {\n    formatTokenFunctions[ordinal] = function (date: Date, opts: DateFormatterOptions): string {\n      return opts.locale.ordinal(callback.apply(null, arguments), token);\n    };\n  }\n}\n\nexport function makeFormatFunction(format: string):\n  (date: Date, locale: Locale, isUTC?: boolean, offset?: number) => string {\n\n  const array: string[] = format.match(formattingTokens);\n  const length = array.length;\n\n  const formatArr: string[] | DateFormatterFn[] = new Array(length);\n\n  for (let i = 0; i < length; i++) {\n    formatArr[i] = formatTokenFunctions[array[i]]\n      ? formatTokenFunctions[array[i]]\n      : removeFormattingTokens(array[i]);\n  }\n\n  return function (date: Date, locale: Locale, isUTC: boolean, offset = 0): string {\n    let output = '';\n    for (let j = 0; j < length; j++) {\n      output += isFunction(formatArr[j])\n        ? (formatArr[j] as DateFormatterFn).call(null, date, {format, locale, isUTC, offset})\n        : formatArr[j];\n    }\n\n    return output;\n  };\n}\n\nfunction removeFormattingTokens(input: string): string {\n  if (input.match(/\\[[\\s\\S]/)) {\n    return input.replace(/^\\[|\\]$/g, '');\n  }\n\n  return input.replace(/\\\\/g, '');\n}\n","export function createUTCDate(y?: number,\n                              m?: number,\n                              d?: number): Date {\n  const date = new Date(Date.UTC.apply(null, arguments));\n\n  // the Date.UTC function remaps years 0-99 to 1900-1999\n  if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n    date.setUTCFullYear(y);\n  }\n\n  return date;\n}\n\nexport function createDate(y?: number,\n                           m = 0,\n                           d = 1,\n                           h = 0,\n                           M = 0,\n                           s = 0,\n                           ms = 0): Date {\n  const date = new Date(y, m, d, h, M, s, ms);\n\n  // the date constructor remaps years 0-99 to 1900-1999\n  if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n    date.setFullYear(y);\n  }\n\n  return date;\n}\n","import { createDate } from '../create/date-from-array';\n\nexport function getHours(date: Date, isUTC = false): number {\n  return isUTC ? date.getUTCHours() : date.getHours();\n}\n\nexport function getMinutes(date: Date, isUTC = false): number {\n  return isUTC ? date.getUTCMinutes() : date.getMinutes();\n}\n\nexport function getSeconds(date: Date, isUTC = false): number {\n  return isUTC ? date.getUTCSeconds() : date.getSeconds();\n}\n\nexport function getMilliseconds(date: Date, isUTC = false): number {\n  return isUTC ? date.getUTCMilliseconds() : date.getMilliseconds();\n}\nexport function getTime(date: Date): number {\n  return date.getTime();\n}\n\nexport function getDay(date: Date, isUTC = false): number {\n  return isUTC ? date.getUTCDay() : date.getDay();\n}\n\nexport function getDate(date: Date, isUTC = false): number {\n  return isUTC ? date.getUTCDate() : date.getDate();\n}\n\nexport function getMonth(date: Date, isUTC = false): number {\n  return isUTC ? date.getUTCMonth() : date.getMonth();\n}\n\nexport function getFullYear(date: Date, isUTC = false): number {\n  return isUTC ? date.getUTCFullYear() : date.getFullYear();\n}\n\nexport function getUnixTime(date: Date): number {\n  return Math.floor(date.valueOf() / 1000);\n}\n\nexport function unix(date: Date): number {\n  return Math.floor(date.valueOf() / 1000);\n}\n\nexport function getFirstDayOfMonth(date: Date): Date {\n  return createDate(\n    date.getFullYear(),\n    date.getMonth(),\n    1,\n    date.getHours(),\n    date.getMinutes(),\n    date.getSeconds()\n  );\n}\n\nexport function daysInMonth(date: Date): number {\n  return _daysInMonth(date.getFullYear(), date.getMonth());\n}\n\nexport function _daysInMonth(year: number, month: number): number {\n  return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n}\n\nexport function isFirstDayOfWeek(date: Date, firstDayOfWeek: number): boolean {\n  return date.getDay() === firstDayOfWeek;\n}\n\nexport function isSameMonth(date1: Date, date2: Date) {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  return isSameYear(date1, date2) && getMonth(date1) === getMonth(date2);\n}\n\nexport function isSameYear(date1: Date, date2: Date) {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  return getFullYear(date1) === getFullYear(date2);\n}\n\nexport function isSameDay(date1: Date, date2: Date): boolean {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  return (\n    isSameYear(date1, date2) &&\n    isSameMonth(date1, date2) &&\n    getDate(date1) === getDate(date2)\n  );\n}\n","import { hasOwnProp, isFunction } from '../utils/type-checks';\nimport { Locale } from '../locale/locale.class';\n\nexport const match1 = /\\d/;            //       0 - 9\nexport const match2 = /\\d\\d/;          //      00 - 99\nexport const match3 = /\\d{3}/;         //     000 - 999\nexport const match4 = /\\d{4}/;         //    0000 - 9999\nexport const match6 = /[+-]?\\d{6}/;    // -999999 - 999999\nexport const match1to2 = /\\d\\d?/;         //       0 - 99\nexport const match3to4 = /\\d\\d\\d\\d?/;     //     999 - 9999\nexport const match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\nexport const match1to3 = /\\d{1,3}/;       //       0 - 999\nexport const match1to4 = /\\d{1,4}/;       //       0 - 9999\nexport const match1to6 = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\nexport const matchUnsigned = /\\d+/;           //       0 - inf\nexport const matchSigned = /[+-]?\\d+/;      //    -inf - inf\n\nexport const matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\nexport const matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\nexport const matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n// any word (or two) characters or numbers including two/three word month in arabic.\n// includes scottish gaelic two word and hyphenated months\n// tslint:disable-next-line\nexport const matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\nexport type RegExpTokenFn = (isStrict: boolean, locale: Locale) => RegExp;\nconst regexes: {[key: string]: RegExpTokenFn} = {};\n\n\nexport function addRegexToken(token: string, regex: RegExp | RegExpTokenFn, strictRegex?: RegExp): void {\n  if (isFunction(regex)) {\n    regexes[token] = regex;\n\n    return;\n  }\n\n  regexes[token] = function (isStrict: boolean, locale: Locale) {\n    return (isStrict && strictRegex) ? strictRegex : regex;\n  };\n}\n\nexport function getParseRegexForToken(token: string, locale: Locale): RegExp {\n  const _strict = false;\n  if (!hasOwnProp(regexes, token)) {\n    return new RegExp(unescapeFormat(token));\n  }\n\n  return regexes[token](_strict, locale);\n}\n\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\nfunction unescapeFormat(str: string): string {\n  // tslint:disable-next-line\n  return regexEscape(str\n    .replace('\\\\', '')\n    .replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, (matched, p1, p2, p3, p4) => p1 || p2 || p3 || p4)\n  );\n}\n\nexport function regexEscape(str: string): string {\n  return str.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n","// tslint:disable:max-line-length\nimport { hasOwnProp, isArray, isFunction, isNumber, isString, toInt } from '../utils/type-checks';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { DateArray, DateParseTokenFn } from '../types';\n\nconst tokens: {[key: string]: DateParseTokenFn} = {};\n\nexport function addParseToken(token: string | string[], callback: DateParseTokenFn | number) {\n  const _token = isString(token) ? [token] : token;\n  let func = callback;\n\n  if (isNumber(callback)) {\n    func = function (input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n      array[callback] = toInt(input);\n\n      return config;\n    };\n  }\n\n  if (isArray<string>(_token) && isFunction(func)) {\n    let i;\n    for (i = 0; i < _token.length; i++) {\n      tokens[_token[i]] = func;\n    }\n  }\n}\n\nexport function addWeekParseToken(token: string[], callback: DateParseTokenFn): void {\n  addParseToken(token, function (input: string, array: DateArray, config: DateParsingConfig, _token: string): DateParsingConfig {\n    config._w = config._w || {};\n\n    return callback(input, config._w, config, _token);\n  });\n}\n\n\nexport function addTimeToArrayFromToken(token: string, input: string, config: DateParsingConfig): DateParsingConfig {\n  if (input != null && hasOwnProp(tokens, token)) {\n    tokens[token](input, config._a, config, token);\n  }\n\n  return config;\n}\n","import { DateParsingConfig, DateParsingFlags } from './parsing.types';\n\nfunction defaultParsingFlags(): DateParsingFlags {\n  // We need to deep clone this object.\n  return {\n    empty: false,\n    unusedTokens: [],\n    unusedInput: [],\n    overflow: -2,\n    charsLeftOver: 0,\n    nullInput: false,\n    invalidMonth: null,\n    invalidFormat: false,\n    userInvalidated: false,\n    iso: false,\n    parsedDateParts: [],\n    meridiem: null,\n    rfc2822: false,\n    weekdayMismatch: false\n  };\n}\n\nexport function getParsingFlags(config: DateParsingConfig): DateParsingFlags {\n  if (config._pf == null) {\n    config._pf = defaultParsingFlags();\n  }\n\n  return config._pf;\n}\n","import { addFormatToken } from '../format/format';\nimport { getFullYear } from '../utils/date-getters';\nimport { addRegexToken, match1to2, match1to4, match1to6, match2, match4, match6, matchSigned } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { YEAR } from './constants';\nimport { toInt } from '../utils/type-checks';\nimport { addUnitPriority } from './priorities';\nimport { addUnitAlias } from './aliases';\nimport { DateFormatterOptions } from '../types';\n\n// FORMATTING\n\nfunction getYear(date: Date, opts: DateFormatterOptions): string {\n  return getFullYear(date, opts.isUTC).toString();\n}\n\nexport function initYear() {\n  addFormatToken('Y', null, null,\n    function (date: Date, opts: DateFormatterOptions): string {\n    const y = getFullYear(date, opts.isUTC);\n\n    return y <= 9999 ? y.toString(10) : `+${y}`;\n  });\n\n  addFormatToken(null, ['YY', 2, false], null,\n    function (date: Date, opts: DateFormatterOptions): string {\n    return (getFullYear(date, opts.isUTC) % 100).toString(10);\n  });\n\n  addFormatToken(null, ['YYYY', 4, false], null, getYear);\n  addFormatToken(null, ['YYYYY', 5, false], null, getYear);\n  addFormatToken(null, ['YYYYYY', 6, true], null, getYear);\n\n  // ALIASES\n\n  addUnitAlias('year', 'y');\n\n  // PRIORITIES\n\n  addUnitPriority('year', 1);\n\n  // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array, config) {\n    array[YEAR] = input.length === 2 ? parseTwoDigitYear(input) : toInt(input);\n\n    return config;\n  });\n  addParseToken('YY', function (input, array, config) {\n    array[YEAR] = parseTwoDigitYear(input);\n\n    return config;\n  });\n  addParseToken('Y', function (input, array, config) {\n    array[YEAR] = parseInt(input, 10);\n\n    return config;\n  });\n}\n\nexport function parseTwoDigitYear(input: string): number {\n  return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n}\n\nexport function daysInYear(year: number): number {\n  return isLeapYear(year) ? 366 : 365;\n}\n\nexport function isLeapYear(year: number): boolean {\n  return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n","import { addFormatToken } from '../format/format';\nimport { isLeapYear } from './year';\nimport { mod } from '../utils';\nimport { getMonth } from '../utils/date-getters';\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { MONTH } from './constants';\nimport { toInt } from '../utils/type-checks';\nimport { addUnitPriority } from './priorities';\nimport { addUnitAlias } from './aliases';\nimport { getParsingFlags } from '../create/parsing-flags';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { DateArray, DateFormatterOptions } from '../types';\n\n// todo: this is duplicate, source in date-getters.ts\nexport function daysInMonth(year: number, month: number): number {\n  if (isNaN(year) || isNaN(month)) {\n    return NaN;\n  }\n  const modMonth = mod(month, 12);\n  const _year = year + (month - modMonth) / 12;\n\n  return modMonth === 1\n    ? isLeapYear(_year) ? 29 : 28\n    : (31 - modMonth % 7 % 2);\n}\n\nexport function initMonth() {\n// FORMATTING\n\n  addFormatToken('M', ['MM', 2, false], 'Mo',\n    function(date: Date, opts: DateFormatterOptions): string {\n      return (getMonth(date, opts.isUTC) + 1).toString(10);\n    }\n  );\n\n  addFormatToken('MMM', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return opts.locale.monthsShort(date, opts.format, opts.isUTC);\n    }\n  );\n\n  addFormatToken('MMMM', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return opts.locale.months(date, opts.format, opts.isUTC);\n    }\n  );\n\n\n// ALIASES\n\n  addUnitAlias('month', 'M');\n\n// PRIORITY\n\n  addUnitPriority('month', 8);\n\n// PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function(isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function(isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n\n  addParseToken(['M', 'MM'], function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    array[MONTH] = toInt(input) - 1;\n\n    return config;\n  });\n\n  addParseToken(\n    ['MMM', 'MMMM'],\n    function(input: string, array: DateArray, config: DateParsingConfig, token: string): DateParsingConfig {\n      const month = config._locale.monthsParse(input, token, config._strict);\n      // if we didn't find a month name, mark the date as invalid.\n      if (month != null) {\n        array[MONTH] = month;\n      } else {\n        getParsingFlags(config).invalidMonth = !!input;\n      }\n\n      return config;\n    }\n  );\n}\n","import { TimeUnit } from '../types';\nimport { daysInMonth } from '../units/month';\nimport { isNumber } from './type-checks';\nimport { getDate, getFullYear, getMonth } from './date-getters';\nimport { isLeapYear } from '../units/year';\nimport { createDate } from '../create/date-from-array';\n\nconst defaultTimeUnit: TimeUnit = {\n  year: 0,\n  month: 0,\n  day: 0,\n  hour: 0,\n  minute: 0,\n  seconds: 0\n};\n\nexport function shiftDate(date: Date, unit: TimeUnit): Date {\n  const _unit = Object.assign({}, defaultTimeUnit, unit);\n  const year = date.getFullYear() + (_unit.year || 0);\n  const month = date.getMonth() + (_unit.month || 0);\n  let day = date.getDate() + (_unit.day || 0);\n  if (_unit.month && !_unit.day) {\n    day = Math.min(day, daysInMonth(year, month));\n  }\n\n  return createDate(\n    year,\n    month,\n    day,\n    date.getHours() + (_unit.hour || 0),\n    date.getMinutes() + (_unit.minute || 0),\n    date.getSeconds() + (_unit.seconds || 0)\n  );\n}\n\nexport function setFullDate(date: Date, unit: TimeUnit): Date {\n  return createDate(\n    getNum(date.getFullYear(), unit.year),\n    getNum(date.getMonth(), unit.month),\n    getNum(date.getDate(), unit.day),\n    getNum(date.getHours(), unit.hour),\n    getNum(date.getMinutes(), unit.minute),\n    getNum(date.getSeconds(), unit.seconds),\n    getNum(date.getMilliseconds(), unit.milliseconds)\n  );\n}\n\nfunction getNum(def: number, num?: number): number {\n  return isNumber(num) ? num : def;\n}\n\nexport function setFullYear(date: Date, value: number, isUTC?: boolean): Date {\n  const _month = getMonth(date, isUTC);\n  const _date = getDate(date, isUTC);\n  const _year = getFullYear(date, isUTC);\n  if (isLeapYear(_year) && _month === 1 && _date === 29) {\n    const _daysInMonth = daysInMonth(value, _month);\n    isUTC ? date.setUTCFullYear(value, _month, _daysInMonth) : date.setFullYear(value, _month, _daysInMonth);\n  }\n\n  isUTC ? date.setUTCFullYear(value) : date.setFullYear(value);\n\n  return date;\n}\n\nexport function setMonth(date: Date, value: number, isUTC?: boolean): Date {\n  const dayOfMonth = Math.min(getDate(date), daysInMonth(getFullYear(date), value));\n  isUTC ? date.setUTCMonth(value, dayOfMonth) : date.setMonth(value, dayOfMonth);\n\n  return date;\n}\n\nexport function setDay(date: Date, value: number, isUTC?: boolean): Date {\n  isUTC ? date.setUTCDate(value) : date.setDate(value);\n\n  return date;\n}\n\nexport function setHours(date: Date, value: number, isUTC?: boolean): Date {\n  isUTC ? date.setUTCHours(value) : date.setHours(value);\n\n  return date;\n}\n\nexport function setMinutes(date: Date, value: number, isUTC?: boolean): Date {\n  isUTC ? date.setUTCMinutes(value) : date.setMinutes(value);\n\n  return date;\n}\n\nexport function setSeconds(date: Date, value: number, isUTC?: boolean): Date {\n  isUTC ? date.setUTCSeconds(value) : date.setSeconds(value);\n\n  return date;\n}\n\nexport function setMilliseconds(date: Date, value: number, isUTC?: boolean): Date {\n  isUTC ? date.setUTCMilliseconds(value) : date.setMilliseconds(value);\n\n  return date;\n}\n\nexport function setDate(date: Date, value: number, isUTC?: boolean): Date {\n  isUTC ? date.setUTCDate(value) : date.setDate(value);\n\n  return date;\n}\n\nexport function setTime(date: Date, value: number): Date {\n  date.setTime(value);\n\n  return date;\n}\n","// fastest way to clone date\n// https://jsperf.com/clone-date-object2\nexport function cloneDate(date: Date): Date {\n  return new Date(date.getTime());\n}\n","// tslint:disable: switch-default\nimport { TimeUnit, UnitOfTime } from '../types';\nimport {\n  setDate, setFullDate, setHours, setMilliseconds, setMinutes, setMonth, setSeconds,\n  shiftDate\n} from './date-setters';\nimport { cloneDate } from '../create/clone';\nimport { setISODayOfWeek, setLocaleDayOfWeek } from '../units/day-of-week';\nimport { getMonth } from './date-getters';\nimport { add, subtract } from '../moment/add-subtract';\n\nexport function startOf(date: Date, unit: UnitOfTime, isUTC?: boolean): Date {\n  const _date = cloneDate(date);\n  // the following switch intentionally omits break keywords\n  // to utilize falling through the cases.\n  switch (unit) {\n    case 'year':\n      setMonth(_date, 0, isUTC);\n    /* falls through */\n    case 'quarter':\n    case 'month':\n      setDate(_date, 1, isUTC);\n    /* falls through */\n    case 'week':\n    case 'isoWeek':\n    case 'day':\n    case 'date':\n      setHours(_date, 0, isUTC);\n    /* falls through */\n    case 'hours':\n      setMinutes(_date, 0, isUTC);\n    /* falls through */\n    case 'minutes':\n      setSeconds(_date, 0, isUTC);\n    /* falls through */\n    case 'seconds':\n      setMilliseconds(_date, 0, isUTC);\n  }\n\n  // weeks are a special case\n  if (unit === 'week') {\n    setLocaleDayOfWeek(_date, 0, {isUTC});\n  }\n  if (unit === 'isoWeek') {\n    setISODayOfWeek(_date, 1);\n  }\n\n  // quarters are also special\n  if (unit === 'quarter') {\n    setMonth(_date, Math.floor(getMonth(_date, isUTC) / 3) * 3, isUTC);\n  }\n\n  return _date;\n}\n\nexport function endOf(date: Date, unit: UnitOfTime, isUTC?: boolean): Date {\n  let _unit = unit;\n  // 'date' is an alias for 'day', so it should be considered as such.\n  if (_unit === 'date') {\n    _unit = 'day';\n  }\n\n  const start = startOf(date, _unit, isUTC);\n  const _step = add(start, 1, _unit === 'isoWeek' ? 'week' : _unit, isUTC);\n  const res = subtract(_step, 1, 'milliseconds', isUTC);\n\n  return res;\n}\n","import { addFormatToken } from '../format/format';\nimport { Locale } from '../locale/locale.class';\nimport { getDay } from '../utils/date-getters';\nimport { addRegexToken, match1to2 } from '../parse/regex';\nimport { addUnitAlias } from './aliases';\nimport { addUnitPriority } from './priorities';\nimport { addWeekParseToken } from '../parse/token';\nimport { getParsingFlags } from '../create/parsing-flags';\nimport { isNumber, isString, toInt } from '../utils/type-checks';\nimport { DateFormatterOptions, WeekParsing } from '../types';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { add } from '../moment/add-subtract';\nimport { getLocale } from '../locale/locales';\n\n\nexport function initDayOfWeek() {\n// FORMATTING\n\n  addFormatToken('d', null, 'do',\n    function(date: Date, opts: DateFormatterOptions): string {\n      return getDay(date, opts.isUTC)\n        .toString(10);\n    }\n  );\n\n  addFormatToken('dd', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return opts.locale.weekdaysMin(date, opts.format, opts.isUTC);\n    }\n  );\n\n  addFormatToken('ddd', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return opts.locale.weekdaysShort(date, opts.format, opts.isUTC);\n    }\n  );\n\n  addFormatToken('dddd', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return opts.locale.weekdays(date, opts.format, opts.isUTC);\n    }\n  );\n\n  addFormatToken('e', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return getLocaleDayOfWeek(date, opts.locale, opts.isUTC)\n        .toString(10);\n      // return getDay(date, opts.isUTC).toString(10);\n    }\n  );\n  addFormatToken('E', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return getISODayOfWeek(date, opts.isUTC)\n        .toString(10);\n    }\n  );\n\n// ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E');\n\n// PRIORITY\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11);\n\n// PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n\n  addRegexToken('dd', function(isStrict: boolean, locale: Locale): RegExp {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n\n  addRegexToken('ddd', function(isStrict: boolean, locale: Locale): RegExp {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function(isStrict: boolean, locale: Locale): RegExp {\n    return locale.weekdaysRegex(isStrict);\n  });\n\n  addWeekParseToken(\n    ['dd', 'ddd', 'dddd'],\n    function(input: string, week: WeekParsing, config: DateParsingConfig, token) {\n      const weekday = config._locale.weekdaysParse(input, token, config._strict);\n      // if we didn't get a weekday name, mark the date as invalid\n      if (weekday != null) {\n        week.d = weekday;\n      } else {\n        getParsingFlags(config).invalidWeekday = !!input;\n      }\n\n      return config;\n    }\n  );\n\n  addWeekParseToken(\n    ['d', 'e', 'E'],\n    function(input: string, week: WeekParsing, config: DateParsingConfig, token: string): DateParsingConfig {\n      week[token] = toInt(input);\n\n      return config;\n    }\n  );\n}\n\n// HELPERS\n\nexport function parseWeekday(input: string | number, locale: Locale): number {\n  if (!isString(input)) {\n    return input;\n  }\n\n  const _num = parseInt(input, 10);\n  if (!isNaN(_num)) {\n    return _num;\n  }\n\n  const _weekDay = locale.weekdaysParse(input);\n  if (isNumber(_weekDay)) {\n    return _weekDay;\n  }\n\n  return null;\n}\n\nexport function parseIsoWeekday(input: string | number, locale: Locale = getLocale()): number {\n  if (isString(input)) {\n    return locale.weekdaysParse(input) % 7 || 7;\n  }\n\n  return isNumber(input) && isNaN(input) ? null : input;\n}\n\n// MOMENTS\n\nexport function getSetDayOfWeek(date: Date, input: number, opts: { isUTC?: boolean; locale: Locale }): Date | number {\n  if (!input) {\n    return getDayOfWeek(date, opts.isUTC);\n  }\n\n  return setDayOfWeek(date, input, opts.locale, opts.isUTC);\n}\n\nexport function setDayOfWeek(date: Date, input: number, locale = getLocale(), isUTC?: boolean): Date {\n  const day = getDay(date, isUTC);\n  const _input = parseWeekday(input, locale);\n\n  return add(date, _input - day, 'day');\n}\n\nexport function getDayOfWeek(date: Date, isUTC?: boolean): number {\n  return getDay(date, isUTC);\n}\n\n/********************************************/\n\n// todo: utc\n// getSetLocaleDayOfWeek\nexport function getLocaleDayOfWeek(date: Date, locale = getLocale(), isUTC?: boolean): number {\n  return (getDay(date, isUTC) + 7 - locale.firstDayOfWeek()) % 7;\n}\n\nexport function setLocaleDayOfWeek(date: Date, input: number, opts: { locale?: Locale; isUTC?: boolean } = {}): Date {\n  const weekday = getLocaleDayOfWeek(date, opts.locale, opts.isUTC);\n\n  return add(date, input - weekday, 'day');\n}\n\n\n// getSetISODayOfWeek\nexport function getISODayOfWeek(date: Date, isUTC?: boolean): number {\n  return getDay(date, isUTC) || 7;\n}\n\nexport function setISODayOfWeek(date: Date, input: number | string, opts: { locale?: Locale } = {}): Date {\n  // behaves the same as moment#day except\n  // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n  // as a setter, sunday should belong to the previous week.\n\n  const weekday = parseIsoWeekday(input, opts.locale);\n\n  return setDayOfWeek(date, getDayOfWeek(date) % 7 ? weekday : weekday - 7);\n}\n","import { addFormatToken } from '../format/format';\nimport { startOf } from '../utils/start-end-of';\nimport { addRegexToken, match1to3, match3 } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { addUnitPriority } from './priorities';\nimport { addUnitAlias } from './aliases';\nimport { DateArray, DateFormatterOptions } from '../types';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { toInt } from '../utils/type-checks';\nimport { add } from '../moment/add-subtract';\n\n\nexport function initDayOfYear() {\n// FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3, false], 'DDDo',\n    function(date: Date): string {\n      return getDayOfYear(date)\n        .toString(10);\n    }\n  );\n\n\n// ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD');\n\n// PRIORITY\n\n  addUnitPriority('dayOfYear', 4);\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(\n    ['DDD', 'DDDD'],\n    function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n      config._dayOfYear = toInt(input);\n\n      return config;\n    }\n  );\n}\n\nexport function getDayOfYear(date: Date, isUTC?: boolean): number {\n  const date1 = +startOf(date, 'day', isUTC);\n  const date2 = +startOf(date, 'year', isUTC);\n  const someDate = date1 - date2;\n  const oneDay = 1000 * 60 * 60 * 24;\n\n  return Math.round(someDate / oneDay) + 1;\n}\n\nexport function setDayOfYear(date: Date, input: number): Date {\n  const dayOfYear = getDayOfYear(date);\n\n  return add(date, (input - dayOfYear), 'day');\n}\n","/**\n *\n * @param {number} year\n * @param {number} dow - start-of-first-week\n * @param {number} doy - start-of-year\n * @returns {number}\n */\nimport { createUTCDate } from '../create/date-from-array';\nimport { daysInYear } from './year';\nimport { getDayOfYear } from './day-of-year';\nimport { getFullYear } from '../utils/date-getters';\n\nfunction firstWeekOffset(year: number, dow: number, doy: number): number {\n  // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n  const fwd = dow - doy + 7;\n  // first-week day local weekday -- which local weekday is fwd\n  const fwdlw = (createUTCDate(year, 0, fwd).getUTCDay() - dow + 7) % 7;\n\n  return -fwdlw + fwd - 1;\n}\n\n// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\nexport function dayOfYearFromWeeks(\n  year: number,\n  week: number,\n  weekday: number,\n  dow: number,\n  doy: number\n): { year: number; dayOfYear: number } {\n  const localWeekday = (7 + weekday - dow) % 7;\n  const weekOffset = firstWeekOffset(year, dow, doy);\n  const dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset;\n  let resYear: number;\n  let resDayOfYear: number;\n\n  if (dayOfYear <= 0) {\n    resYear = year - 1;\n    resDayOfYear = daysInYear(resYear) + dayOfYear;\n  } else if (dayOfYear > daysInYear(year)) {\n    resYear = year + 1;\n    resDayOfYear = dayOfYear - daysInYear(year);\n  } else {\n    resYear = year;\n    resDayOfYear = dayOfYear;\n  }\n\n  return {\n    year: resYear,\n    dayOfYear: resDayOfYear\n  };\n}\n\nexport function weekOfYear(date: Date, dow: number, doy: number, isUTC?: boolean): { week: number; year: number } {\n  const weekOffset = firstWeekOffset(getFullYear(date, isUTC), dow, doy);\n  const week = Math.floor((getDayOfYear(date, isUTC) - weekOffset - 1) / 7) + 1;\n  let resWeek: number;\n  let resYear: number;\n\n  if (week < 1) {\n    resYear = getFullYear(date, isUTC) - 1;\n    resWeek = week + weeksInYear(resYear, dow, doy);\n  } else if (week > weeksInYear(getFullYear(date, isUTC), dow, doy)) {\n    resWeek = week - weeksInYear(getFullYear(date, isUTC), dow, doy);\n    resYear = getFullYear(date, isUTC) + 1;\n  } else {\n    resYear = getFullYear(date, isUTC);\n    resWeek = week;\n  }\n\n  return {\n    week: resWeek,\n    year: resYear\n  };\n}\n\nexport function weeksInYear(year: number, dow: number, doy: number): number {\n  const weekOffset = firstWeekOffset(year, dow, doy);\n  const weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n\n  return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n","// tslint:disable:max-file-line-count max-line-length cyclomatic-complexity\n\nimport { weekOfYear } from '../units/week-calendar-utils';\nimport { hasOwnProp, isArray, isFunction } from '../utils/type-checks';\nimport { getDay, getMonth } from '../utils/date-getters';\nimport { matchWord, regexEscape } from '../parse/regex';\nimport { setDayOfWeek } from '../units/day-of-week';\n\nexport interface LocaleOptionsFormat {\n  format: string[];\n  standalone: string[];\n  isFormat?: RegExp;\n}\n\nexport type LocaleOptions = string[] | LocaleOptionsFormat;\n\nconst MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\nexport const defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n  '_'\n);\nexport const defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(\n  '_'\n);\nexport const defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\n  '_'\n);\nexport const defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split(\n  '_'\n);\nexport const defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\nexport const defaultLongDateFormat: { [index: string]: string } = {\n  LTS: 'h:mm:ss A',\n  LT: 'h:mm A',\n  L: 'MM/DD/YYYY',\n  LL: 'MMMM D, YYYY',\n  LLL: 'MMMM D, YYYY h:mm A',\n  LLLL: 'dddd, MMMM D, YYYY h:mm A'\n};\n\nexport const defaultOrdinal = '%d';\nexport const defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\nconst defaultMonthsShortRegex = matchWord;\nconst defaultMonthsRegex = matchWord;\n\nexport type OrdinalDateFn = (num: number, token?: string) => string;\nexport type PluralizeDateFn = (num: number, withoutSuffix: boolean,\n                               key?: string, isFuture?: boolean) => string;\n\nexport interface LocaleData {\n  abbr?: string;\n  parentLocale?: string;\n\n  months?: LocaleOptions | ((date: Date, format: string, isUTC?: boolean) => string | string[]);\n  monthsShort?: LocaleOptions | ((date: Date, format: string, isUTC?: boolean) => string | string[]);\n  monthsParseExact?: boolean;\n\n  weekdays?: LocaleOptions | ((date: Date, format: string, isUTC?: boolean) => string | string[]);\n  weekdaysShort?: string[] | ((date: Date, format: string, isUTC?: boolean) => string | string[]);\n  weekdaysMin?: string[] | ((date: Date, format: string, isUTC?: boolean) => string | string[]);\n  weekdaysParseExact?: boolean;\n\n  longDateFormat?: { [index: string]: string };\n  calendar?: {\n    [key: string]: (string\n      | ((date: Date, now?: Date) => string)\n      // tslint:disable-next-line\n      | ((dayOfWeek: number, isNextWeek: boolean) => string))\n  };\n  relativeTime?: { [key: string]: string | PluralizeDateFn };\n  dayOfMonthOrdinalParse?: RegExp;\n  ordinal?: string | OrdinalDateFn;\n\n  week?: { dow?: number; doy?: number };\n\n  invalidDate?: string;\n\n  monthsRegex?: RegExp;\n  monthsParse?: RegExp[];\n  monthsShortRegex?: RegExp;\n  monthsStrictRegex?: RegExp;\n  monthsShortStrictRegex?: RegExp;\n  longMonthsParse?: RegExp[];\n  shortMonthsParse?: RegExp[];\n\n  meridiemParse?: RegExp;\n\n  meridiemHour?(hour: number, meridiem: string): number;\n\n  preparse?(str: string): string;\n\n  postformat?(str: string | number): string;\n\n  meridiem?(hour: number, minute?: number, isLower?: boolean): string;\n\n  isPM?(input: string): boolean;\n}\n\nexport class Locale {\n  parentLocale?: Locale;\n  _abbr: string;\n  _config: LocaleData;\n  meridiemHour: (hour: number, meridiem: string) => number;\n\n  _invalidDate: string;\n  _week: { dow: number; doy: number };\n  _dayOfMonthOrdinalParse: RegExp;\n  _ordinalParse: RegExp;\n  _meridiemParse: RegExp;\n\n  private _calendar: { [key: string]: string };\n  private _relativeTime: { future: string; past: string };\n  private _months: LocaleOptions;\n  private _monthsShort: LocaleOptions;\n  private _monthsRegex: RegExp;\n  private _monthsShortRegex: RegExp;\n  private _monthsStrictRegex: RegExp;\n  private _monthsShortStrictRegex: RegExp;\n  private _monthsParse: RegExp[];\n  private _longMonthsParse: string[] | RegExp[];\n  private _shortMonthsParse: string[] | RegExp[];\n  private _monthsParseExact: RegExp;\n  private _weekdaysParseExact: boolean;\n  private _weekdaysRegex: RegExp;\n  private _weekdaysShortRegex: RegExp;\n  private _weekdaysMinRegex: RegExp;\n\n  private _weekdaysStrictRegex: RegExp;\n  private _weekdaysShortStrictRegex: RegExp;\n  private _weekdaysMinStrictRegex: RegExp;\n\n  private _weekdays: LocaleOptions;\n  private _weekdaysShort: string[];\n  private _weekdaysMin: string[];\n  private _weekdaysParse: string[] | RegExp[];\n  private _minWeekdaysParse: string[] | RegExp[];\n  private _shortWeekdaysParse: string[] | RegExp[];\n  private _fullWeekdaysParse: RegExp[];\n  private _longDateFormat: { [key: string]: string };\n\n  private _ordinal: string;\n\n  constructor(config: LocaleData) {\n    if (!!config) {\n      this.set(config);\n    }\n  }\n\n  set(config: LocaleData): void {\n    let confKey;\n    for (confKey in config) {\n      if (!config.hasOwnProperty(confKey)) {\n        continue;\n      }\n      const prop = config[confKey as keyof LocaleData];\n      const key = (isFunction(prop) ? confKey : `_${confKey}`) as keyof Locale;\n\n      this[key] = prop as any;\n    }\n\n    this._config = config;\n  }\n\n  calendar(key: string, date: Date, now: Date): string {\n    const output = this._calendar[key] || this._calendar.sameElse;\n\n    return isFunction(output) ? output.call(null, date, now) : output;\n  }\n\n  longDateFormat(key: string) {\n    const format = this._longDateFormat[key];\n    const formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val: string) {\n      return val.slice(1);\n    });\n\n    return this._longDateFormat[key];\n  }\n\n  get invalidDate(): string {\n    return this._invalidDate;\n  }\n\n  set invalidDate(val: string) {\n    this._invalidDate = val;\n  }\n\n  ordinal(num: number, token?: string): string {\n    return this._ordinal.replace('%d', num.toString(10));\n  }\n\n  preparse(str: string) {\n    return str;\n  }\n\n  postformat(str: string) {\n    return str;\n  }\n\n  relativeTime(num: number, withoutSuffix: boolean, str: 'future' | 'past', isFuture: boolean): string {\n    const output = this._relativeTime[str];\n\n    return (isFunction(output)) ?\n      output(num, withoutSuffix, str, isFuture) :\n      output.replace(/%d/i, num.toString(10));\n  }\n\n  pastFuture(diff: number, output: string): string {\n    const format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  /** Months */\n  months(): string[];\n  months(date: Date, format?: string, isUTC?: boolean): string;\n  months(date?: Date, format?: string, isUTC = false): string | string[] {\n    if (!date) {\n      return isArray<string>(this._months)\n        ? this._months\n        : this._months.standalone;\n    }\n\n    if (isArray<string>(this._months)) {\n      return this._months[getMonth(date, isUTC)];\n    }\n\n    const key = (this._months.isFormat || MONTHS_IN_FORMAT).test(format)\n      ? 'format'\n      : 'standalone';\n\n    return this._months[key][getMonth(date, isUTC)];\n  }\n\n  monthsShort(): string[];\n  monthsShort(date?: Date, format?: string, isUTC?: boolean): string;\n  monthsShort(date?: Date, format?: string, isUTC = false): string | string[] {\n    if (!date) {\n      return isArray<string>(this._monthsShort)\n        ? this._monthsShort\n        : this._monthsShort.standalone;\n    }\n\n    if (isArray<string>(this._monthsShort)) {\n      return this._monthsShort[getMonth(date, isUTC)];\n    }\n    const key = MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone';\n\n    return this._monthsShort[key][getMonth(date, isUTC)];\n  }\n\n  monthsParse(monthName: string, format?: string, strict?: boolean): number {\n    let date;\n    let regex;\n\n    if (this._monthsParseExact) {\n      return this.handleMonthStrictParse(monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    }\n\n    // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n    let i;\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      date = new Date(Date.UTC(2000, i));\n      if (strict && !this._longMonthsParse[i]) {\n        const _months = this.months(date, '', true).replace('.', '');\n        const _shortMonths = this.monthsShort(date, '', true).replace('.', '');\n        this._longMonthsParse[i] = new RegExp(`^${_months}$`, 'i');\n        this._shortMonthsParse[i] = new RegExp(`^${_shortMonths}$`, 'i');\n      }\n      if (!strict && !this._monthsParse[i]) {\n        regex = `^${this.months(date, '', true)}|^${this.monthsShort(date, '', true)}`;\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      }\n      // test the regex\n      if (strict && format === 'MMMM' && (this._longMonthsParse[i] as RegExp).test(monthName)) {\n        return i;\n      }\n\n      if (strict && format === 'MMM' && (this._shortMonthsParse[i] as RegExp).test(monthName)) {\n        return i;\n      }\n\n      if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  }\n\n  monthsRegex(isStrict: boolean): RegExp {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this.computeMonthsParse();\n      }\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      }\n\n      return this._monthsRegex;\n    }\n\n    if (!hasOwnProp(this, '_monthsRegex')) {\n      this._monthsRegex = defaultMonthsRegex;\n    }\n\n    return this._monthsStrictRegex && isStrict ?\n      this._monthsStrictRegex : this._monthsRegex;\n  }\n\n  monthsShortRegex(isStrict: boolean): RegExp {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this.computeMonthsParse();\n      }\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      }\n\n      return this._monthsShortRegex;\n    }\n    if (!hasOwnProp(this, '_monthsShortRegex')) {\n      this._monthsShortRegex = defaultMonthsShortRegex;\n    }\n\n    return this._monthsShortStrictRegex && isStrict ?\n      this._monthsShortStrictRegex : this._monthsShortRegex;\n  }\n\n  /** Week */\n  week(date: Date, isUTC?: boolean): number {\n    return weekOfYear(date, this._week.dow, this._week.doy, isUTC).week;\n  }\n\n  firstDayOfWeek(): number {\n    return this._week.dow;\n  }\n\n  firstDayOfYear(): number {\n    return this._week.doy;\n  }\n\n  /** Day of Week */\n  weekdays(): string[];\n  weekdays(date: Date, format?: string, isUTC?: boolean): string;\n  weekdays(date?: Date, format?: string, isUTC?: boolean): string | string[] {\n    if (!date) {\n      return isArray<string>(this._weekdays)\n        ? this._weekdays\n        : this._weekdays.standalone;\n    }\n\n    if (isArray<string>(this._weekdays)) {\n      return this._weekdays[getDay(date, isUTC)];\n    }\n\n    const _key = this._weekdays.isFormat.test(format)\n      ? 'format'\n      : 'standalone';\n\n    return this._weekdays[_key][getDay(date, isUTC)];\n  }\n\n  weekdaysMin(): string[];\n  weekdaysMin(date: Date, format?: string, isUTC?: boolean): string;\n  weekdaysMin(date?: Date, format?: string, isUTC?: boolean): string | string[] {\n    return date ? this._weekdaysMin[getDay(date, isUTC)] : this._weekdaysMin;\n  }\n\n  weekdaysShort(): string[];\n  weekdaysShort(date: Date, format?: string, isUTC?: boolean): string;\n  weekdaysShort(date?: Date, format?: string, isUTC?: boolean): string | string[] {\n    return date ? this._weekdaysShort[getDay(date, isUTC)] : this._weekdaysShort;\n  }\n\n\n  // proto.weekdaysParse  =        localeWeekdaysParse;\n  weekdaysParse(weekdayName?: string, format?: string, strict?: boolean): number {\n    let i;\n    let regex;\n\n    if (this._weekdaysParseExact) {\n      return this.handleWeekStrictParse(weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      // fix: here is the issue\n      const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp(`^${this.weekdays(date, '', true).replace('.', '\\.?')}$`, 'i');\n        this._shortWeekdaysParse[i] = new RegExp(`^${this.weekdaysShort(date, '', true).replace('.', '\\.?')}$`, 'i');\n        this._minWeekdaysParse[i] = new RegExp(`^${this.weekdaysMin(date, '', true).replace('.', '\\.?')}$`, 'i');\n      }\n      if (!this._weekdaysParse[i]) {\n        regex = `^${this.weekdays(date, '', true)}|^${this.weekdaysShort(date, '', true)}|^${this.weekdaysMin(date, '', true)}`;\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      }\n\n      if (!isArray<RegExp>(this._fullWeekdaysParse)\n        || !isArray<RegExp>(this._shortWeekdaysParse)\n        || !isArray<RegExp>(this._minWeekdaysParse)\n        || !isArray<RegExp>(this._weekdaysParse)) {\n        return;\n      }\n\n      // test the regex\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  }\n\n  // proto.weekdaysRegex       =        weekdaysRegex;\n  weekdaysRegex(isStrict: boolean) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this.computeWeekdaysParse();\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = matchWord;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ?\n        this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  // proto.weekdaysShortRegex  =        weekdaysShortRegex;\n  // proto.weekdaysMinRegex    =        weekdaysMinRegex;\n\n\n  weekdaysShortRegex(isStrict?: boolean): RegExp {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this.computeWeekdaysParse();\n      }\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = matchWord;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ?\n        this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  weekdaysMinRegex(isStrict?: boolean): RegExp {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this.computeWeekdaysParse();\n      }\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = matchWord;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ?\n        this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  isPM(input: string): boolean {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return input.toLowerCase().charAt(0) === 'p';\n  }\n\n  meridiem(hours: number, minutes: number, isLower: boolean): string {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    }\n\n    return isLower ? 'am' : 'AM';\n  }\n\n  formatLongDate(key: string) {\n    this._longDateFormat = this._longDateFormat ? this._longDateFormat : defaultLongDateFormat;\n    const format = this._longDateFormat[key];\n    const formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[\n      key\n      ] = formatUpper.replace(/MMMM|MM|DD|dddd/g, (val: string) => {\n      return val.slice(1);\n    });\n\n    return this._longDateFormat[key];\n  }\n\n  private handleMonthStrictParse(monthName: string, format: string, strict?: boolean) {\n    const llc = monthName.toLocaleLowerCase();\n    let i;\n    let ii;\n    let mom;\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n      for (i = 0; i < 12; ++i) {\n        mom = new Date(2000, i);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = (this._shortMonthsParse as string[]).indexOf(llc);\n\n        return ii !== -1 ? ii : null;\n      }\n      ii = (this._longMonthsParse as string[]).indexOf(llc);\n\n      return ii !== -1 ? ii : null;\n    }\n\n    if (format === 'MMM') {\n      ii = (this._shortMonthsParse as string[]).indexOf(llc);\n      if (ii !== -1) {\n        return ii;\n      }\n\n      ii = (this._longMonthsParse as string[]).indexOf(llc);\n\n      return ii !== -1 ? ii : null;\n    }\n\n    ii = (this._longMonthsParse as string[]).indexOf(llc);\n    if (ii !== -1) {\n      return ii;\n    }\n    ii = (this._shortMonthsParse as string[]).indexOf(llc);\n\n    return ii !== -1 ? ii : null;\n  }\n\n  private handleWeekStrictParse(weekdayName: string, format: string, strict: boolean): number {\n    let ii;\n    const llc = weekdayName.toLocaleLowerCase();\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      let i;\n      for (i = 0; i < 7; ++i) {\n        const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n        this._minWeekdaysParse[i] = this.weekdaysMin(date).toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(date).toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(date, '').toLocaleLowerCase();\n      }\n    }\n\n    if (!isArray<string>(this._weekdaysParse)\n      || !isArray<string>(this._shortWeekdaysParse)\n      || !isArray<string>(this._minWeekdaysParse)) {\n      return;\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = this._weekdaysParse.indexOf(llc);\n\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = this._shortWeekdaysParse.indexOf(llc);\n\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = this._minWeekdaysParse.indexOf(llc);\n\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = this._weekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._shortWeekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._minWeekdaysParse.indexOf(llc);\n\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = this._shortWeekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._weekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._minWeekdaysParse.indexOf(llc);\n\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = this._minWeekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._weekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._shortWeekdaysParse.indexOf(llc);\n\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  private computeMonthsParse() {\n    const shortPieces: string[] = [];\n    const longPieces: string[] = [];\n    const mixedPieces: string[] = [];\n    let date;\n\n    let i;\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      date = new Date(2000, i);\n      shortPieces.push(this.monthsShort(date, ''));\n      longPieces.push(this.months(date, ''));\n      mixedPieces.push(this.months(date, ''));\n      mixedPieces.push(this.monthsShort(date, ''));\n    }\n    // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp(`^(${mixedPieces.join('|')})`, 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp(`^(${longPieces.join('|')})`, 'i');\n    this._monthsShortStrictRegex = new RegExp(`^(${shortPieces.join('|')})`, 'i');\n  }\n\n  private computeWeekdaysParse() {\n    const minPieces = [];\n    const shortPieces = [];\n    const longPieces = [];\n    const mixedPieces = [];\n\n    let i;\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      // let mom = createUTC([2000, 1]).day(i);\n      const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n      const minp = this.weekdaysMin(date);\n      const shortp = this.weekdaysShort(date);\n      const longp = this.weekdays(date);\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    }\n    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp(`^(${mixedPieces.join('|')})`, 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n\n    this._weekdaysStrictRegex = new RegExp(`^(${longPieces.join('|')})`, 'i');\n    this._weekdaysShortStrictRegex = new RegExp(`^(${shortPieces.join('|')})`, 'i');\n    this._weekdaysMinStrictRegex = new RegExp(`^(${minPieces.join('|')})`, 'i');\n  }\n}\n\nfunction cmpLenRev(a: string, b: string): number {\n  return b.length - a.length;\n}\n","export const defaultCalendar = {\n  sameDay: '[Today at] LT',\n  nextDay: '[Tomorrow at] LT',\n  nextWeek: 'dddd [at] LT',\n  lastDay: '[Yesterday at] LT',\n  lastWeek: '[Last] dddd [at] LT',\n  sameElse: 'L'\n};\n","import {\n  defaultDayOfMonthOrdinalParse,\n  defaultLocaleMonths,\n  defaultLocaleMonthsShort,\n  defaultLocaleWeekdays,\n  defaultLocaleWeekdaysMin,\n  defaultLocaleWeekdaysShort, defaultLongDateFormat, defaultOrdinal,\n  LocaleData\n} from './locale.class';\nimport { defaultCalendar } from './calendar';\n\nexport const defaultInvalidDate = 'Invalid date';\n\nexport const defaultLocaleWeek = {\n  dow: 0, // Sunday is the first day of the week.\n  doy: 6 // The week that contains Jan 1st is the first week of the year.\n};\n\nexport const defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\nexport const defaultRelativeTime: {[key: string]: string} = {\n  future : 'in %s',\n  past   : '%s ago',\n  s  : 'a few seconds',\n  ss : '%d seconds',\n  m  : 'a minute',\n  mm : '%d minutes',\n  h  : 'an hour',\n  hh : '%d hours',\n  d  : 'a day',\n  dd : '%d days',\n  M  : 'a month',\n  MM : '%d months',\n  y  : 'a year',\n  yy : '%d years'\n};\n\nexport const baseConfig: LocaleData = {\n  calendar: defaultCalendar,\n  longDateFormat: defaultLongDateFormat,\n  invalidDate: defaultInvalidDate,\n  ordinal: defaultOrdinal,\n  dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n  relativeTime: defaultRelativeTime,\n\n  months: defaultLocaleMonths,\n  monthsShort: defaultLocaleMonthsShort,\n\n  week: defaultLocaleWeek,\n\n  weekdays: defaultLocaleWeekdays,\n  weekdaysMin: defaultLocaleWeekdaysMin,\n  weekdaysShort: defaultLocaleWeekdaysShort,\n\n  meridiemParse: defaultLocaleMeridiemParse\n};\n","// compare two arrays, return the number of differences\nimport { toInt } from './type-checks';\n\nexport function compareArrays<T>(array1: T[], array2: T[], dontConvert: boolean) {\n  const len = Math.min(array1.length, array2.length);\n  const lengthDiff = Math.abs(array1.length - array2.length);\n  let diffs = 0;\n  let i;\n  for (i = 0; i < len; i++) {\n    if ((dontConvert && array1[i] !== array2[i])\n      || (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n      diffs++;\n    }\n  }\n\n  return diffs + lengthDiff;\n}\n","import { addFormatToken } from '../format/format';\nimport { Locale } from '../locale/locale.class';\nimport { weekOfYear } from './week-calendar-utils';\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\nimport { addUnitAlias } from './aliases';\nimport { addUnitPriority } from './priorities';\nimport { addWeekParseToken } from '../parse/token';\nimport { toInt } from '../utils/type-checks';\nimport { DateFormatterOptions, WeekParsing } from '../types';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { getLocale } from '../locale/locales';\nimport { add } from '../moment/add-subtract';\n\n// FORMATTING\n\nexport function initWeek() {\n  addFormatToken('w', ['ww', 2, false], 'wo',\n    function(date: Date, opts: DateFormatterOptions): string {\n      return getWeek(date, opts.locale)\n        .toString(10);\n    }\n  );\n\n  addFormatToken('W', ['WW', 2, false], 'Wo',\n    function(date: Date): string {\n      return getISOWeek(date)\n        .toString(10);\n    }\n  );\n\n// ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W');\n\n// PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5);\n\n// PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n\n  addWeekParseToken(\n    ['w', 'ww', 'W', 'WW'],\n    function(input: string, week: WeekParsing, config: DateParsingConfig, token: string): DateParsingConfig {\n      week[token.substr(0, 1)] = toInt(input);\n\n      return config;\n    }\n  );\n\n// export function getSetWeek (input) {\n//   var week = this.localeData().week(this);\n//   return input == null ? week : this.add((input - week) * 7, 'd');\n// }\n}\n\nexport function setWeek(date: Date, input: number, locale = getLocale()): Date {\n  const week = getWeek(date, locale);\n\n  return add(date, (input - week) * 7, 'day');\n}\n\nexport function getWeek(date: Date, locale = getLocale(), isUTC?: boolean): number {\n  return locale.week(date, isUTC);\n}\n\n// export function getSetISOWeek (input) {\n//   var week = weekOfYear(this, 1, 4).week;\n//   return input == null ? week : this.add((input - week) * 7, 'd');\n// }\n\nexport function setISOWeek(date: Date, input: number): Date {\n  const week = getISOWeek(date);\n\n  return add(date, (input - week) * 7, 'day');\n}\n\nexport function getISOWeek(date: Date, isUTC?: boolean): number {\n  return weekOfYear(date, 1, 4, isUTC).week;\n}\n\n","import { addFormatToken } from '../format/format';\nimport { addUnitAlias } from './aliases';\nimport { addUnitPriority } from './priorities';\nimport { addRegexToken, match1to2, match1to4, match1to6, match2, match4, match6, matchSigned } from '../parse/regex';\nimport { addWeekParseToken } from '../parse/token';\nimport { toInt } from '../utils/type-checks';\nimport { parseTwoDigitYear } from './year';\nimport { dayOfYearFromWeeks, weekOfYear, weeksInYear } from './week-calendar-utils';\nimport { createUTCDate } from '../create/date-from-array';\nimport { getISOWeek, getWeek } from './week';\nimport { getISODayOfWeek, getLocaleDayOfWeek } from './day-of-week';\nimport { getLocale } from '../locale/locales';\nimport { setDate, setFullYear, setMonth } from '../utils/date-setters';\nimport { getDate, getFullYear, getMonth } from '../utils/date-getters';\nimport { Locale } from '../locale/locale.class';\nimport { DateFormatterFn, DateFormatterOptions, WeekParsing } from '../types';\n\n// FORMATTING\n\nexport function initWeekYear() {\n  addFormatToken(null, ['gg', 2, false], null,\n    function (date: Date, opts: DateFormatterOptions): string {\n      // return this.weekYear() % 100;\n      return (getWeekYear(date, opts.locale) % 100).toString();\n    }\n  );\n\n  addFormatToken(null, ['GG', 2, false], null,\n    function (date: Date): string {\n      // return this.isoWeekYear() % 100;\n      return (getISOWeekYear(date) % 100).toString();\n    }\n  );\n\n  addWeekYearFormatToken('gggg', _getWeekYearFormatCb);\n  addWeekYearFormatToken('ggggg', _getWeekYearFormatCb);\n  addWeekYearFormatToken('GGGG', _getISOWeekYearFormatCb);\n  addWeekYearFormatToken('GGGGG', _getISOWeekYearFormatCb);\n\n// ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG');\n\n// PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1);\n\n\n// PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'],\n    function (input, week: WeekParsing, config, token) {\n      week[token.substr(0, 2)] = toInt(input);\n\n      return config;\n    });\n\n  addWeekParseToken(['gg', 'GG'], function (input, week: WeekParsing, config, token) {\n    week[token] = parseTwoDigitYear(input);\n\n    return config;\n  });\n}\n\nfunction addWeekYearFormatToken(token: string, getter: DateFormatterFn): void {\n  addFormatToken(null, [token, token.length, false], null, getter);\n}\n\nfunction _getWeekYearFormatCb(date: Date, opts: DateFormatterOptions): string {\n  return getWeekYear(date, opts.locale).toString();\n}\n\nfunction _getISOWeekYearFormatCb(date: Date): string {\n  return getISOWeekYear(date).toString();\n}\n\n// MOMENTS\n\nexport function getSetWeekYear(date: Date, input: number, locale = getLocale(), isUTC?: boolean): number | Date {\n  return getSetWeekYearHelper(date,\n    input,\n    // this.week(),\n    getWeek(date, locale, isUTC),\n    // this.weekday(),\n    getLocaleDayOfWeek(date, locale, isUTC),\n    locale.firstDayOfWeek(),\n    locale.firstDayOfYear(),\n    isUTC);\n}\n\nexport function getWeekYear(date: Date, locale = getLocale(), isUTC?: boolean): number {\n  return weekOfYear(date, locale.firstDayOfWeek(), locale.firstDayOfYear(), isUTC).year;\n}\n\nexport function getSetISOWeekYear(date: Date, input: number, isUTC?: boolean): number | Date {\n  return getSetWeekYearHelper(date, input, getISOWeek(date, isUTC), getISODayOfWeek(date, isUTC), 1, 4);\n}\n\nexport function getISOWeekYear(date: Date, isUTC?: boolean): number {\n  return weekOfYear(date, 1, 4, isUTC).year;\n}\n\nexport function getISOWeeksInYear(date: Date, isUTC?: boolean) {\n  return weeksInYear(getFullYear(date, isUTC), 1, 4);\n}\n\nexport function getWeeksInYear(date: Date, isUTC?: boolean, locale: Locale = getLocale()): number {\n  return weeksInYear(getFullYear(date, isUTC), locale.firstDayOfWeek(), locale.firstDayOfYear());\n}\n\nfunction getSetWeekYearHelper(date: Date, input: number, week: number,\n                              weekday: number, dow: number, doy: number, isUTC?: boolean): number | Date {\n  if (!input) {\n    return getWeekYear(date, void 0, isUTC);\n  }\n\n  const weeksTarget = weeksInYear(input, dow, doy);\n  const _week = week > weeksTarget ? weeksTarget : week;\n\n  return setWeekAll(date, input, _week, weekday, dow, doy);\n}\n\nfunction setWeekAll(date: Date, weekYear: number, week: number,\n                    weekday: number, dow: number, doy: number): Date {\n  const dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n  const _date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n  setFullYear(date, getFullYear(_date, true), true);\n  setMonth(date, getMonth(_date, true), true);\n  setDate(date, getDate(_date, true), true);\n\n  return date;\n}\n","import { addFormatToken } from '../format/format';\nimport { unix } from '../utils/date-getters';\nimport { addRegexToken, matchSigned, matchTimestamp } from '../parse/regex';\nimport { addParseToken} from '../parse/token';\nimport { toInt } from '../utils/type-checks';\nimport { DateArray } from '../types';\nimport { DateParsingConfig } from '../create/parsing.types';\n\n\nexport function initTimestamp() {\n// FORMATTING\n\n  addFormatToken('X', null, null, function(date: Date): string {\n    return unix(date)\n      .toString(10);\n  });\n  addFormatToken('x', null, null, function(date: Date): string {\n    return date.valueOf()\n      .toString(10);\n  });\n\n// PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n\n  addParseToken('X', function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    config._d = new Date(parseFloat(input) * 1000);\n\n    return config;\n  });\n  addParseToken('x', function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    config._d = new Date(toInt(input));\n\n    return config;\n  });\n}\n","import { addFormatToken } from '../format/format';\nimport { addRegexToken, match1 } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { MONTH } from './constants';\nimport { toInt } from '../utils/type-checks';\nimport { getMonth } from '../utils/date-getters';\nimport { DateArray, DateFormatterOptions } from '../types';\nimport { addUnitPriority } from './priorities';\nimport { addUnitAlias } from './aliases';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { setMonth } from '../utils/date-setters';\n\n\nexport function initQuarter() {\n// FORMATTING\n\n  addFormatToken('Q', null, 'Qo',\n    function(date: Date, opts: DateFormatterOptions): string {\n      return getQuarter(date, opts.isUTC)\n        .toString(10);\n    }\n  );\n\n// ALIASES\n\n  addUnitAlias('quarter', 'Q');\n\n// PRIORITY\n\n  addUnitPriority('quarter', 7);\n\n// PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    array[MONTH] = (toInt(input) - 1) * 3;\n\n    return config;\n  });\n}\n\n// MOMENTS\n\nexport function getQuarter(date: Date, isUTC = false): number {\n  return Math.ceil((getMonth(date, isUTC) + 1) / 3);\n}\n\nexport function setQuarter(date: Date, quarter: number, isUTC?: boolean): Date {\n  return setMonth(date, (quarter - 1) * 3 + getMonth(date, isUTC) % 3, isUTC);\n}\n\n// export function getSetQuarter(input) {\n//   return input == null\n//     ? Math.ceil((this.month() + 1) / 3)\n//     : this.month((input - 1) * 3 + this.month() % 3);\n// }\n","// tslint:disable:no-bitwise max-line-length\n// FORMATTING\n\nimport { addFormatToken } from '../format/format';\nimport { zeroFill } from '../utils/zero-fill';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { isNumber, isString, toInt } from '../utils/type-checks';\nimport { addRegexToken, matchOffset, matchShortOffset } from '../parse/regex';\nimport { add } from '../moment/add-subtract';\nimport { addParseToken } from '../parse/token';\nimport { DateArray } from '../types';\nimport { cloneDate } from '../create/clone';\nimport { setMonth } from '../utils/date-setters';\n\nfunction addOffsetFormatToken(token: string, separator: string): void {\n  addFormatToken(token, null, null, function (date: Date, config): string {\n    let offset = getUTCOffset(date, {_isUTC: config.isUTC, _offset: config.offset});\n    let sign = '+';\n    if (offset < 0) {\n      offset = -offset;\n      sign = '-';\n    }\n\n    return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n  });\n}\n\nexport function initOffset() {\n  addOffsetFormatToken('Z', ':');\n  addOffsetFormatToken('ZZ', '');\n\n// PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n\n    return config;\n  });\n}\n\n// HELPERS\n\n// timezone chunker\n// '+10:00' > ['10',  '00']\n// '-1530'  > ['-15', '30']\nconst chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\nfunction offsetFromString(matcher: RegExp, str: string): number {\n  const matches = (str || '').match(matcher);\n\n  if (matches === null) {\n    return null;\n  }\n\n  const chunk = matches[matches.length - 1];\n  const parts = chunk.match(chunkOffset) || ['-', '0', '0'];\n  const minutes = parseInt(parts[1], 10) * 60 + toInt(parts[2]);\n  const _min = parts[0] === '+' ? minutes : -minutes;\n\n  return minutes === 0 ? 0 : _min;\n}\n\n// Return a moment from input, that is local/utc/zone equivalent to model.\nexport function cloneWithOffset(input: Date, date: Date,\n                                config: DateParsingConfig = {}): Date {\n  if (!config._isUTC) {\n    return input;\n  }\n\n  const res = cloneDate(date);\n  // todo: input._d - res._d + ((res._offset || 0) - (input._offset || 0))*60000\n  const offsetDiff = (config._offset || 0) * 60000;\n  const diff = input.valueOf() - res.valueOf() + offsetDiff;\n  // Use low-level api, because this fn is low-level api.\n  res.setTime(res.valueOf() + diff);\n  // todo: add timezone handling\n  // hooks.updateOffset(res, false);\n\n  return res;\n}\n\nexport function getDateOffset(date: Date): number {\n  // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n  // https://github.com/moment/moment/pull/1871\n  return -Math.round(date.getTimezoneOffset() / 15) * 15;\n}\n\n// HOOKS\n\n// This function will be called whenever a moment is mutated.\n// It is intended to keep the offset in sync with the timezone.\n// todo: it's from moment timezones\n// hooks.updateOffset = function () {\n// };\n\n// MOMENTS\n\n// keepLocalTime = true means only change the timezone, without\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n// +0200, so we adjust the time as needed, to be valid.\n//\n// Keeping the time actually adds/subtracts (one hour)\n// from the actual represented time. That is why we call updateOffset\n// a second time. In case it wants us to change the offset again\n// _changeInProgress == true case, then we have to adjust, because\n// there is no such time in the given timezone.\nexport function getUTCOffset(date: Date, config: DateParsingConfig = {}): number {\n  const _offset = config._offset || 0;\n\n  return config._isUTC ? _offset : getDateOffset(date);\n}\n\nexport function setUTCOffset(date: Date, input: number | string, keepLocalTime?: boolean, keepMinutes?: boolean, config: DateParsingConfig = {}): Date {\n  const offset = config._offset || 0;\n  let localAdjust;\n  let _input = input;\n  let _date = date;\n\n  if (isString(_input)) {\n    _input = offsetFromString(matchShortOffset, _input);\n    if (_input === null) {\n      return _date;\n    }\n  } else if (isNumber(_input) && Math.abs(_input) < 16 && !keepMinutes) {\n    _input = _input * 60;\n  }\n\n  if (!config._isUTC && keepLocalTime) {\n    localAdjust = getDateOffset(_date);\n  }\n  config._offset = _input;\n  config._isUTC = true;\n  if (localAdjust != null) {\n    _date = add(_date, localAdjust, 'minutes');\n  }\n  if (offset !== _input) {\n    if (!keepLocalTime || config._changeInProgress) {\n      _date = add(_date, _input - offset, 'minutes', config._isUTC);\n      // addSubtract(this, createDuration(_input - offset, 'm'), 1, false);\n    } else if (!config._changeInProgress) {\n      config._changeInProgress = true;\n      // todo: add timezone handling\n      // hooks.updateOffset(this, true);\n      config._changeInProgress = null;\n    }\n  }\n\n  return _date;\n}\n\n/*\nexport function getSetZone(input, keepLocalTime) {\n  if (input != null) {\n    if (typeof input !== 'string') {\n      input = -input;\n    }\n\n    this.utcOffset(input, keepLocalTime);\n\n    return this;\n  } else {\n    return -this.utcOffset();\n  }\n}\n*/\n\nexport function setOffsetToUTC(date: Date, keepLocalTime?: boolean): Date {\n  return setUTCOffset(date, 0, keepLocalTime);\n}\n\nexport function isDaylightSavingTime(date: Date): boolean {\n\n  return (getUTCOffset(date) > getUTCOffset(setMonth(cloneDate(date), 0))\n    || getUTCOffset(date) > getUTCOffset(setMonth(cloneDate(date), 5)));\n}\n\n/*export function setOffsetToLocal(date: Date, isUTC?: boolean, keepLocalTime?: boolean) {\n  if (this._isUTC) {\n    this.utcOffset(0, keepLocalTime);\n    this._isUTC = false;\n\n    if (keepLocalTime) {\n      this.subtract(getDateOffset(this), 'm');\n    }\n  }\n  return this;\n}*/\n\nexport function setOffsetToParsedOffset(date: Date, input: string, config: DateParsingConfig = {}): Date {\n  if (config._tzm != null) {\n    return setUTCOffset(date, config._tzm, false, true, config);\n  }\n\n  if (isString(input)) {\n    const tZone = offsetFromString(matchOffset, input);\n    if (tZone != null) {\n      return setUTCOffset(date, tZone, false, false, config);\n    }\n\n    return setUTCOffset(date, 0, true, false, config);\n  }\n\n  return date;\n}\n\nexport function hasAlignedHourOffset(date: Date, input?: Date) {\n  const _input = input ? getUTCOffset(input, { _isUTC: false }) : 0;\n\n  return (getUTCOffset(date) - _input) % 60 === 0;\n}\n\n\n// DEPRECATED\n/*export function isDaylightSavingTimeShifted() {\n  if (!isUndefined(this._isDSTShifted)) {\n    return this._isDSTShifted;\n  }\n\n  const c = {};\n\n  copyConfig(c, this);\n  c = prepareConfig(c);\n\n  if (c._a) {\n    const other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n    this._isDSTShifted = this.isValid() &&\n      compareArrays(c._a, other.toArray()) > 0;\n  } else {\n    this._isDSTShifted = false;\n  }\n\n  return this._isDSTShifted;\n}*/\n\n// in Khronos\n/*export function isLocal() {\n  return this.isValid() ? !this._isUTC : false;\n}\n\nexport function isUtcOffset() {\n  return this.isValid() ? this._isUTC : false;\n}\n\nexport function isUtc() {\n  return this.isValid() ? this._isUTC && this._offset === 0 : false;\n}*/\n","import { getHours, getMinutes, getSeconds } from '../utils/date-getters';\nimport { addFormatToken } from '../format/format';\nimport { zeroFill } from '../utils/zero-fill';\nimport { Locale } from '../locale/locale.class';\nimport { addRegexToken, match1to2, match2, match3to4, match5to6 } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { HOUR, MINUTE, SECOND } from './constants';\nimport { toInt } from '../utils/type-checks';\nimport { DateArray, DateFormatterOptions } from '../types';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { getParsingFlags } from '../create/parsing-flags';\nimport { addUnitPriority } from './priorities';\nimport { addUnitAlias } from './aliases';\n\n\nexport function initHour() {\n// FORMATTING\n\n  function hFormat(date: Date, isUTC: boolean): number {\n    return getHours(date, isUTC) % 12 || 12;\n  }\n\n  function kFormat(date: Date, isUTC: boolean): number {\n    return getHours(date, isUTC) || 24;\n  }\n\n  addFormatToken('H', ['HH', 2, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return getHours(date, opts.isUTC)\n        .toString(10);\n    }\n  );\n  addFormatToken('h', ['hh', 2, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return hFormat(date, opts.isUTC)\n        .toString(10);\n    }\n  );\n  addFormatToken('k', ['kk', 2, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return kFormat(date, opts.isUTC)\n        .toString(10);\n    }\n  );\n\n  addFormatToken('hmm', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      const _h = hFormat(date, opts.isUTC);\n      const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n\n      return `${_h}${_mm}`;\n    }\n  );\n\n  addFormatToken('hmmss', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      const _h = hFormat(date, opts.isUTC);\n      const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n      const _ss = zeroFill(getSeconds(date, opts.isUTC), 2);\n\n      return `${_h}${_mm}${_ss}`;\n    }\n  );\n\n  addFormatToken('Hmm', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      const _H = getHours(date, opts.isUTC);\n      const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n\n      return `${_H}${_mm}`;\n    }\n  );\n\n  addFormatToken('Hmmss', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      const _H = getHours(date, opts.isUTC);\n      const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n      const _ss = zeroFill(getSeconds(date, opts.isUTC), 2);\n\n      return `${_H}${_mm}${_ss}`;\n    }\n  );\n\n  function meridiem(token: string, lowercase: boolean): void {\n    addFormatToken(token, null, null,\n      function(date: Date, opts: DateFormatterOptions): string {\n        return opts.locale.meridiem(getHours(date, opts.isUTC), getMinutes(date, opts.isUTC), lowercase);\n      }\n    );\n  }\n\n  meridiem('a', true);\n  meridiem('A', false);\n\n// ALIASES\n\n  addUnitAlias('hour', 'h');\n\n// PRIORITY\n  addUnitPriority('hour', 13);\n\n\n// PARSING\n\n  function matchMeridiem(isStrict: boolean, locale: Locale): RegExp {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(\n    ['k', 'kk'],\n    function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n      const kInput = toInt(input);\n      array[HOUR] = kInput === 24 ? 0 : kInput;\n\n      return config;\n    }\n  );\n  addParseToken(['a', 'A'], function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n\n    return config;\n  });\n  addParseToken(['h', 'hh'], function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n\n    return config;\n  });\n  addParseToken('hmm', function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    const pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n\n    return config;\n  });\n  addParseToken('hmmss', function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    const pos1 = input.length - 4;\n    const pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n\n    return config;\n  });\n  addParseToken('Hmm', function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    const pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n\n    return config;\n  });\n  addParseToken('Hmmss', function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    const pos1 = input.length - 4;\n    const pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n\n    return config;\n  });\n\n}\n","// internal storage for locale config files\nimport { Locale, LocaleData } from './locale.class';\nimport { baseConfig } from './locale.defaults';\nimport { hasOwnProp, isArray, isObject, isString, isUndefined, toInt } from '../utils/type-checks';\nimport { compareArrays } from '../utils/compare-arrays';\n\nimport { initWeek } from '../units/week';\nimport { initWeekYear } from '../units/week-year';\nimport { initYear } from '../units/year';\nimport { initTimezone } from '../units/timezone';\nimport { initTimestamp } from '../units/timestamp';\nimport { initSecond } from '../units/second';\nimport { initQuarter } from '../units/quarter';\nimport { initOffset } from '../units/offset';\nimport { initMinute } from '../units/minute';\nimport { initMillisecond } from '../units/millisecond';\nimport { initMonth } from '../units/month';\nimport { initHour } from '../units/hour';\nimport { initDayOfYear } from '../units/day-of-year';\nimport { initDayOfWeek } from '../units/day-of-week';\nimport { initDayOfMonth } from '../units/day-of-month';\n\nconst locales: { [key: string]: Locale } = {};\nconst localeFamilies: { [key: string]: {name: string; config: LocaleData}[] } = {};\nlet globalLocale: Locale;\n\nfunction normalizeLocale(key: string): string {\n  return key ? key.toLowerCase().replace('_', '-') : key;\n}\n\n// pick the locale from the array\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n// substring from most specific to least,\n// but move to the next array item if it's a more specific variant than the current root\nfunction chooseLocale(names: string[]): Locale {\n  let next;\n  let locale;\n  let i = 0;\n\n  while (i < names.length) {\n    const split = normalizeLocale(names[i]).split('-');\n    let j = split.length;\n    next = normalizeLocale(names[i + 1]);\n    next = next ? next.split('-') : null;\n    while (j > 0) {\n      locale = loadLocale(split.slice(0, j).join('-'));\n      if (locale) {\n        return locale;\n      }\n      if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n        // the next array item is better than a shallower substring of this one\n        break;\n      }\n      j--;\n    }\n    i++;\n  }\n\n  return null;\n}\n\nexport function mergeConfigs(parentConfig: LocaleData,\n                             childConfig: LocaleData) {\n  const res: LocaleData = Object.assign({}, parentConfig);\n\n  for (const childProp in childConfig) {\n    if (!hasOwnProp(childConfig, childProp)) {\n      continue;\n    }\n    if (isObject(parentConfig[childProp]) && isObject(childConfig[childProp])) {\n      res[childProp] = {};\n      Object.assign(res[childProp], parentConfig[childProp]);\n      Object.assign(res[childProp], childConfig[childProp]);\n    } else if (childConfig[childProp] != null) {\n      res[childProp] = childConfig[childProp];\n    } else {\n      delete res[childProp];\n    }\n  }\n  let parentProp;\n  for (parentProp in parentConfig) {\n    if (\n      hasOwnProp(parentConfig, parentProp) &&\n      !hasOwnProp(childConfig, parentProp) &&\n      isObject(parentConfig[parentProp as keyof LocaleData])\n    ) {\n      // make sure changes to properties don't modify parent config\n      res[parentProp as keyof LocaleData] = Object.assign({}, res[parentProp as keyof LocaleData]);\n    }\n  }\n\n  return res;\n}\n\n\nfunction loadLocale(name: string): Locale {\n  // no way!\n  /* var oldLocale = null;\n   // TODO: Find a better way to register and load all the locales in Node\n   if (!locales[name] && (typeof module !== 'undefined') &&\n     module && module.exports) {\n     try {\n       oldLocale = globalLocale._abbr;\n       var aliasedRequire = require;\n       aliasedRequire('./locale/' + name);\n       getSetGlobalLocale(oldLocale);\n     } catch (e) {}\n   }*/\n  if (!locales[name]) {\n    // tslint:disable-next-line\n    console.error(`Khronos locale error: please load locale \"${name}\" before using it`);\n    // throw new Error(`Khronos locale error: please load locale \"${name}\" before using it`);\n  }\n\n  return locales[name];\n}\n\n// This function will load locale and then set the global locale.  If\n// no arguments are passed in, it will simply return the current global\n// locale key.\nexport function getSetGlobalLocale(key?: string | string[], values?: LocaleData): string {\n  let data: Locale;\n\n  if (key) {\n    if (isUndefined(values)) {\n      data = getLocale(key);\n    } else if (isString(key)) {\n      data = defineLocale(key, values);\n    }\n\n    if (data) {\n      globalLocale = data;\n    }\n  }\n\n  return globalLocale && globalLocale._abbr;\n}\n\nexport function defineLocale(name: string, config?: LocaleData): Locale {\n  if (config === null) {\n    // useful for testing\n    delete locales[name];\n    globalLocale = getLocale('en');\n\n    return null;\n  }\n\n  if (!config) {\n    return;\n  }\n\n  let parentConfig = baseConfig;\n  config.abbr = name;\n  if (config.parentLocale != null) {\n    if (locales[config.parentLocale] != null) {\n      parentConfig = locales[config.parentLocale]._config;\n    } else {\n      if (!localeFamilies[config.parentLocale]) {\n        localeFamilies[config.parentLocale] = [];\n      }\n      localeFamilies[config.parentLocale].push({ name, config });\n\n      return null;\n    }\n  }\n\n  locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n  if (localeFamilies[name]) {\n    localeFamilies[name].forEach(function (x) {\n      defineLocale(x.name, x.config);\n    });\n  }\n\n  // backwards compat for now: also set the locale\n  // make sure we set the locale AFTER all child locales have been\n  // created, so we won't end up with the child locale set.\n  getSetGlobalLocale(name);\n\n\n  return locales[name];\n}\n\nexport function updateLocale(name: string, config?: LocaleData): Locale {\n  let _config = config;\n\n  if (_config != null) {\n    let parentConfig = baseConfig;\n    // MERGE\n    const tmpLocale = loadLocale(name);\n    if (tmpLocale != null) {\n      parentConfig = tmpLocale._config;\n    }\n    _config = mergeConfigs(parentConfig, _config);\n    const locale = new Locale(_config);\n    locale.parentLocale = locales[name];\n    locales[name] = locale;\n\n    // backwards compat for now: also set the locale\n    getSetGlobalLocale(name);\n  } else {\n    // pass null for config to unupdate, useful for tests\n    if (locales[name] != null) {\n      if (locales[name].parentLocale != null) {\n        locales[name] = locales[name].parentLocale;\n      } else if (locales[name] != null) {\n        delete locales[name];\n      }\n    }\n  }\n\n  return locales[name];\n}\n\n// returns locale data\nexport function getLocale(key?: string | string[]): Locale {\n  setDefaultLocale();\n\n  if (!key) {\n    return globalLocale;\n  }\n  // let locale;\n  const _key = isArray(key) ? key : [key];\n\n  return chooseLocale(_key);\n}\n\nexport function listLocales(): string[] {\n  return Object.keys(locales);\n}\n\nfunction setDefaultLocale(): void {\n  if (locales[`en`]) {\n\n    return undefined;\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal(num: number): string {\n      const b = num % 10;\n      const output =\n        toInt((num % 100) / 10) === 1\n          ? 'th'\n          : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n\n      return num + output;\n    }\n  });\n\n  initWeek();\n  initWeekYear();\n  initYear();\n  initTimezone();\n  initTimestamp();\n  initSecond();\n  initQuarter();\n  initOffset();\n  initMonth();\n  initMinute();\n  initMillisecond();\n  initHour();\n  initDayOfYear();\n  initDayOfWeek();\n  initDayOfMonth();\n}\n","import { addFormatToken } from '../format/format';\nimport { DateFormatterOptions } from '../types';\n\n// todo: add support for timezones\n\nexport function initTimezone() {\n  // FORMATTING\n  addFormatToken('z', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return opts.isUTC ? 'UTC' : '';\n    }\n  );\n  addFormatToken('zz', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return opts.isUTC ? 'Coordinated Universal Time' : '';\n    }\n  );\n}\n\n// MOMENTS\n\nexport function getZoneAbbr(isUTC: boolean) {\n  return isUTC ? 'UTC' : '';\n}\n\nexport function getZoneName(isUTC: boolean) {\n  return isUTC ? 'Coordinated Universal Time' : '';\n}\n","import { addFormatToken } from '../format/format';\nimport { getSeconds } from '../utils/date-getters';\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { SECOND } from './constants';\nimport { addUnitAlias } from './aliases';\nimport { addUnitPriority } from './priorities';\nimport { DateFormatterOptions } from '../types';\n\n\nexport function initSecond() {\n// FORMATTING\n\n  addFormatToken('s', ['ss', 2, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return getSeconds(date, opts.isUTC)\n        .toString(10);\n    }\n  );\n\n// ALIASES\n\n  addUnitAlias('second', 's');\n\n// PRIORITY\n\n  addUnitPriority('second', 15);\n\n// PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND);\n}\n","import { addFormatToken } from '../format/format';\nimport { getMinutes } from '../utils/date-getters';\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { MINUTE } from './constants';\nimport { addUnitPriority } from './priorities';\nimport { addUnitAlias } from './aliases';\nimport { DateFormatterOptions } from '../types';\n\n\nexport function initMinute() {\n// FORMATTING\n\n  addFormatToken('m', ['mm', 2, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return getMinutes(date, opts.isUTC)\n        .toString(10);\n    }\n  );\n\n// ALIASES\n\n  addUnitAlias('minute', 'm');\n\n// PRIORITY\n\n  addUnitPriority('minute', 14);\n\n// PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE);\n}\n","// tslint:disable:no-bitwise\n// FORMATTING\n\nimport { addFormatToken } from '../format/format';\nimport { addRegexToken, match1, match1to3, match2, match3, matchUnsigned } from '../parse/regex';\nimport { MILLISECOND } from './constants';\nimport { toInt } from '../utils/type-checks';\nimport { addParseToken } from '../parse/token';\nimport { DateArray, DateFormatterOptions, WeekParsing } from '../types';\nimport { addUnitAlias } from './aliases';\nimport { addUnitPriority } from './priorities';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { getMilliseconds } from '../utils/date-getters';\n\n\nexport function initMillisecond() {\n  addFormatToken('S', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return (~~(getMilliseconds(date, opts.isUTC) / 100)).toString(10);\n    }\n  );\n\n  addFormatToken(null, ['SS', 2, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return (~~(getMilliseconds(date, opts.isUTC) / 10)).toString(10);\n    }\n  );\n\n  addFormatToken(null, ['SSS', 3, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return (getMilliseconds(date, opts.isUTC)).toString(10);\n    }\n  );\n  addFormatToken(null, ['SSSS', 4, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return (getMilliseconds(date, opts.isUTC) * 10).toString(10);\n    }\n  );\n  addFormatToken(null, ['SSSSS', 5, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return (getMilliseconds(date, opts.isUTC) * 100).toString(10);\n    }\n  );\n  addFormatToken(null, ['SSSSSS', 6, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return (getMilliseconds(date, opts.isUTC) * 1000).toString(10);\n    }\n  );\n  addFormatToken(null, ['SSSSSSS', 7, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return (getMilliseconds(date, opts.isUTC) * 10000).toString(10);\n    }\n  );\n  addFormatToken(null, ['SSSSSSSS', 8, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return (getMilliseconds(date, opts.isUTC) * 100000).toString(10);\n    }\n  );\n  addFormatToken(null, ['SSSSSSSSS', 9, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return (getMilliseconds(date, opts.isUTC) * 1000000).toString(10);\n    }\n  );\n\n\n// ALIASES\n\n  addUnitAlias('millisecond', 'ms');\n\n// PRIORITY\n\n  addUnitPriority('millisecond', 16);\n\n// PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n\n  let token;\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    array[MILLISECOND] = toInt(parseFloat(`0.${input}`) * 1000);\n\n    return config;\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  }\n// MOMENTS\n}\n","import { addFormatToken } from '../format/format';\nimport { getDate } from '../utils/date-getters';\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { DATE } from './constants';\nimport { toInt } from '../utils/type-checks';\nimport { DateArray, DateFormatterOptions } from '../types';\nimport { addUnitAlias } from './aliases';\nimport { addUnitPriority } from './priorities';\nimport { DateParsingConfig } from '../create/parsing.types';\n\n\nexport function initDayOfMonth() {\n// FORMATTING\n\n  addFormatToken('D', ['DD', 2, false], 'Do',\n    function(date: Date, opts: DateFormatterOptions): string {\n      return getDate(date, opts.isUTC)\n        .toString(10);\n    }\n  );\n\n// ALIASES\n\n  addUnitAlias('date', 'D');\n\n// PRIOROITY\n  addUnitPriority('date', 9);\n\n// PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function(isStrict, locale) {\n    return locale._dayOfMonthOrdinalParse || locale._ordinalParse;\n  });\n\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken(\n    'Do',\n    function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n      array[DATE] = toInt(input.match(match1to2)[0]);\n\n      return config;\n    }\n  );\n}\n","import { toInt } from '../utils/type-checks';\nimport { createDuration } from './create';\nimport { Duration } from './constructor';\nimport { DateObject } from '../types';\n\nconst ordering: (keyof DateObject)[] = ['year', 'quarter', 'month', 'week', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'];\nconst orderingHash = ordering.reduce((mem: { [key: string]: boolean }, order) => {\n  mem[order] = true;\n\n  return mem;\n}, {});\n\nexport function isDurationValid(duration: Partial<DateObject>): boolean {\n  const durationKeys = Object.keys(duration);\n  if (durationKeys\n      .some((key: keyof DateObject) => {\n        return (key in orderingHash)\n          && duration[key] === null\n          || isNaN(duration[key]);\n      })) {\n    return false;\n  }\n  // for (let key in duration) {\n  //   if (!(indexOf.call(ordering, key) !== -1 && (duration[key] == null || !isNaN(duration[key])))) {\n  //     return false;\n  //   }\n  // }\n\n  let unitHasDecimal = false;\n  for (let i = 0; i < ordering.length; ++i) {\n    if (duration[ordering[i]]) {\n      // only allow non-integers for smallest unit\n      if (unitHasDecimal) {\n        return false;\n      }\n      if (duration[ordering[i]] !== toInt(duration[ordering[i]])) {\n        unitHasDecimal = true;\n      }\n    }\n  }\n\n  return true;\n}\n\n// export function isValid() {\n//   return this._isValid;\n// }\n//\n// export function createInvalid(): Duration {\n//   return createDuration(NaN);\n// }\n","export function absCeil (number: number): number {\n  return number < 0 ? Math.floor(number) : Math.ceil(number);\n}\n","import { Duration } from './constructor';\nimport { absFloor } from '../utils';\nimport { absCeil } from '../utils/abs-ceil';\n\nexport function bubble(dur: Duration): Duration {\n  let milliseconds = dur._milliseconds;\n  let days = dur._days;\n  let months = dur._months;\n  const data = dur._data;\n\n  // if we have a mix of positive and negative values, bubble down first\n  // check: https://github.com/moment/moment/issues/2166\n  if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n      (milliseconds <= 0 && days <= 0 && months <= 0))) {\n    milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n    days = 0;\n    months = 0;\n  }\n\n  // The following code bubbles up values, see the tests for\n  // examples of what that means.\n  data.milliseconds = milliseconds % 1000;\n\n  const seconds = absFloor(milliseconds / 1000);\n  data.seconds = seconds % 60;\n\n  const minutes = absFloor(seconds / 60);\n  data.minutes = minutes % 60;\n\n  const hours = absFloor(minutes / 60);\n  data.hours = hours % 24;\n\n  days += absFloor(hours / 24);\n\n  // convert days to months\n  const monthsFromDays = absFloor(daysToMonths(days));\n  months += monthsFromDays;\n  days -= absCeil(monthsToDays(monthsFromDays));\n\n  // 12 months -> 1 year\n  const years = absFloor(months / 12);\n  months %= 12;\n\n  data.day = days;\n  data.month = months;\n  data.year = years;\n\n  return dur;\n}\n\nexport function daysToMonths(day: number): number {\n  // 400 years have 146097 days (taking into account leap year rules)\n  // 400 years have 12 months === 4800\n  return day * 4800 / 146097;\n}\n\nexport function monthsToDays(month: number): number {\n  // the reverse of daysToMonths\n  return month * 146097 / 4800;\n}\n","// tslint:disable:cyclomatic-complexity\nimport { createDuration } from './create';\nimport { Locale } from '../locale/locale.class';\nimport { Duration } from './constructor';\n\nlet round = Math.round;\nconst thresholds: { [key: string]: number } = {\n  ss: 44,         // a few seconds to seconds\n  s: 45,         // seconds to minute\n  m: 45,         // minutes to hour\n  h: 22,         // hours to day\n  d: 26,         // days to month\n  M: 11          // months to year\n};\n\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\nfunction substituteTimeAgo(str: 'future' | 'past', num: number,\n                           withoutSuffix: boolean, isFuture: boolean,\n                           locale: Locale): string {\n  return locale.relativeTime(num || 1, !!withoutSuffix, str, isFuture);\n}\n\nexport function relativeTime(posNegDuration: Duration, withoutSuffix: boolean, locale: Locale): string {\n  const duration = createDuration(posNegDuration).abs();\n  const seconds = round(duration.as('s'));\n  const minutes = round(duration.as('m'));\n  const hours = round(duration.as('h'));\n  const days = round(duration.as('d'));\n  const months = round(duration.as('M'));\n  const years = round(duration.as('y'));\n\n  const a: [string] | [string, number] =\n    seconds <= thresholds.ss && ['s', seconds] ||\n    seconds < thresholds.s && ['ss', seconds] ||\n    minutes <= 1 && ['m'] ||\n    minutes < thresholds.m && ['mm', minutes] ||\n    hours <= 1 && ['h'] ||\n    hours < thresholds.h && ['hh', hours] ||\n    days <= 1 && ['d'] ||\n    days < thresholds.d && ['dd', days] ||\n    months <= 1 && ['M'] ||\n    months < thresholds.M && ['MM', months] ||\n    years <= 1 && ['y'] || ['yy', years];\n\n  const b: [string, number | string, boolean, boolean, Locale] =\n    [a[0], a[1], withoutSuffix, +posNegDuration > 0, locale];\n  // a[2] = withoutSuffix;\n  // a[3] = +posNegDuration > 0;\n  // a[4] = locale;\n\n  return substituteTimeAgo.apply(null, b);\n}\n\n// This function allows you to set the rounding function for relative time strings\nexport function getSetRelativeTimeRounding(roundingFunction: any): boolean | Function {\n  if (roundingFunction === undefined) {\n    return round;\n  }\n  if (typeof(roundingFunction) === 'function') {\n    round = roundingFunction;\n\n    return true;\n  }\n\n  return false;\n}\n\n// This function allows you to set a threshold for relative time strings\nexport function getSetRelativeTimeThreshold(threshold: string, limit: number): boolean | number {\n  if (thresholds[threshold] === undefined) {\n    return false;\n  }\n  if (limit === undefined) {\n    return thresholds[threshold];\n  }\n  thresholds[threshold] = limit;\n  if (threshold === 's') {\n    thresholds.ss = limit - 1;\n  }\n\n  return true;\n}\n\n// export function humanize(withSuffix) {\n//   if (!this.isValid()) {\n//     return this.localeData().invalidDate();\n//   }\n//\n//   const locale = this.localeData();\n//   let output = relativeTime(this, !withSuffix, locale);\n//\n//   if (withSuffix) {\n//     output = locale.pastFuture(+this, output);\n//   }\n//\n//   return locale.postformat(output);\n// }\n","import { getLocale } from '../locale/locales';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { isDurationValid } from './valid';\nimport { bubble, daysToMonths, monthsToDays } from './bubble';\nimport { DateObject } from '../types';\nimport { Locale } from '../locale/locale.class';\nimport { normalizeUnits } from '../units/aliases';\nimport { relativeTime } from './humanize';\nimport { toInt } from '../utils/type-checks';\n\nexport class Duration {\n  _milliseconds: number;\n  _days: number;\n  _months: number;\n  _data: Partial<DateObject> = {};\n  _locale: Locale = getLocale();\n  _isValid: boolean;\n\n  constructor(duration: Partial<DateObject>, config: DateParsingConfig = {}) {\n    this._locale = config && config._locale || getLocale();\n    // const normalizedInput = normalizeObjectUnits(duration);\n    const normalizedInput = duration;\n    const years = normalizedInput.year || 0;\n    const quarters = normalizedInput.quarter || 0;\n    const months = normalizedInput.month || 0;\n    const weeks = normalizedInput.week || 0;\n    const days = normalizedInput.day || 0;\n    const hours = normalizedInput.hours || 0;\n    const minutes = normalizedInput.minutes || 0;\n    const seconds = normalizedInput.seconds || 0;\n    const milliseconds = normalizedInput.milliseconds || 0;\n\n    this._isValid = isDurationValid(normalizedInput);\n\n    // representation for dateAddRemove\n    this._milliseconds = +milliseconds +\n      seconds * 1000 +\n      minutes * 60 * 1000 + // 1000 * 60\n      hours * 1000 * 60 * 60; // using 1000 * 60 * 60\n    // instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n    this._days = +days +\n      weeks * 7;\n    // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n    this._months = +months +\n      quarters * 3 +\n      years * 12;\n\n    // this._data = {};\n\n    // this._locale = getLocale();\n\n    // this._bubble();\n    return bubble(this);\n  }\n\n  isValid(): boolean {\n    return this._isValid;\n  }\n\n  humanize(withSuffix?: boolean): string {\n    // throw new Error(`TODO: implement`);\n\n    if (!this.isValid()) {\n      return this.localeData().invalidDate;\n    }\n\n    const locale = this.localeData();\n    let output = relativeTime(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  localeData(): Locale {\n    return this._locale;\n  }\n\n  locale(): string;\n  locale(localeKey: string): Duration;\n  locale(localeKey?: string): Duration | string {\n    if (!localeKey) {\n      return this._locale._abbr;\n    }\n\n    this._locale = getLocale(localeKey) || this._locale;\n\n    return this;\n  }\n\n\n  abs(): Duration {\n    const mathAbs = Math.abs;\n\n    const data = this._data;\n\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.month = mathAbs(data.month);\n    data.year = mathAbs(data.year);\n\n    return this;\n  }\n\n  as(_units: string): number {\n    if (!this.isValid()) {\n      return NaN;\n    }\n    let days;\n    let months;\n    const milliseconds = this._milliseconds;\n\n    const units = normalizeUnits(_units);\n\n    if (units === 'month' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      return units === 'month' ? months : months / 12;\n    }\n\n    // handle milliseconds separately because of floating point math errors (issue #1867)\n    days = this._days + Math.round(monthsToDays(this._months));\n    switch (units) {\n      case 'week'   :\n        return days / 7 + milliseconds / 6048e5;\n      case 'day'    :\n        return days + milliseconds / 864e5;\n      case 'hours'   :\n        return days * 24 + milliseconds / 36e5;\n      case 'minutes' :\n        return days * 1440 + milliseconds / 6e4;\n      case 'seconds' :\n        return days * 86400 + milliseconds / 1000;\n      // Math.floor prevents floating point math errors here\n      case 'milliseconds':\n        return Math.floor(days * 864e5) + milliseconds;\n      default:\n        throw new Error(`Unknown unit ${units}`);\n    }\n  }\n\n  valueOf () {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return (\n      this._milliseconds +\n      this._days * 864e5 +\n      (this._months % 12) * 2592e6 +\n      toInt(this._months / 12) * 31536e6\n    );\n  }\n}\n\nexport function isDuration(obj: any): obj is Duration {\n  return obj instanceof Duration;\n}\n","import { DateParsingConfig } from './parsing.types';\nimport { getParsingFlags } from './parsing-flags';\n\nexport function isValid(config: DateParsingConfig): boolean {\n  if (config._isValid == null) {\n    const flags = getParsingFlags(config);\n    const parsedParts = Array.prototype.some.call(flags.parsedDateParts, function (i: number) {\n      return i != null;\n    });\n    let isNowValid = !isNaN(config._d && config._d.getTime()) &&\n      flags.overflow < 0 &&\n      !flags.empty &&\n      !flags.invalidMonth &&\n      !flags.invalidWeekday &&\n      !flags.weekdayMismatch &&\n      !flags.nullInput &&\n      !flags.invalidFormat &&\n      !flags.userInvalidated &&\n      (!flags.meridiem || (flags.meridiem && parsedParts));\n\n    if (config._strict) {\n      isNowValid = isNowValid &&\n        flags.charsLeftOver === 0 &&\n        flags.unusedTokens.length === 0 &&\n        flags.bigHour === undefined;\n    }\n\n    if (Object.isFrozen == null || !Object.isFrozen(config)) {\n      config._isValid = isNowValid;\n    } else {\n      return isNowValid;\n    }\n  }\n\n  return config._isValid;\n}\n\nexport function createInvalid(config: DateParsingConfig, flags?: { nullInput: boolean }): DateParsingConfig {\n  config._d = new Date(NaN);\n  Object.assign(getParsingFlags(config), flags || { userInvalidated: true });\n\n  return config;\n}\n\nexport function markInvalid(config: DateParsingConfig): DateParsingConfig {\n  config._isValid = false;\n\n  return config;\n}\n","// tslint:disable-next-line\nimport { defaultLocaleMonthsShort, defaultLocaleWeekdaysShort } from '../locale/locale.class';\nimport { DateArray } from '../types';\nimport { DateParsingConfig } from './parsing.types';\nimport { isString } from '../utils/type-checks';\nimport { configFromStringAndFormat } from './from-string-and-format';\nimport { createUTCDate } from './date-from-array';\nimport { createInvalid, markInvalid } from './valid';\nimport { getParsingFlags } from './parsing-flags';\n\n// iso 8601 regex\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n// tslint:disable-next-line\nconst extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n// tslint:disable-next-line\nconst basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\nconst tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\nconst isoDates: [string, RegExp, boolean][] = [\n  ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/, true],\n  ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/, true],\n  ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/, true],\n  ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n  ['YYYY-DDD', /\\d{4}-\\d{3}/, true],\n  ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n  ['YYYYYYMMDD', /[+-]\\d{10}/, true],\n  ['YYYYMMDD', /\\d{8}/, true],\n  // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/, true],\n  ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n  ['YYYYDDD', /\\d{7}/, true]\n];\n\n// iso time formats and regexes\nconst isoTimes: [string, RegExp][] = [\n  ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n  ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n  ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n  ['HH:mm', /\\d\\d:\\d\\d/],\n  ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n  ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n  ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n  ['HHmm', /\\d\\d\\d\\d/],\n  ['HH', /\\d\\d/]\n];\n\nconst aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\nconst obsOffsets: { [key: string]: number } = {\n  UT: 0,\n  GMT: 0,\n  EDT: -4 * 60,\n  EST: -5 * 60,\n  CDT: -5 * 60,\n  CST: -6 * 60,\n  MDT: -6 * 60,\n  MST: -7 * 60,\n  PDT: -7 * 60,\n  PST: -8 * 60\n};\n\n// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n// tslint:disable-next-line\nconst rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n// date from iso format\nexport function configFromISO(config: DateParsingConfig): DateParsingConfig {\n  if (!isString(config._i)) {\n    return config;\n  }\n\n  const input = config._i;\n  const match = extendedIsoRegex.exec(input) || basicIsoRegex.exec(input);\n\n\n  let allowTime;\n  let dateFormat;\n  let timeFormat;\n  let tzFormat;\n\n  if (!match) {\n    config._isValid = false;\n\n    return config;\n  }\n\n  // getParsingFlags(config).iso = true;\n  let i;\n  let l;\n  for (i = 0, l = isoDates.length; i < l; i++) {\n    if (isoDates[i][1].exec(match[1])) {\n      dateFormat = isoDates[i][0];\n      allowTime = isoDates[i][2] !== false;\n      break;\n    }\n  }\n\n  if (dateFormat == null) {\n    config._isValid = false;\n\n    return config;\n  }\n\n  if (match[3]) {\n    for (i = 0, l = isoTimes.length; i < l; i++) {\n      if (isoTimes[i][1].exec(match[3])) {\n        // match[2] should be 'T' or space\n        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n        break;\n      }\n    }\n\n    if (timeFormat == null) {\n      config._isValid = false;\n\n      return config;\n    }\n\n  }\n  if (!allowTime && timeFormat != null) {\n    config._isValid = false;\n\n    return config;\n  }\n\n  if (match[4]) {\n    if (tzRegex.exec(match[4])) {\n      tzFormat = 'Z';\n    } else {\n      config._isValid = false;\n\n      return config;\n    }\n  }\n\n  config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n\n  return configFromStringAndFormat(config);\n}\n\n// tslint:disable-next-line\nfunction extractFromRFC2822Strings(yearStr: string, monthStr: string, dayStr: string, hourStr: string, minuteStr: string, secondStr: string): DateArray {\n  const result = [\n    untruncateYear(yearStr),\n    defaultLocaleMonthsShort.indexOf(monthStr),\n    parseInt(dayStr, 10),\n    parseInt(hourStr, 10),\n    parseInt(minuteStr, 10)\n  ];\n\n  if (secondStr) {\n    result.push(parseInt(secondStr, 10));\n  }\n\n  return result;\n}\n\nfunction untruncateYear(yearStr: string): number {\n  const year = parseInt(yearStr, 10);\n\n  return year <= 49 ? year + 2000 : year;\n}\n\nfunction preprocessRFC2822(str: string): string {\n  // Remove comments and folding whitespace and replace multiple-spaces with a single space\n  return str\n    .replace(/\\([^)]*\\)|[\\n\\t]/g, ' ')\n    .replace(/(\\s\\s+)/g, ' ').trim();\n}\n\nfunction checkWeekday(weekdayStr: string, parsedInput: DateArray, config: DateParsingConfig): boolean {\n  if (weekdayStr) {\n    // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n    const weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr);\n    const weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n    if (weekdayProvided !== weekdayActual) {\n      getParsingFlags(config).weekdayMismatch = true;\n      config._isValid = false;\n\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction calculateOffset(obsOffset: string, militaryOffset: string, numOffset: string) {\n  if (obsOffset) {\n    return obsOffsets[obsOffset];\n  } else if (militaryOffset) {\n    // the only allowed military tz is Z\n    return 0;\n  } else {\n    const hm = parseInt(numOffset, 10);\n    const m = hm % 100;\n    const h = (hm - m) / 100;\n\n    return h * 60 + m;\n  }\n}\n\n// date and time from ref 2822 format\nexport function configFromRFC2822(config: DateParsingConfig): DateParsingConfig {\n  if (!isString(config._i)) {\n    return config;\n  }\n\n  const match = rfc2822.exec(preprocessRFC2822(config._i));\n\n  if (!match) {\n    return markInvalid(config);\n  }\n\n  const parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n  if (!checkWeekday(match[1], parsedArray, config)) {\n    return config;\n  }\n\n  config._a = parsedArray;\n  config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n  config._d = createUTCDate.apply(null, config._a);\n  config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n  getParsingFlags(config).rfc2822 = true;\n\n  return config;\n}\n\n// date from iso format or fallback\nexport function configFromString(config: DateParsingConfig): DateParsingConfig {\n  if (!isString(config._i)) {\n    return config;\n  }\n\n  const matched = aspNetJsonRegex.exec(config._i);\n\n  if (matched !== null) {\n    config._d = new Date(+matched[1]);\n\n    return config;\n  }\n\n  // todo: update logic processing\n  // isISO -> configFromISO\n  // isRFC -> configFromRFC\n\n  configFromISO(config);\n  if (config._isValid === false) {\n    delete config._isValid;\n  } else {\n    return config;\n  }\n\n  configFromRFC2822(config);\n  if (config._isValid === false) {\n    delete config._isValid;\n  } else {\n    return config;\n  }\n\n  // Final attempt, use Input Fallback\n  // hooks.createFromInputFallback(config);\n  return createInvalid(config);\n}\n\n// hooks.createFromInputFallback = deprecate(\n//     'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n//     'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n//     'discouraged and will be removed in an upcoming major release. Please refer to ' +\n//     'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n//     function (config) {\n//         config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n//     }\n// );\n","// moment.js\n// version : 2.18.1\n// authors : Tim Wood, Iskren Chernev, Moment.js contributors\n// license : MIT\n// momentjs.com\n\nimport './units/index';\nimport { formatFunctions, makeFormatFunction } from './format/format';\nimport { Locale } from './locale/locale.class';\nimport { getLocale } from './locale/locales';\nimport { isDateValid } from './utils/type-checks';\n\nexport function formatDate(date: Date, format: string, locale?: string, isUTC?: boolean, offset = 0): string {\n  const _locale = getLocale(locale || 'en');\n  if (!_locale) {\n    throw new Error(\n      `Locale \"${locale}\" is not defined, please add it with \"defineLocale(...)\"`\n    );\n  }\n\n  const _format = format || (isUTC ?  'YYYY-MM-DDTHH:mm:ss[Z]' : 'YYYY-MM-DDTHH:mm:ssZ');\n\n  const output = formatMoment(date, _format, _locale, isUTC, offset);\n\n  if (!output) {\n    return output;\n  }\n\n  return _locale.postformat(output);\n}\n\n// format date using native date object\nexport function formatMoment(date: Date, _format: string, locale: Locale, isUTC?: boolean, offset = 0): string {\n  if (!isDateValid(date)) {\n    return locale.invalidDate;\n  }\n\n  const format = expandFormat(_format, locale);\n  formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n  return formatFunctions[format](date, locale, isUTC, offset);\n}\n\nexport function expandFormat(_format: string, locale: Locale): string {\n  let format = _format;\n  let i = 5;\n  const localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n  const replaceLongDateFormatTokens = (input: any) => {\n    return locale.formatLongDate(input) || input;\n  };\n\n  localFormattingTokens.lastIndex = 0;\n  while (i >= 0 && localFormattingTokens.test(format)) {\n    format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n    localFormattingTokens.lastIndex = 0;\n    i -= 1;\n  }\n\n  return format;\n}\n","// Pick the first defined of two or three arguments.\nexport function defaults<T>(a?: T, b?: T, c?: T): T {\n  if (a != null) {\n    return a;\n  }\n  if (b != null) {\n    return b;\n  }\n\n  return c;\n}\n","import { DateParsingConfig } from './parsing.types';\nimport { DateArray } from '../types';\nimport { DATE, HOUR, MILLISECOND, MINUTE, MONTH, SECOND, YEAR } from '../units/constants';\nimport { daysInYear } from '../units/year';\nimport { getParsingFlags } from './parsing-flags';\nimport { createUTCDate } from './date-from-array';\nimport { createDate } from './date-from-array';\nimport { dayOfYearFromWeeks, weekOfYear, weeksInYear } from '../units/week-calendar-utils';\nimport { defaults } from '../utils/defaults';\n\nfunction currentDateArray(config: DateParsingConfig): DateArray {\n  const nowValue = new Date();\n\n  if (config._useUTC) {\n    return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n  }\n\n  return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n}\n\n// convert an array to a date.\n// the array should mirror the parameters below\n// note: all values past the year are optional and will default to the lowest possible value.\n// [year, month, day , hour, minute, second, millisecond]\nexport function configFromArray(config: DateParsingConfig): DateParsingConfig {\n  const input = [];\n  let i;\n  let date;\n  let currentDate;\n  let expectedWeekday;\n  let yearToUse;\n\n  if (config._d) {\n    return config;\n  }\n\n  currentDate = currentDateArray(config);\n\n  // compute day of the year from weeks and weekdays\n  if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n    dayOfYearFromWeekInfo(config);\n  }\n\n  // if the day of the year is set, figure out what it is\n  if (config._dayOfYear != null) {\n    yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n    if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n      getParsingFlags(config)._overflowDayOfYear = true;\n    }\n\n    date = new Date(Date.UTC(yearToUse, 0, config._dayOfYear));\n    config._a[MONTH] = date.getUTCMonth();\n    config._a[DATE] = date.getUTCDate();\n  }\n\n  // Default to current date.\n  // * if no year, month, day of month are given, default to today\n  // * if day of month is given, default month and year\n  // * if month is given, default only year\n  // * if year is given, don't default anything\n  for (i = 0; i < 3 && config._a[i] == null; ++i) {\n    config._a[i] = input[i] = currentDate[i];\n  }\n\n  // Zero out whatever was not defaulted, including time\n  for (; i < 7; i++) {\n    config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n  }\n\n  // Check for 24:00:00.000\n  if (config._a[HOUR] === 24 &&\n    config._a[MINUTE] === 0 &&\n    config._a[SECOND] === 0 &&\n    config._a[MILLISECOND] === 0) {\n    config._nextDay = true;\n    config._a[HOUR] = 0;\n  }\n\n  config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n  expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n  // Apply timezone offset from input. The actual utcOffset can be changed\n  // with parseZone.\n  if (config._tzm != null) {\n    config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n  }\n\n  if (config._nextDay) {\n    config._a[HOUR] = 24;\n  }\n\n  // check for mismatching day of week\n  if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n    getParsingFlags(config).weekdayMismatch = true;\n  }\n\n  return config;\n}\n\nfunction dayOfYearFromWeekInfo(config: DateParsingConfig): DateParsingConfig {\n  let w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n  w = config._w;\n  if (w.GG != null || w.W != null || w.E != null) {\n    dow = 1;\n    doy = 4;\n\n    // TODO: We need to take the current isoWeekYear, but that depends on\n    // how we interpret now (local, utc, fixed offset). So create\n    // a now version of current config (take local/utc/offset flags, and\n    // create now).\n    weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(new Date(), 1, 4).year);\n    week = defaults(w.W, 1);\n    weekday = defaults(w.E, 1);\n    if (weekday < 1 || weekday > 7) {\n      weekdayOverflow = true;\n    }\n  } else {\n    dow = config._locale._week.dow;\n    doy = config._locale._week.doy;\n\n    const curWeek = weekOfYear(new Date(), dow, doy);\n\n    weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n    // Default to current week.\n    week = defaults(w.w, curWeek.week);\n\n    if (w.d != null) {\n      // weekday -- low day numbers are considered next week\n      weekday = w.d;\n      if (weekday < 0 || weekday > 6) {\n        weekdayOverflow = true;\n      }\n    } else if (w.e != null) {\n      // local weekday -- counting starts from begining of week\n      weekday = w.e + dow;\n      if (w.e < 0 || w.e > 6) {\n        weekdayOverflow = true;\n      }\n    } else {\n      // default to begining of week\n      weekday = dow;\n    }\n  }\n  if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n    getParsingFlags(config)._overflowWeeks = true;\n  } else if (weekdayOverflow != null) {\n    getParsingFlags(config)._overflowWeekday = true;\n  } else {\n    temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n    config._a[YEAR] = temp.year;\n    config._dayOfYear = temp.dayOfYear;\n  }\n\n  return config;\n}\n","import { getParsingFlags } from './parsing-flags';\nimport { DATE, HOUR, MILLISECOND, MINUTE, MONTH, SECOND, WEEK, WEEKDAY, YEAR } from '../units/constants';\nimport { daysInMonth } from '../units/month';\nimport { DateParsingConfig } from './parsing.types';\n\nexport function checkOverflow(config: DateParsingConfig): DateParsingConfig {\n  let overflow;\n  const a = config._a;\n\n  if (a && getParsingFlags(config).overflow === -2) {\n    // todo: fix this sh*t\n    overflow =\n      a[MONTH] < 0 || a[MONTH] > 11 ? MONTH :\n        a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n          a[HOUR] < 0 || a[HOUR] > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n            a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE :\n              a[SECOND] < 0 || a[SECOND] > 59 ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                  -1;\n\n    if (getParsingFlags(config)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n      overflow = DATE;\n    }\n    if (getParsingFlags(config)._overflowWeeks && overflow === -1) {\n      overflow = WEEK;\n    }\n    if (getParsingFlags(config)._overflowWeekday && overflow === -1) {\n      overflow = WEEKDAY;\n    }\n\n    getParsingFlags(config).overflow = overflow;\n  }\n\n  return config;\n}\n\n","import { DateParsingConfig } from './parsing.types';\nimport { configFromISO, configFromRFC2822 } from './from-string';\nimport { expandFormat } from '../format';\nimport { formattingTokens, formatTokenFunctions } from '../format/format';\nimport { isArray, isString } from '../utils/type-checks';\nimport { getParseRegexForToken } from '../parse/regex';\nimport { addTimeToArrayFromToken } from '../parse/token';\nimport { HOUR } from '../units/constants';\nimport { configFromArray } from './from-array';\nimport { getParsingFlags } from './parsing-flags';\nimport { checkOverflow } from './check-overflow';\nimport { Locale } from '../locale/locale.class';\n\n// constant that refers to the ISO standard\n// hooks.ISO_8601 = function () {};\nexport const ISO_8601 = 'ISO_8601';\n\n// constant that refers to the RFC 2822 form\n// hooks.RFC_2822 = function () {};\nexport const RFC_2822 = 'RFC_2822';\n\n// date from string and format string\nexport function configFromStringAndFormat(config: DateParsingConfig): DateParsingConfig {\n  // TODO: Move this to another part of the creation flow to prevent circular deps\n  if (config._f === ISO_8601) {\n    return configFromISO(config);\n  }\n  if (config._f === RFC_2822) {\n    return configFromRFC2822(config);\n  }\n  config._a = [];\n  getParsingFlags(config).empty = true;\n\n  if (isArray(config._f) || (!config._i && config._i !== 0)) {\n    return config;\n  }\n\n  // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n  let input = config._i.toString();\n  let totalParsedInputLength = 0;\n  const inputLength = input.length;\n  const tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n  let i;\n  let token;\n  let parsedInput;\n  let skipped;\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n    parsedInput = (input.match(getParseRegexForToken(token, config._locale)) || [])[0];\n    if (parsedInput) {\n      skipped = input.substr(0, input.indexOf(parsedInput));\n      if (skipped.length > 0) {\n        getParsingFlags(config).unusedInput.push(skipped);\n      }\n      input = input.slice(input.indexOf(parsedInput) + parsedInput.length);\n      totalParsedInputLength += parsedInput.length;\n    }\n    // don't parse if it's not a known token\n    if (formatTokenFunctions[token]) {\n      if (parsedInput) {\n        getParsingFlags(config).empty = false;\n      } else {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n\n      addTimeToArrayFromToken(token, parsedInput, config);\n    } else if (config._strict && !parsedInput) {\n      getParsingFlags(config).unusedTokens.push(token);\n    }\n  }\n\n  // add remaining unparsed input length to the string\n  getParsingFlags(config).charsLeftOver = inputLength - totalParsedInputLength;\n  if (input.length > 0) {\n    getParsingFlags(config).unusedInput.push(input);\n  }\n\n  // clear _12h flag if hour is <= 12\n  if (config._a[HOUR] <= 12 &&\n    getParsingFlags(config).bigHour === true &&\n    config._a[HOUR] > 0) {\n    getParsingFlags(config).bigHour = void 0;\n  }\n\n  getParsingFlags(config).parsedDateParts = config._a.slice(0);\n  getParsingFlags(config).meridiem = config._meridiem;\n  // handle meridiem\n  config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n  configFromArray(config);\n\n  return checkOverflow(config);\n}\n\n\nfunction meridiemFixWrap(locale: Locale, _hour: number, meridiem: string): number {\n  let hour = _hour;\n\n  if (meridiem == null) {\n    // nothing to do\n    return hour;\n  }\n\n  if (locale.meridiemHour != null) {\n    return locale.meridiemHour(hour, meridiem);\n  }\n\n  if (locale.isPM == null) {\n    // this is not supposed to happen\n    return hour;\n  }\n  // Fallback\n  const isPm = locale.isPM(meridiem);\n  if (isPm && hour < 12) {\n    hour += 12;\n  }\n\n  if (!isPm && hour === 12) {\n    hour = 0;\n  }\n\n  return hour;\n}\n","import { normalizeObjectUnits } from '../units/aliases';\nimport { configFromArray } from './from-array';\nimport { DateParsingConfig } from './parsing.types';\nimport { isObject, isString } from '../utils/type-checks';\n\nexport function configFromObject(config: DateParsingConfig): DateParsingConfig {\n  if (config._d) {\n    return config;\n  }\n\n  const input = config._i;\n  if (isObject(input)) {\n    const i = normalizeObjectUnits(input as any);\n    config._a = [i.year, i.month, i.day, i.hours, i.minutes, i.seconds, i.milliseconds]\n    // todo: obsolete -> remove it\n      .map(obj => isString(obj) ? parseInt(obj, 10) : obj);\n  }\n\n  return configFromArray(config);\n}\n","// tslint:disable:max-line-length\nimport { isArray, isDate, isNumber, isObject, isObjectEmpty, isString, isUndefined } from '../utils/type-checks';\nimport { DateParsingConfig } from './parsing.types';\nimport { getLocale } from '../locale/locales';\nimport { createInvalid, isValid } from './valid';\nimport { configFromStringAndArray } from './from-string-and-array';\nimport { configFromStringAndFormat } from './from-string-and-format';\nimport { cloneDate } from './clone';\nimport { configFromString } from './from-string';\nimport { configFromArray } from './from-array';\nimport { configFromObject } from './from-object';\nimport { checkOverflow } from './check-overflow';\nimport { DateInput } from '../test/chain';\n\nfunction createFromConfig(config: DateParsingConfig): DateParsingConfig {\n  const res = checkOverflow(prepareConfig(config));\n  // todo: remove, in moment.js it's never called cuz of moment constructor\n  res._d = new Date(res._d != null ? res._d.getTime() : NaN);\n  if (!isValid(Object.assign({}, res, {_isValid: null}))) {\n    res._d = new Date(NaN);\n  }\n  // todo: update offset\n  /*if (res._nextDay) {\n    // Adding is smart enough around DST\n    res._d = add(res._d, 1, 'day');\n    res._nextDay = undefined;\n  }*/\n\n  return res;\n}\n\nexport function prepareConfig(config: DateParsingConfig): DateParsingConfig {\n  let input = config._i;\n  const format = config._f;\n\n  config._locale = config._locale || getLocale(config._l);\n\n  if (input === null || (format === undefined && input === '')) {\n    return createInvalid(config, { nullInput: true });\n  }\n\n  if (isString(input)) {\n    config._i = input = config._locale.preparse(input);\n  }\n\n  if (isDate(input)) {\n    config._d = cloneDate(input);\n\n    return config;\n  }\n\n  // todo: add check for recursion\n\n  if (isArray(format)) {\n    configFromStringAndArray(config);\n  } else if (format) {\n    configFromStringAndFormat(config);\n  } else {\n    configFromInput(config);\n  }\n\n  if (!isValid(config)) {\n    config._d = null;\n  }\n\n  return config;\n}\n\nfunction configFromInput(config: DateParsingConfig): DateParsingConfig {\n  const input = config._i;\n  if (isUndefined(input)) {\n    config._d = new Date();\n  } else if (isDate(input)) {\n    config._d = cloneDate(input);\n  } else if (isString(input)) {\n    configFromString(config);\n  } else if (isArray<string | number>(input) && input.length) {\n    const _arr: (string | number)[] = input.slice(0);\n    config._a = _arr.map(obj => isString(obj) ? parseInt(obj, 10) : obj);\n    configFromArray(config);\n  } else if (isObject(input)) {\n    configFromObject(config);\n  } else if (isNumber(input)) {\n    // from milliseconds\n    config._d = new Date(input);\n  } else {\n    //   hooks.createFromInputFallback(config);\n    return createInvalid(config);\n  }\n\n  return config;\n}\n\nexport function createLocalOrUTC(input: DateInput, format?: string | string[], localeKey?: string, strict?: boolean, isUTC?: boolean): DateParsingConfig {\n  const config: DateParsingConfig = {};\n  let _input = input;\n\n  // params switch -> skip; test it well\n  // if (localeKey === true || localeKey === false) {\n  //     strict = localeKey;\n  //     localeKey = undefined;\n  // }\n\n  // todo: fail fast and return not valid date\n  if ((isObject(_input) && isObjectEmpty(_input)) || (isArray(_input) && _input.length === 0)) {\n    _input = undefined;\n  }\n  // object construction must be done this way.\n  // https://github.com/moment/moment/issues/1423\n  // config._isAMomentObject = true;\n  config._useUTC = config._isUTC = isUTC;\n  config._l = localeKey;\n  config._i = _input;\n  config._f = format;\n  config._strict = strict;\n\n  return createFromConfig(config);\n}\n","import { DateParsingConfig } from './parsing.types';\nimport { createInvalid, isValid } from './valid';\nimport { getParsingFlags } from './parsing-flags';\nimport { configFromStringAndFormat } from './from-string-and-format';\n\n// date from string and array of format strings\nexport function configFromStringAndArray(config: DateParsingConfig): DateParsingConfig {\n  let tempConfig;\n  let bestMoment;\n  let scoreToBeat;\n  let currentScore;\n\n  if (!config._f || config._f.length === 0) {\n    getParsingFlags(config).invalidFormat = true;\n\n    return createInvalid(config);\n  }\n\n  let i;\n  for (i = 0; i < config._f.length; i++) {\n    currentScore = 0;\n    tempConfig = Object.assign({}, config);\n    if (config._useUTC != null) {\n      tempConfig._useUTC = config._useUTC;\n    }\n    tempConfig._f = config._f[i];\n    configFromStringAndFormat(tempConfig);\n\n    if (!isValid(tempConfig)) {\n      continue;\n    }\n\n    // if there is any input that was not parsed add a penalty for that format\n    currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n    // or tokens\n    currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n    getParsingFlags(tempConfig).score = currentScore;\n\n    if (scoreToBeat == null || currentScore < scoreToBeat) {\n      scoreToBeat = currentScore;\n      bestMoment = tempConfig;\n    }\n  }\n\n  return Object.assign(config, bestMoment || tempConfig);\n}\n","import { createLocalOrUTC } from './from-anything';\nimport { DateArray, DateObject } from '../types';\nimport { DateInput } from '../test/chain';\nimport { isDate } from '../utils/type-checks';\n\nexport function parseDate(input: DateInput, format?: string | string[],\n                          localeKey?: string, strict?: boolean, isUTC?: boolean): Date {\n  if (isDate(input)) {\n    return input;\n  }\n\n  const config = createLocalOrUTC(input, format, localeKey, strict, isUTC);\n\n  return config._d;\n}\n","export function absRound(num: number): number {\n  return num < 0 ? Math.round(num * -1) * -1 : Math.round(num);\n}\n","import { UnitOfTime } from '../types';\nimport { endOf, startOf } from './start-end-of';\n\nexport function isAfter(\n  date1: Date,\n  date2: Date,\n  units: UnitOfTime = 'milliseconds'\n): boolean {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  if (units === 'milliseconds') {\n    return date1.valueOf() > date2.valueOf();\n  }\n\n  return date2.valueOf() < startOf(date1, units).valueOf();\n}\n\nexport function isBefore(\n  date1: Date,\n  date2: Date,\n  units: UnitOfTime = 'milliseconds'\n): boolean {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  if (units === 'milliseconds') {\n    return date1.valueOf() < date2.valueOf();\n  }\n\n  return endOf(date1, units).valueOf() < date2.valueOf();\n}\n\nexport function isDisabledDay(date: Date, daysDisabled: number[]): boolean {\n  if (daysDisabled === undefined || !daysDisabled || !daysDisabled.length) {\n    return false;\n  }\n\n  return daysDisabled.some((day: number) => day === date.getDay());\n}\n\nexport function isBetween(\n  date: Date,\n  from: Date,\n  to: Date,\n  units: UnitOfTime,\n  inclusivity = '()'\n): boolean {\n  const leftBound =\n    inclusivity[0] === '('\n      ? isAfter(date, from, units)\n      : !isBefore(date, from, units);\n  const rightBound =\n    inclusivity[1] === ')'\n      ? isBefore(date, to, units)\n      : !isAfter(date, to, units);\n\n  return leftBound && rightBound;\n}\n\nexport function isSame(\n  date1: Date,\n  date2: Date,\n  units: UnitOfTime = 'milliseconds'\n): boolean {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  if (units === 'milliseconds') {\n    return date1.valueOf() === date2.valueOf();\n  }\n\n  const inputMs = date2.valueOf();\n\n  return (\n    startOf(date1, units).valueOf() <= inputMs &&\n    inputMs <= endOf(date1, units).valueOf()\n  );\n}\n\nexport function isSameDay(date1: Date, date2: Date):boolean{\n  return (date1.getDay() == date2.getDay());\n}\n\nexport function isSameOrAfter(\n  date1: Date,\n  date2: Date,\n  units?: UnitOfTime\n): boolean {\n  return isSame(date1, date2, units) || isAfter(date1, date2, units);\n}\n\nexport function isSameOrBefore(\n  date1: Date,\n  date2: Date,\n  units?: UnitOfTime\n): boolean {\n  return isSame(date1, date2, units) || isBefore(date1, date2, units);\n}\n","// ASP.NET json date format regex\nimport { Duration, isDuration } from './constructor';\nimport { isDateValid, isNumber, isObject, isString, toInt } from '../utils/type-checks';\nimport { DATE, HOUR, MILLISECOND, MINUTE, SECOND } from '../units/constants';\nimport { parseDate } from '../create/local';\nimport { absRound } from '../utils/abs-round';\nimport { DateObject } from '../types';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { cloneWithOffset } from '../units/offset';\nimport { isAfter, isBefore } from '../utils/date-compare';\nimport { getFullYear, getMonth } from '../utils/date-getters';\nimport { add } from '../moment/add-subtract';\nimport { cloneDate } from '../create/clone';\n\nconst aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n// and further modified to allow for strings containing both week and day\n// tslint:disable-next-line\nconst isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\nexport type DurationInput = string | number | Duration | Partial<DateObject> | { from: Date; to: Date };\n\nexport function createDuration(input?: DurationInput, key?: string, config: DateParsingConfig = {}) {\n  const duration = convertDuration(input, key);\n  // matching against regexp is expensive, do it on demand\n\n  return new Duration(duration, config);\n}\n\nfunction convertDuration(input: any, key: string): Partial<DateObject> {\n  // checks for null or undefined\n  if (input == null) {\n    return {};\n  }\n\n  if (isDuration(input)) {\n    return {\n      milliseconds: input._milliseconds,\n      day: input._days,\n      month: input._months\n    };\n  }\n  if (isNumber(input)) {\n    // duration = {};\n    return key ? { [key]: input } : { milliseconds: input };\n  }\n\n  if (isString(input)) {\n    let match = aspNetRegex.exec(input);\n\n    if (match) {\n      const sign = (match[1] === '-') ? -1 : 1;\n\n      return {\n        year: 0,\n        day: toInt(match[DATE]) * sign,\n        hours: toInt(match[HOUR]) * sign,\n        minutes: toInt(match[MINUTE]) * sign,\n        seconds: toInt(match[SECOND]) * sign,\n        // the millisecond decimal point is included in the match\n        milliseconds: toInt(absRound(toInt(match[MILLISECOND]) * 1000)) * sign\n      };\n    }\n\n    match = isoRegex.exec(input);\n    if (match) {\n      const sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;\n\n      return {\n        year: parseIso(match[2], sign),\n        month: parseIso(match[3], sign),\n        week: parseIso(match[4], sign),\n        day: parseIso(match[5], sign),\n        hours: parseIso(match[6], sign),\n        minutes: parseIso(match[7], sign),\n        seconds: parseIso(match[8], sign)\n      };\n    }\n\n  }\n\n  if (isObject<{from: any; to: any}>(input) && ('from' in input || 'to' in input)) {\n    const diffRes = momentsDifference(parseDate(input.from), parseDate(input.to));\n\n    return {\n      milliseconds: diffRes.milliseconds,\n      month: diffRes.months\n    };\n  }\n\n  return input;\n}\n\n// createDuration.fn = Duration.prototype;\n// createDuration.invalid = invalid;\n\nfunction parseIso(inp: string, sign: number): number {\n  // We'd normally use ~~inp for this, but unfortunately it also\n  // converts floats to ints.\n  // inp may be undefined, so careful calling replace on it.\n  const res = inp && parseFloat(inp.replace(',', '.'));\n  // apply sign while we're at it\n\n  return (isNaN(res) ? 0 : res) * sign;\n}\n\nfunction positiveMomentsDifference(base: Date, other: Date): { milliseconds: number; months: number } {\n  const res = { milliseconds: 0, months: 0 };\n\n  res.months = getMonth(other) - getMonth(base) +\n    (getFullYear(other) - getFullYear(base)) * 12;\n  const _basePlus = add(cloneDate(base), res.months, 'month');\n  if (isAfter(_basePlus, other)) {\n    --res.months;\n  }\n\n  res.milliseconds = +other - +(add(cloneDate(base), res.months, 'month'));\n\n  return res;\n}\n\nfunction momentsDifference(base: Date, other: Date): { milliseconds: number; months: number } {\n  if (!(isDateValid(base) && isDateValid(other))) {\n    return { milliseconds: 0, months: 0 };\n  }\n\n  let res;\n  const _other = cloneWithOffset(other, base, {_offset: base.getTimezoneOffset()});\n  if (isBefore(base, _other)) {\n    res = positiveMomentsDifference(base, _other);\n  } else {\n    res = positiveMomentsDifference(_other, base);\n    res.milliseconds = -res.milliseconds;\n    res.months = -res.months;\n  }\n\n  return res;\n}\n","import { createDuration } from '../duration/create';\nimport { absRound } from '../utils/abs-round';\nimport { Duration } from '../duration/constructor';\nimport { getDate, getMonth, getTime } from '../utils/date-getters';\nimport { setDate, setMonth, setTime } from '../utils/date-setters';\nimport { cloneDate } from '../create/clone';\nimport { UnitOfTime } from '../types';\n\nexport function add(date: Date, val: number, period: UnitOfTime, isUTC?: boolean): Date {\n  const dur = createDuration(val, period);\n\n  return addSubtract(date, dur, 1, isUTC);\n}\n\nexport function subtract(date: Date, val: number, period: UnitOfTime, isUTC?: boolean): Date {\n  const dur = createDuration(val, period);\n\n  return addSubtract(date, dur, -1, isUTC);\n}\n\nexport function addSubtract(date: Date, duration: Duration, isAdding: number, isUTC?: boolean): Date {\n  const milliseconds = duration._milliseconds;\n  const days = absRound(duration._days);\n  const months = absRound(duration._months);\n\n  // todo: add timezones support\n  // const _updateOffset = updateOffset == null ? true : updateOffset;\n\n  if (months) {\n    setMonth(date, getMonth(date, isUTC) + months * isAdding, isUTC);\n  }\n  if (days) {\n    setDate(date, getDate(date, isUTC) + days * isAdding, isUTC);\n  }\n  if (milliseconds) {\n    setTime(date, getTime(date) + milliseconds * isAdding);\n  }\n\n  return cloneDate(date);\n  // todo: add timezones support\n  // if (_updateOffset) {\n  //   hooks.updateOffset(date, days || months);\n  // }\n}\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n\n//! moment.js locale configuration\n//! locale : Arabic [ar]\n//! author : Abdel Said: https://github.com/abdelsaid\n//! author : Ahmed Elkhatib\n//! author : forabi https://github.com/forabi\n\nimport { LocaleData } from '../locale/locale.class';\n\nconst symbolMap: {[key: string]: string} = {\n  1: 'Ù¡',\n  2: 'Ù¢',\n  3: 'Ù£',\n  4: 'Ù¤',\n  5: 'Ù¥',\n  6: 'Ù¦',\n  7: 'Ù§',\n  8: 'Ù¨',\n  9: 'Ù©',\n  0: 'Ù '\n};\nconst numberMap: {[key: string]: string} = {\n  'Ù¡': '1',\n  'Ù¢': '2',\n  'Ù£': '3',\n  'Ù¤': '4',\n  'Ù¥': '5',\n  'Ù¦': '6',\n  'Ù§': '7',\n  'Ù¨': '8',\n  'Ù©': '9',\n  'Ù ': '0'\n};\nconst pluralForm = function (num: number): number {\n  return num === 0 ? 0 : num === 1 ? 1 : num === 2 ? 2 : num % 100 >= 3 && num % 100 <= 10 ? 3 : num % 100 >= 11 ? 4 : 5;\n};\nconst plurals: {[key: string]: [string, string, [string, string], string, string, string]} = {\n  s: ['Ø£ÙÙ ÙÙ Ø«Ø§ÙÙØ©', 'Ø«Ø§ÙÙØ© ÙØ§Ø­Ø¯Ø©', ['Ø«Ø§ÙÙØªØ§Ù', 'Ø«Ø§ÙÙØªÙÙ'], '%d Ø«ÙØ§Ù', '%d Ø«Ø§ÙÙØ©', '%d Ø«Ø§ÙÙØ©'],\n  m: ['Ø£ÙÙ ÙÙ Ø¯ÙÙÙØ©', 'Ø¯ÙÙÙØ© ÙØ§Ø­Ø¯Ø©', ['Ø¯ÙÙÙØªØ§Ù', 'Ø¯ÙÙÙØªÙÙ'], '%d Ø¯ÙØ§Ø¦Ù', '%d Ø¯ÙÙÙØ©', '%d Ø¯ÙÙÙØ©'],\n  h: ['Ø£ÙÙ ÙÙ Ø³Ø§Ø¹Ø©', 'Ø³Ø§Ø¹Ø© ÙØ§Ø­Ø¯Ø©', ['Ø³Ø§Ø¹ØªØ§Ù', 'Ø³Ø§Ø¹ØªÙÙ'], '%d Ø³Ø§Ø¹Ø§Øª', '%d Ø³Ø§Ø¹Ø©', '%d Ø³Ø§Ø¹Ø©'],\n  d: ['Ø£ÙÙ ÙÙ ÙÙÙ', 'ÙÙÙ ÙØ§Ø­Ø¯', ['ÙÙÙØ§Ù', 'ÙÙÙÙÙ'], '%d Ø£ÙØ§Ù', '%d ÙÙÙÙØ§', '%d ÙÙÙ'],\n  M: ['Ø£ÙÙ ÙÙ Ø´ÙØ±', 'Ø´ÙØ± ÙØ§Ø­Ø¯', ['Ø´ÙØ±Ø§Ù', 'Ø´ÙØ±ÙÙ'], '%d Ø£Ø´ÙØ±', '%d Ø´ÙØ±Ø§', '%d Ø´ÙØ±'],\n  y: ['Ø£ÙÙ ÙÙ Ø¹Ø§Ù', 'Ø¹Ø§Ù ÙØ§Ø­Ø¯', ['Ø¹Ø§ÙØ§Ù', 'Ø¹Ø§ÙÙÙ'], '%d Ø£Ø¹ÙØ§Ù', '%d Ø¹Ø§ÙÙØ§', '%d Ø¹Ø§Ù']\n};\nconst pluralize = function (u: string) {\n  return function (num: number, withoutSuffix: boolean): string {\n    const f = pluralForm(num);\n    let str = plurals[u][pluralForm(num)];\n    if (f === 2) {\n      str = str[withoutSuffix ? 0 : 1];\n    }\n\n    return (str as string).replace(/%d/i, num.toString());\n  };\n};\nconst months: string[] = [\n  'ÙÙØ§ÙØ±',\n  'ÙØ¨Ø±Ø§ÙØ±',\n  'ÙØ§Ø±Ø³',\n  'Ø£Ø¨Ø±ÙÙ',\n  'ÙØ§ÙÙ',\n  'ÙÙÙÙÙ',\n  'ÙÙÙÙÙ',\n  'Ø£ØºØ³Ø·Ø³',\n  'Ø³Ø¨ØªÙØ¨Ø±',\n  'Ø£ÙØªÙØ¨Ø±',\n  'ÙÙÙÙØ¨Ø±',\n  'Ø¯ÙØ³ÙØ¨Ø±'\n];\n\nexport const arLocale: LocaleData = {\n  abbr: 'ar',\n  months,\n  monthsShort: months,\n  weekdays: 'Ø§ÙØ£Ø­Ø¯_Ø§ÙØ¥Ø«ÙÙÙ_Ø§ÙØ«ÙØ§Ø«Ø§Ø¡_Ø§ÙØ£Ø±Ø¨Ø¹Ø§Ø¡_Ø§ÙØ®ÙÙØ³_Ø§ÙØ¬ÙØ¹Ø©_Ø§ÙØ³Ø¨Øª'.split('_'),\n  weekdaysShort: 'Ø£Ø­Ø¯_Ø¥Ø«ÙÙÙ_Ø«ÙØ§Ø«Ø§Ø¡_Ø£Ø±Ø¨Ø¹Ø§Ø¡_Ø®ÙÙØ³_Ø¬ÙØ¹Ø©_Ø³Ø¨Øª'.split('_'),\n  weekdaysMin: 'Ø­_Ù_Ø«_Ø±_Ø®_Ø¬_Ø³'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'D/\\u200FM/\\u200FYYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  meridiemParse: /Øµ|Ù/,\n  isPM(input) {\n    return 'Ù' === input;\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'Øµ';\n    } else {\n      return 'Ù';\n    }\n  },\n  calendar: {\n    sameDay: '[Ø§ÙÙÙÙ Ø¹ÙØ¯ Ø§ÙØ³Ø§Ø¹Ø©] LT',\n    nextDay: '[ØºØ¯ÙØ§ Ø¹ÙØ¯ Ø§ÙØ³Ø§Ø¹Ø©] LT',\n    nextWeek: 'dddd [Ø¹ÙØ¯ Ø§ÙØ³Ø§Ø¹Ø©] LT',\n    lastDay: '[Ø£ÙØ³ Ø¹ÙØ¯ Ø§ÙØ³Ø§Ø¹Ø©] LT',\n    lastWeek: 'dddd [Ø¹ÙØ¯ Ø§ÙØ³Ø§Ø¹Ø©] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'Ø¨Ø¹Ø¯ %s',\n    past: 'ÙÙØ° %s',\n    s: pluralize('s'),\n    ss: pluralize('s'),\n    m: pluralize('m'),\n    mm: pluralize('m'),\n    h: pluralize('h'),\n    hh: pluralize('h'),\n    d: pluralize('d'),\n    dd: pluralize('d'),\n    M: pluralize('M'),\n    MM: pluralize('M'),\n    y: pluralize('y'),\n    yy: pluralize('y')\n  },\n  preparse(str: string): string {\n    return str.replace(/[Ù¡Ù¢Ù£Ù¤Ù¥Ù¦Ù§Ù¨Ù©Ù ]/g, function (match) {\n      return numberMap[match];\n    }).replace(/Ø/g, ',');\n  },\n  postformat(str: string) {\n    return str.replace(/\\d/g, function (match) {\n      return symbolMap[match];\n    }).replace(/,/g, 'Ø');\n  },\n  week: {\n    dow: 6, // Saturday is the first day of the week.\n    doy: 12  // The week that contains Jan 1st is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { Khronos } from '../test/chain';\n\n//! moment.js locale configuration\n//! locale : Bulgarian [bg]\n//! author : Iskren Ivov Chernev : https://github.com/ichernev\n//! author : Kunal Marwaha : https://github.com/marwahaha\n//! author : Matt Grande : https://github.com/mattgrande\n//! author : Isaac Cambron : https://github.com/icambron\n//! author : Venelin Manchev : https://github.com/vmanchev\n\nexport const bgLocale: LocaleData = {\n  abbr: 'bg',\n  months: 'ÑÐ½ÑÐ°ÑÐ¸_ÑÐµÐ²ÑÑÐ°ÑÐ¸_Ð¼Ð°ÑÑ_Ð°Ð¿ÑÐ¸Ð»_Ð¼Ð°Ð¹_ÑÐ½Ð¸_ÑÐ»Ð¸_Ð°Ð²Ð³ÑÑÑ_ÑÐµÐ¿ÑÐµÐ¼Ð²ÑÐ¸_Ð¾ÐºÑÐ¾Ð¼Ð²ÑÐ¸_Ð½Ð¾ÐµÐ¼Ð²ÑÐ¸_Ð´ÐµÐºÐµÐ¼Ð²ÑÐ¸'.split('_'),\n  monthsShort: 'ÑÐ½Ñ_ÑÐµÐ²_Ð¼Ð°Ñ_Ð°Ð¿Ñ_Ð¼Ð°Ð¹_ÑÐ½Ð¸_ÑÐ»Ð¸_Ð°Ð²Ð³_ÑÐµÐ¿_Ð¾ÐºÑ_Ð½Ð¾Ðµ_Ð´ÐµÐº'.split('_'),\n  weekdays: 'Ð½ÐµÐ´ÐµÐ»Ñ_Ð¿Ð¾Ð½ÐµÐ´ÐµÐ»Ð½Ð¸Ðº_Ð²ÑÐ¾ÑÐ½Ð¸Ðº_ÑÑÑÐ´Ð°_ÑÐµÑÐ²ÑÑÑÑÐº_Ð¿ÐµÑÑÐº_ÑÑÐ±Ð¾ÑÐ°'.split('_'),\n  weekdaysShort: 'Ð½ÐµÐ´_Ð¿Ð¾Ð½_Ð²ÑÐ¾_ÑÑÑ_ÑÐµÑ_Ð¿ÐµÑ_ÑÑÐ±'.split('_'),\n  weekdaysMin: 'Ð½Ð´_Ð¿Ð½_Ð²Ñ_ÑÑ_ÑÑ_Ð¿Ñ_ÑÐ±'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'D.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY H:mm',\n    LLLL: 'dddd, D MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay: '[ÐÐ½ÐµÑ Ð²] LT',\n    nextDay: '[Ð£ÑÑÐµ Ð²] LT',\n    nextWeek: 'dddd [Ð²] LT',\n    lastDay: '[ÐÑÐµÑÐ° Ð²] LT',\n    lastWeek: function (d: any) {\n\n      switch (d) {\n        case 0:\n        case 3:\n        case 6:\n          return '[Ð Ð¸Ð·Ð¼Ð¸Ð½Ð°Ð»Ð°ÑÐ°] dddd [Ð²] LT';\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[Ð Ð¸Ð·Ð¼Ð¸Ð½Ð°Ð»Ð¸Ñ] dddd [Ð²] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'ÑÐ»ÐµÐ´ %s',\n    past: 'Ð¿ÑÐµÐ´Ð¸ %s',\n    s: 'Ð½ÑÐºÐ¾Ð»ÐºÐ¾ ÑÐµÐºÑÐ½Ð´Ð¸',\n    ss: '%d ÑÐµÐºÑÐ½Ð´Ð¸',\n    m: 'Ð¼Ð¸Ð½ÑÑÐ°',\n    mm: '%d Ð¼Ð¸Ð½ÑÑÐ¸',\n    h: 'ÑÐ°Ñ',\n    hh: '%d ÑÐ°ÑÐ°',\n    d: 'Ð´ÐµÐ½',\n    dd: '%d Ð´Ð½Ð¸',\n    M: 'Ð¼ÐµÑÐµÑ',\n    MM: '%d Ð¼ÐµÑÐµÑÐ°',\n    y: 'Ð³Ð¾Ð´Ð¸Ð½Ð°',\n    yy: '%d Ð³Ð¾Ð´Ð¸Ð½Ð¸'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(ÐµÐ²|ÐµÐ½|ÑÐ¸|Ð²Ð¸|ÑÐ¸|Ð¼Ð¸)/,\n  ordinal: function (_num: number): string {\n\n    const number = Number(_num);\n\n    let lastDigit = number % 10,\n      last2Digits = number % 100;\n\n    if (number === 0) {\n      return number + '-ÐµÐ²';\n    } else if (last2Digits === 0) {\n      return number + '-ÐµÐ½';\n    } else if (last2Digits > 10 && last2Digits < 20) {\n      return number + '-ÑÐ¸';\n    } else if (lastDigit === 1) {\n      return number + '-Ð²Ð¸';\n    } else if (lastDigit === 2) {\n      return number + '-ÑÐ¸';\n    } else if (lastDigit === 7 || lastDigit === 8) {\n      return number + '-Ð¼Ð¸';\n    } else {\n      return number + '-ÑÐ¸';\n    }\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7  // The week that contains Jan 1st is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getHours, getMonth } from '../utils/date-getters';\n\n//! moment.js locale configuration\n//! locale : Catalan [ca]\n//! author : Xavier Arbat : https://github.com/XavisaurusRex\n\nlet monthsShortDot = 'gen._feb._mar._abr._mai._jun._jul._ago._set._oct._nov._des.'.split('_'),\n  monthsShort = 'ene_feb_mar_abr_mai_jun_jul_ago_set_oct_nov_des'.split('_');\n\nlet monthsParse = [/^gen/i, /^feb/i, /^mar/i, /^abr/i, /^mai/i, /^jun/i, /^jul/i, /^ago/i, /^set/i, /^oct/i, /^nov/i, /^des/i];\nlet monthsRegex = /^(gener|febrer|marÃ§|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre|gen\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|jun\\.?|jul\\.?|ago\\.?|set\\.?|oct\\.?|nov\\.?|des\\.?)/i;\n\nexport const caLocale: LocaleData = {\n  abbr: 'ca',\n  months: 'gener_febrer_marÃ§_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\n    if (!date) {\n      return monthsShortDot;\n    }\n\n    if (/-MMM-/.test(format)) {\n      return monthsShort[getMonth(date, isUTC)];\n    }\n\n    return monthsShortDot[getMonth(date, isUTC)];\n  },\n  monthsRegex,\n  monthsShortRegex: monthsRegex,\n  monthsStrictRegex: /^(gener|febrer|marÃ§|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre)/i,\n  monthsShortStrictRegex: /^(gen\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|jun\\.?|jul\\.?|ago\\.?|set\\.?|oct\\.?|nov\\.?|des\\.?)/i,\n  monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n  weekdays: 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),\n  weekdaysShort: 'diu._dil._dim._dix._dij._div._dis.'.split('_'),\n  weekdaysMin: 'dg_dl_dt_dc_dj_dv_ds'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n  },\n  calendar: {\n    sameDay(date: Date) {\n      return '[avui a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n    nextDay(date: Date) {\n      return '[dema a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n    nextWeek(date: Date) {\n      return 'dddd [a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n    lastDay(date: Date) {\n      return '[ahir a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n    lastWeek(date: Date) {\n      return '[el] dddd [' + ('passada la ' + (getHours(date) !== 1) ? 'passades les' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'fa %s',\n    s: 'uns segons',\n    ss: '%d segons',\n    m: 'un minut',\n    mm: '%d minuts',\n    h: 'una hora',\n    hh: '%d hores',\n    d: 'un dia',\n    dd: '%d dies',\n    M: 'un mes',\n    MM: '%d mesos',\n    y: 'un any',\n    yy: '%d anys'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(er|on|er|rt|Ã©)/,\n  ordinal(_num: number): string {\n    const num = Number(_num);\n    const output = (num > 4) ? 'Ã©' :\n        (num === 1 || num === 3) ? 'r' :\n          (num === 2) ? 'n' :\n            (num === 4) ? 't' : 'Ã©';\n    return num + output;\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getDayOfWeek } from '../units/day-of-week';\n\n//! moment.js locale configuration\n//! locale : Czech [cs]\n//! author : petrbela : https://github.com/petrbela\n\nconst months: string[] = 'leden_Ãºnor_bÅezen_duben_kvÄten_Äerven_Äervenec_srpen_zÃ¡ÅÃ­_ÅÃ­jen_listopad_prosinec'.split('_');\nconst monthsShort: string[] = 'led_Ãºno_bÅe_dub_kvÄ_Ävn_Ävc_srp_zÃ¡Å_ÅÃ­j_lis_pro'.split('_');\n\nfunction plural(num: number): boolean {\n  return (num > 1) && (num < 5) && (~~(num / 10) !== 1);\n}\n\nfunction translate(num: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\n  const result = num + ' ';\n\n  switch (key) {\n    case 's':  // a few seconds / in a few seconds / a few seconds ago\n      return (withoutSuffix || isFuture) ? 'pÃ¡r sekund' : 'pÃ¡r sekundami';\n    case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'sekundy' : 'sekund');\n      } else {\n        return result + 'sekundami';\n      }\n    // break;\n    case 'm':  // a minute / in a minute / a minute ago\n      return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');\n    case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'minuty' : 'minut');\n      } else {\n        return result + 'minutami';\n      }\n    // break;\n    case 'h':  // an hour / in an hour / an hour ago\n      return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n    case 'hh': // 9 hours / in 9 hours / 9 hours ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'hodiny' : 'hodin');\n      } else {\n        return result + 'hodinami';\n      }\n    // break;\n    case 'd':  // a day / in a day / a day ago\n      return (withoutSuffix || isFuture) ? 'den' : 'dnem';\n    case 'dd': // 9 days / in 9 days / 9 days ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'dny' : 'dnÃ­');\n      } else {\n        return result + 'dny';\n      }\n    // break;\n    case 'M':  // a month / in a month / a month ago\n      return (withoutSuffix || isFuture) ? 'mÄsÃ­c' : 'mÄsÃ­cem';\n    case 'MM': // 9 months / in 9 months / 9 months ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'mÄsÃ­ce' : 'mÄsÃ­cÅ¯');\n      } else {\n        return result + 'mÄsÃ­ci';\n      }\n    // break;\n    case 'y':  // a year / in a year / a year ago\n      return (withoutSuffix || isFuture) ? 'rok' : 'rokem';\n    case 'yy': // 9 years / in 9 years / 9 years ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'roky' : 'let');\n      } else {\n        return result + 'lety';\n      }\n    // break;\n  }\n}\n\nexport const csLocale: LocaleData = {\n  abbr: 'cs',\n  months,\n  monthsShort,\n  monthsParse: (function (months, monthsShort) {\n    let i, _monthsParse = [];\n    for (i = 0; i < 12; i++) {\n      // use custom parser to solve problem with July (Äervenec)\n      _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');\n    }\n    return _monthsParse;\n  }(months, monthsShort)),\n  shortMonthsParse: (function (monthsShort) {\n    let i, _shortMonthsParse = [];\n    for (i = 0; i < 12; i++) {\n      _shortMonthsParse[i] = new RegExp('^' + monthsShort[i] + '$', 'i');\n    }\n    return _shortMonthsParse;\n  }(monthsShort)),\n  longMonthsParse: (function (months) {\n    let i, _longMonthsParse = [];\n    for (i = 0; i < 12; i++) {\n      _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');\n    }\n    return _longMonthsParse;\n  }(months)),\n  weekdays: 'nedÄle_pondÄlÃ­_ÃºterÃ½_stÅeda_Ätvrtek_pÃ¡tek_sobota'.split('_'),\n  weekdaysShort: 'ne_po_Ãºt_st_Ät_pÃ¡_so'.split('_'),\n  weekdaysMin: 'ne_po_Ãºt_st_Ät_pÃ¡_so'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd D. MMMM YYYY H:mm',\n    l: 'D. M. YYYY'\n  },\n  calendar: {\n    sameDay: '[dnes v] LT',\n    nextDay: '[zÃ­tra v] LT',\n    nextWeek(date: Date): string {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[v nedÄli v] LT';\n        case 1:\n        case 2:\n          return '[v] dddd [v] LT';\n        case 3:\n          return '[ve stÅedu v] LT';\n        case 4:\n          return '[ve Ätvrtek v] LT';\n        case 5:\n          return '[v pÃ¡tek v] LT';\n        case 6:\n          return '[v sobotu v] LT';\n      }\n    },\n    lastDay: '[vÄera v] LT',\n    lastWeek(date: Date): string {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[minulou nedÄli v] LT';\n        case 1:\n        case 2:\n          return '[minulÃ©] dddd [v] LT';\n        case 3:\n          return '[minulou stÅedu v] LT';\n        case 4:\n        case 5:\n          return '[minulÃ½] dddd [v] LT';\n        case 6:\n          return '[minulou sobotu v] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'za %s',\n    past: 'pÅed %s',\n    s: translate,\n    ss: translate,\n    m: translate,\n    mm: translate,\n    h: translate,\n    hh: translate,\n    d: translate,\n    dd: translate,\n    M: translate,\n    MM: translate,\n    y: translate,\n    yy: translate\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n","// tslint:disable:comment-format\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Danish (Denmark) [da]\n//! author : Per Hansen : https://github.com/perhp\n\nexport const daLocale: LocaleData = {\n  abbr: 'da',\n  months : 'Januar_Februar_Marts_April_Maj_Juni_Juli_August_September_Oktober_November_December'.split('_'),\n  monthsShort : 'Jan_Feb_Mar_Apr_Maj_Jun_Jul_Aug_Sep_Okt_Nov_Dec'.split('_'),\n  weekdays : 'SÃ¸ndag_Mandag_Tirsdag_Onsdag_Torsdag_Fredag_LÃ¸rdag'.split('_'),\n  weekdaysShort : 'SÃ¸n_Man_Tir_Ons_Tor_Fre_LÃ¸r'.split('_'),\n  weekdaysMin : 'SÃ¸_Ma_Ti_On_To_Fr_LÃ¸'.split('_'),\n  longDateFormat : {\n      LT : 'HH:mm',\n      LTS : 'HH:mm:ss',\n      L : 'DD/MM/YYYY',\n      LL : 'D. MMMM YYYY',\n      LLL : 'D. MMMM YYYY HH:mm',\n      LLLL : 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'\n  },\n  calendar : {\n      sameDay : '[i dag kl.] LT',\n      nextDay : '[i morgen kl.] LT',\n      nextWeek : 'pÃ¥ dddd [kl.] LT',\n      lastDay : '[i gÃ¥r kl.] LT',\n      lastWeek : '[i] dddd[s kl.] LT',\n      sameElse : 'L'\n  },\n  relativeTime : {\n      future : 'om %s',\n      past : '%s siden',\n      s : 'fÃ¥ sekunder',\n      m : 'et minut',\n      mm : '%d minutter',\n      h : 'en time',\n      hh : '%d timer',\n      d : 'en dag',\n      dd : '%d dage',\n      M : 'en mÃ¥ned',\n      MM : '%d mÃ¥neder',\n      y : 'et Ã¥r',\n      yy : '%d Ã¥r'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal : '%d.',\n  week : {\n      dow : 1, // Monday is the first day of the week.\n      doy : 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:object-literal-key-quotes\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : German [de]\n//! author : lluchs : https://github.com/lluchs\n//! author: Menelion ElensÃºle: https://github.com/Oire\n//! author : Mikolaj Dadela : https://github.com/mik01aj\n\nfunction processRelativeTime(num: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\n  const format: { [key: string]: [string, string] } = {\n    'm': ['eine Minute', 'einer Minute'],\n    'h': ['eine Stunde', 'einer Stunde'],\n    'd': ['ein Tag', 'einem Tag'],\n    'dd': [num + ' Tage', num + ' Tagen'],\n    'M': ['ein Monat', 'einem Monat'],\n    'MM': [num + ' Monate', num + ' Monaten'],\n    'y': ['ein Jahr', 'einem Jahr'],\n    'yy': [num + ' Jahre', num + ' Jahren']\n  };\n  return withoutSuffix ? format[key][0] : format[key][1];\n}\n\nexport const deLocale: LocaleData = {\n  abbr: 'de',\n  months: 'Januar_Februar_MÃ¤rz_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n  monthsShort: 'Jan._Feb._MÃ¤rz_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n  weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n  weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY HH:mm',\n    LLLL: 'dddd, D. MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[heute um] LT [Uhr]',\n    sameElse: 'L',\n    nextDay: '[morgen um] LT [Uhr]',\n    nextWeek: 'dddd [um] LT [Uhr]',\n    lastDay: '[gestern um] LT [Uhr]',\n    lastWeek: '[letzten] dddd [um] LT [Uhr]'\n  },\n  relativeTime: {\n    future: 'in %s',\n    past: 'vor %s',\n    s: 'ein paar Sekunden',\n    ss: '%d Sekunden',\n    m: processRelativeTime,\n    mm: '%d Minuten',\n    h: processRelativeTime,\n    hh: '%d Stunden',\n    d: processRelativeTime,\n    dd: processRelativeTime,\n    M: processRelativeTime,\n    MM: processRelativeTime,\n    y: processRelativeTime,\n    yy: processRelativeTime\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : English (United Kingdom) [en-gb]\n//! author : Chris Gedrim : https://github.com/chrisgedrim\n\nexport const enGbLocale: LocaleData = {\n  abbr: 'en-gb',\n  months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n  monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n  weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n  weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n  weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n  longDateFormat : {\n    LT : 'HH:mm',\n    LTS : 'HH:mm:ss',\n    L : 'DD/MM/YYYY',\n    LL : 'D MMMM YYYY',\n    LLL : 'D MMMM YYYY HH:mm',\n    LLLL : 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar : {\n    sameDay : '[Today at] LT',\n    nextDay : '[Tomorrow at] LT',\n    nextWeek : 'dddd [at] LT',\n    lastDay : '[Yesterday at] LT',\n    lastWeek : '[Last] dddd [at] LT',\n    sameElse : 'L'\n  },\n  relativeTime : {\n    future : 'in %s',\n    past : '%s ago',\n    s : 'a few seconds',\n    ss : '%d seconds',\n    m : 'a minute',\n    mm : '%d minutes',\n    h : 'an hour',\n    hh : '%d hours',\n    d : 'a day',\n    dd : '%d days',\n    M : 'a month',\n    MM : '%d months',\n    y : 'a year',\n    yy : '%d years'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n  ordinal(_num: number): string {\n    const num = Number(_num);\n    const b = num % 10,\n      output = (~~(num % 100 / 10) === 1) ? 'th' :\n        (b === 1) ? 'st' :\n          (b === 2) ? 'nd' :\n            (b === 3) ? 'rd' : 'th';\n    return num + output;\n  },\n  week : {\n    dow : 1, // Monday is the first day of the week.\n    doy : 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getHours, getMonth } from '../utils/date-getters';\n\n//! moment.js locale configuration\n//! locale : Spanish (Dominican Republic) [es-do]\n\nlet monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n  monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\nlet monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\nlet monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\nexport const esDoLocale: LocaleData = {\n  abbr: 'es-do',\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\n    if (!date) {\n      return monthsShortDot;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShort[getMonth(date, isUTC)];\n    } else {\n      return monthsShortDot[getMonth(date, isUTC)];\n    }\n  },\n  monthsRegex,\n  monthsShortRegex: monthsRegex,\n  monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n  monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n  monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n  weekdays: 'domingo_lunes_martes_miÃ©rcoles_jueves_viernes_sÃ¡bado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._miÃ©._jue._vie._sÃ¡b.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sÃ¡'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY h:mm A',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A'\n  },\n  calendar: {\n    sameDay(date: Date): string {\n      return '[hoy a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    nextDay(date: Date): string {\n      return '[maÃ±ana a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    nextWeek(date: Date): string {\n      return 'dddd [a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    lastDay(date: Date): string {\n      return '[ayer a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    lastWeek(date: Date): string {\n      return '[el] dddd [pasado a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un dÃ­a',\n    dd: '%d dÃ­as',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un aÃ±o',\n    yy: '%d aÃ±os'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}Âº/,\n  ordinal: '%dÂº',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getHours, getMonth } from '../utils/date-getters';\n\n//! moment.js locale configuration\n//! locale : Spanish [es]\n//! author : Julio NapurÃ­ : https://github.com/julionc\n\nlet monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n  monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\nlet monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\nlet monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\nexport const esLocale: LocaleData = {\n  abbr: 'es',\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\n    if (!date) {\n      return monthsShortDot;\n    }\n\n    if (/-MMM-/.test(format)) {\n      return monthsShort[getMonth(date, isUTC)];\n    }\n\n    return monthsShortDot[getMonth(date, isUTC)];\n  },\n  monthsRegex,\n  monthsShortRegex: monthsRegex,\n  monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n  monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n  monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n  weekdays: 'domingo_lunes_martes_miÃ©rcoles_jueves_viernes_sÃ¡bado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._miÃ©._jue._vie._sÃ¡b.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sÃ¡'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n  },\n  calendar: {\n    sameDay(date: Date) {\n      return '[hoy a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    nextDay(date: Date) {\n      return '[maÃ±ana a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    nextWeek(date: Date) {\n      return 'dddd [a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    lastDay(date: Date) {\n      return '[ayer a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    lastWeek(date: Date) {\n      return '[el] dddd [pasado a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un dÃ­a',\n    dd: '%d dÃ­as',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un aÃ±o',\n    yy: '%d aÃ±os'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}Âº/,\n  ordinal: '%dÂº',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getHours, getMonth } from '../utils/date-getters';\n\n//! moment.js locale configuration\n//! locale : Spanish (United States) [es-us]\n//! author : bustta : https://github.com/bustta\n\nlet monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\nlet monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\nexport const esUsLocale: LocaleData = {\n  abbr: 'es-us',\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\n    if (!date) {\n      return monthsShortDot;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShort[getMonth(date, isUTC)];\n    } else {\n      return monthsShortDot[getMonth(date, isUTC)];\n    }\n  },\n  monthsParseExact: true,\n  weekdays: 'domingo_lunes_martes_miÃ©rcoles_jueves_viernes_sÃ¡bado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._miÃ©._jue._vie._sÃ¡b.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sÃ¡'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM [de] D [de] YYYY',\n    LLL: 'MMMM [de] D [de] YYYY h:mm A',\n    LLLL: 'dddd, MMMM [de] D [de] YYYY h:mm A'\n  },\n  calendar: {\n    sameDay(date: Date): string {\n      return '[hoy a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    nextDay(date: Date): string {\n      return '[maÃ±ana a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    nextWeek(date: Date): string {\n      return 'dddd [a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    lastDay(date: Date): string {\n      return '[ayer a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    lastWeek(date: Date): string {\n      return '[el] dddd [pasado a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un dÃ­a',\n    dd: '%d dÃ­as',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un aÃ±o',\n    yy: '%d aÃ±os'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}Âº/,\n  ordinal: '%dÂº',\n  week: {\n    dow: 0, // Sunday is the first day of the week.\n    doy: 6  // The week that contains Jan 1st is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n// https://github.com/moment/moment/blob/develop/locale/fi.js\n\nvar numbersPast = 'nolla yksi kaksi kolme neljÃ¤ viisi kuusi seitsemÃ¤n kahdeksan yhdeksÃ¤n'.split(' '),\n  numbersFuture = [\n    'nolla', 'yhden', 'kahden', 'kolmen', 'neljÃ¤n', 'viiden', 'kuuden',\n    numbersPast[7], numbersPast[8], numbersPast[9]\n  ];\n\nfunction translate(num: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\n  var result = '';\n  switch (key) {\n    case 's':\n      return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';\n    case 'ss':\n      return isFuture ? 'sekunnin' : 'sekuntia';\n    case 'm':\n      return isFuture ? 'minuutin' : 'minuutti';\n    case 'mm':\n      result = isFuture ? 'minuutin' : 'minuuttia';\n      break;\n    case 'h':\n      return isFuture ? 'tunnin' : 'tunti';\n    case 'hh':\n      result = isFuture ? 'tunnin' : 'tuntia';\n      break;\n    case 'd':\n      return isFuture ? 'pÃ¤ivÃ¤n' : 'pÃ¤ivÃ¤';\n    case 'dd':\n      result = isFuture ? 'pÃ¤ivÃ¤n' : 'pÃ¤ivÃ¤Ã¤';\n      break;\n    case 'M':\n      return isFuture ? 'kuukauden' : 'kuukausi';\n    case 'MM':\n      result = isFuture ? 'kuukauden' : 'kuukautta';\n      break;\n    case 'y':\n      return isFuture ? 'vuoden' : 'vuosi';\n    case 'yy':\n      result = isFuture ? 'vuoden' : 'vuotta';\n      break;\n  }\n  result = verbalNumber(num, isFuture) + ' ' + result;\n  return result;\n}\n\nfunction verbalNumber(num: number, isFuture: boolean) {\n  return num < 10 ? (isFuture ? numbersFuture[num] : numbersPast[num]) : num;\n}\n\nexport const fiLocale: LocaleData = {\n  abbr: 'fi',\n  months: 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesÃ¤kuu_heinÃ¤kuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),\n  monthsShort: 'tammi_helmi_maalis_huhti_touko_kesÃ¤_heinÃ¤_elo_syys_loka_marras_joulu'.split('_'),\n  weekdays: 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),\n  weekdaysShort: 'su_ma_ti_ke_to_pe_la'.split('_'),\n  weekdaysMin: 'su_ma_ti_ke_to_pe_la'.split('_'),\n  longDateFormat: {\n    LT: 'HH.mm',\n    LTS: 'HH.mm.ss',\n    L: 'DD.MM.YYYY',\n    LL: 'Do MMMM[ta] YYYY',\n    LLL: 'Do MMMM[ta] YYYY, [klo] HH.mm',\n    LLLL: 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',\n    l: 'D.M.YYYY',\n    ll: 'Do MMM YYYY',\n    lll: 'Do MMM YYYY, [klo] HH.mm',\n    llll: 'ddd, Do MMM YYYY, [klo] HH.mm'\n  },\n  calendar: {\n    sameDay: '[tÃ¤nÃ¤Ã¤n] [klo] LT',\n    nextDay: '[huomenna] [klo] LT',\n    nextWeek: 'dddd [klo] LT',\n    lastDay: '[eilen] [klo] LT',\n    lastWeek: '[viime] dddd[na] [klo] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s pÃ¤Ã¤stÃ¤',\n    past: '%s sitten',\n    s: translate,\n    ss: translate,\n    m: translate,\n    mm: translate,\n    h: translate,\n    hh: translate,\n    d: translate,\n    dd: translate,\n    M: translate,\n    MM: translate,\n    y: translate,\n    yy: translate\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : French [fr]\n//! author : John Fischer : https://github.com/jfroffice\n\nexport const frLocale: LocaleData = {\n  abbr: 'fr',\n  months: 'janvier_fÃ©vrier_mars_avril_mai_juin_juillet_aoÃ»t_septembre_octobre_novembre_dÃ©cembre'.split('_'),\n  monthsShort: 'janv._fÃ©vr._mars_avr._mai_juin_juil._aoÃ»t_sept._oct._nov._dÃ©c.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n  weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n  weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Aujourdâhui Ã ] LT',\n    nextDay: '[Demain Ã ] LT',\n    nextWeek: 'dddd [Ã ] LT',\n    lastDay: '[Hier Ã ] LT',\n    lastWeek: 'dddd [dernier Ã ] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'dans %s',\n    past: 'il y a %s',\n    s: 'quelques secondes',\n    ss: '%d secondes',\n    m: 'une minute',\n    mm: '%d minutes',\n    h: 'une heure',\n    hh: '%d heures',\n    d: 'un jour',\n    dd: '%d jours',\n    M: 'un mois',\n    MM: '%d mois',\n    y: 'un an',\n    yy: '%d ans'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(er|)/,\n  ordinal(_num: number, period: string): string {\n    const num = Number(_num);\n    switch (period) {\n      // TODO: Return 'e' when day of month > 1. Move this case inside\n      // block for masculine words below.\n      // See https://github.com/moment/moment/issues/3375\n      case 'D':\n        return num + (num === 1 ? 'er' : '');\n\n      // Words with masculine grammatical gender: mois, trimestre, jour\n      default:\n      case 'M':\n      case 'Q':\n      case 'DDD':\n      case 'd':\n        return num + (num === 1 ? 'er' : 'e');\n\n      // Words with feminine grammatical gender: semaine\n      case 'w':\n      case 'W':\n        return num + (num === 1 ? 're' : 'e');\n    }\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getHours, getMonth } from '../utils/date-getters';\n\n//! moment.js locale configuration\n//! locale : Galician [gl]\n//! author : DarÃ­o BeirÃ³ : https://github.com/quinobravo\n\nlet monthsShortDot = 'xan._feb._mar._abr._mai._xuÃ±._xul._ago._set._out._nov._dec.'.split('_'),\n  monthsShort = 'xan_feb_mar_abr_mai_xuÃ±_xul_ago_set_out_nov_dec'.split('_');\n\nlet monthsParse = [/^xan/i, /^feb/i, /^mar/i, /^abr/i, /^mai/i, /^xuÃ±/i, /^xul/i, /^ago/i, /^set/i, /^out/i, /^nov/i, /^dec/i];\nlet monthsRegex = /^(xaneiro|febreiro|marzo|abril|maio|xuÃ±o|xullo|agosto|setembro|outubro|novembro|decembro|xan\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|xuÃ±\\.?|xul\\.?|ago\\.?|set\\.?|out\\.?|nov\\.?|dec\\.?)/i;\n\nexport const glLocale: LocaleData = {\n  abbr: 'gl',\n  months: 'xaneiro_febreiro_marzo_abril_maio_xuÃ±o_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\n    if (!date) {\n      return monthsShortDot;\n    }\n\n    if (/-MMM-/.test(format)) {\n      return monthsShort[getMonth(date, isUTC)];\n    }\n\n    return monthsShortDot[getMonth(date, isUTC)];\n  },\n  monthsRegex,\n  monthsShortRegex: monthsRegex,\n  monthsStrictRegex: /^(xaneiro|febreiro|marzo|abril|maio|xuÃ±o|xullo|agosto|setembro|outubro|novembro|decembro)/i,\n  monthsShortStrictRegex: /^(xan\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|xuÃ±\\.?|xul\\.?|ago\\.?|set\\.?|out\\.?|nov\\.?|dec\\.?)/i,\n  monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n  weekdays: 'domingo_luns_martes_mÃ©rcores_xoves_venres_sÃ¡bado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mÃ©r._xov._ven._sÃ¡b.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mÃ©_xo_ve_sÃ¡'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n  },\n  calendar: {\n    sameDay(date: Date) {\n      return '[hoxe Ã¡' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    nextDay(date: Date) {\n      return '[maÃ±an Ã¡' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    nextWeek(date: Date) {\n      return 'dddd [Ã¡' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    lastDay(date: Date) {\n      return '[onte Ã¡' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    lastWeek(date: Date) {\n      return '[o] dddd [pasado Ã¡' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'fai %s',\n    s: 'uns segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'unha hora',\n    hh: '%d horas',\n    d: 'un dÃ­a',\n    dd: '%d dÃ­as',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un ano',\n    yy: '%d anos'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}Âº/,\n  ordinal: '%dÂº',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Hebrew [he]\n//! author : Tomer Cohen : https://github.com/tomer\n//! author : Moshe Simantov : https://github.com/DevelopmentIL\n//! author : Tal Ater : https://github.com/TalAter\n\nexport const heLocale: LocaleData = {\n  abbr: 'he',\n  months: '×× ×××¨_×¤××¨×××¨_××¨×¥_××¤×¨××_×××_××× ×_××××_×××××¡×_×¡×¤××××¨_×××§××××¨_× ×××××¨_××¦×××¨'.split('_'),\n  monthsShort: '×× ××³_×¤××¨×³_××¨×¥_××¤×¨×³_×××_××× ×_××××_××××³_×¡×¤××³_×××§×³_× ×××³_××¦××³'.split('_'),\n  weekdays: '×¨××©××_×©× ×_×©×××©×_×¨×××¢×_××××©×_×©××©×_×©××ª'.split('_'),\n  weekdaysShort: '××³_××³_××³_××³_××³_××³_×©×³'.split('_'),\n  weekdaysMin: '×_×_×_×_×_×_×©'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [×]MMMM YYYY',\n    LLL: 'D [×]MMMM YYYY HH:mm',\n    LLLL: 'dddd, D [×]MMMM YYYY HH:mm',\n    l: 'D/M/YYYY',\n    ll: 'D MMM YYYY',\n    lll: 'D MMM YYYY HH:mm',\n    llll: 'ddd, D MMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[×××× ×Ö¾]LT',\n    nextDay: '[×××¨ ×Ö¾]LT',\n    nextWeek: 'dddd [××©×¢×] LT',\n    lastDay: '[××ª××× ×Ö¾]LT',\n    lastWeek: '[××××] dddd [××××¨×× ××©×¢×] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '××¢×× %s',\n    past: '××¤× × %s',\n    s: '××¡×¤×¨ ×©× ×××ª',\n    ss: '%d ×©× ×××ª',\n    m: '××§×',\n    mm: '%d ××§××ª',\n    h: '×©×¢×',\n    hh(num: number): string {\n      if (num === 2) {\n        return '×©×¢×ª×××';\n      }\n      return num + ' ×©×¢××ª';\n    },\n    d: '×××',\n    dd(num: number): string {\n      if (num === 2) {\n        return '××××××';\n      }\n      return num + ' ××××';\n    },\n    M: '××××©',\n    MM(num: number): string {\n      if (num === 2) {\n        return '××××©×××';\n      }\n      return num + ' ××××©××';\n    },\n    y: '×©× ×',\n    yy(num: number): string {\n      if (num === 2) {\n        return '×©× ×ª×××';\n      } else if (num % 10 === 0 && num !== 10) {\n        return num + ' ×©× ×';\n      }\n      return num + ' ×©× ××';\n    }\n  },\n  meridiemParse: /×××\"×¦|××¤× ×\"×¦|×××¨× ××¦××¨×××|××¤× × ××¦××¨×××|××¤× ××ª ×××§×¨|××××§×¨|××¢×¨×/i,\n  isPM(input) {\n    return /^(×××\"×¦|×××¨× ××¦××¨×××|××¢×¨×)$/.test(input);\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 5) {\n      return '××¤× ××ª ×××§×¨';\n    } else if (hour < 10) {\n      return '××××§×¨';\n    } else if (hour < 12) {\n      return isLower ? '××¤× ×\"×¦' : '××¤× × ××¦××¨×××';\n    } else if (hour < 18) {\n      return isLower ? '×××\"×¦' : '×××¨× ××¦××¨×××';\n    } else {\n      return '××¢×¨×';\n    }\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:no-parameter-reassignment prefer-switch\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Hindi [hi]\n//! author : Mayank Singhal : https://github.com/mayanksinghal\n\nlet symbolMap: {[key: string]: string} = {\n    1: 'à¥§',\n    2: 'à¥¨',\n    3: 'à¥©',\n    4: 'à¥ª',\n    5: 'à¥«',\n    6: 'à¥¬',\n    7: 'à¥­',\n    8: 'à¥®',\n    9: 'à¥¯',\n    0: 'à¥¦'\n  },\n  numberMap: {[key: string]: string} = {\n    'à¥§': '1',\n    'à¥¨': '2',\n    'à¥©': '3',\n    'à¥ª': '4',\n    'à¥«': '5',\n    'à¥¬': '6',\n    'à¥­': '7',\n    'à¥®': '8',\n    'à¥¯': '9',\n    'à¥¦': '0'\n  };\n\nexport const hiLocale: LocaleData = {\n  abbr: 'hi',\n  months: 'à¤à¤¨à¤µà¤°à¥_à¤«à¤¼à¤°à¤µà¤°à¥_à¤®à¤¾à¤°à¥à¤_à¤à¤ªà¥à¤°à¥à¤²_à¤®à¤_à¤à¥à¤¨_à¤à¥à¤²à¤¾à¤_à¤à¤à¤¸à¥à¤¤_à¤¸à¤¿à¤¤à¤®à¥à¤¬à¤°_à¤à¤à¥à¤à¥à¤¬à¤°_à¤¨à¤µà¤®à¥à¤¬à¤°_à¤¦à¤¿à¤¸à¤®à¥à¤¬à¤°'.split('_'),\n  monthsShort: 'à¤à¤¨._à¤«à¤¼à¤°._à¤®à¤¾à¤°à¥à¤_à¤à¤ªà¥à¤°à¥._à¤®à¤_à¤à¥à¤¨_à¤à¥à¤²._à¤à¤._à¤¸à¤¿à¤¤._à¤à¤à¥à¤à¥._à¤¨à¤µ._à¤¦à¤¿à¤¸.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'à¤°à¤µà¤¿à¤µà¤¾à¤°_à¤¸à¥à¤®à¤µà¤¾à¤°_à¤®à¤à¤à¤²à¤µà¤¾à¤°_à¤¬à¥à¤§à¤µà¤¾à¤°_à¤à¥à¤°à¥à¤µà¤¾à¤°_à¤¶à¥à¤à¥à¤°à¤µà¤¾à¤°_à¤¶à¤¨à¤¿à¤µà¤¾à¤°'.split('_'),\n  weekdaysShort: 'à¤°à¤µà¤¿_à¤¸à¥à¤®_à¤®à¤à¤à¤²_à¤¬à¥à¤§_à¤à¥à¤°à¥_à¤¶à¥à¤à¥à¤°_à¤¶à¤¨à¤¿'.split('_'),\n  weekdaysMin: 'à¤°_à¤¸à¥_à¤®à¤_à¤¬à¥_à¤à¥_à¤¶à¥_à¤¶'.split('_'),\n  longDateFormat: {\n    LT: 'A h:mm à¤¬à¤à¥',\n    LTS: 'A h:mm:ss à¤¬à¤à¥',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY, A h:mm à¤¬à¤à¥',\n    LLLL: 'dddd, D MMMM YYYY, A h:mm à¤¬à¤à¥'\n  },\n  calendar: {\n    sameDay: '[à¤à¤] LT',\n    nextDay: '[à¤à¤²] LT',\n    nextWeek: 'dddd, LT',\n    lastDay: '[à¤à¤²] LT',\n    lastWeek: '[à¤ªà¤¿à¤à¤²à¥] dddd, LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s à¤®à¥à¤',\n    past: '%s à¤ªà¤¹à¤²à¥',\n    s: 'à¤à¥à¤ à¤¹à¥ à¤à¥à¤·à¤£',\n    ss: '%d à¤¸à¥à¤à¤à¤¡',\n    m: 'à¤à¤ à¤®à¤¿à¤¨à¤',\n    mm: '%d à¤®à¤¿à¤¨à¤',\n    h: 'à¤à¤ à¤à¤à¤à¤¾',\n    hh: '%d à¤à¤à¤à¥',\n    d: 'à¤à¤ à¤¦à¤¿à¤¨',\n    dd: '%d à¤¦à¤¿à¤¨',\n    M: 'à¤à¤ à¤®à¤¹à¥à¤¨à¥',\n    MM: '%d à¤®à¤¹à¥à¤¨à¥',\n    y: 'à¤à¤ à¤µà¤°à¥à¤·',\n    yy: '%d à¤µà¤°à¥à¤·'\n  },\n  preparse(str: string): string {\n    return str.replace(/[à¥§à¥¨à¥©à¥ªà¥«à¥¬à¥­à¥®à¥¯à¥¦]/g, function (match) {\n      return numberMap[match];\n    });\n  },\n  postformat(str: string): string {\n    return str.replace(/\\d/g, function (match) {\n      return symbolMap[match];\n    });\n  },\n  // Hindi notation for meridiems are quite fuzzy in practice. While there exists\n  // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.\n  meridiemParse: /à¤°à¤¾à¤¤|à¤¸à¥à¤¬à¤¹|à¤¦à¥à¤ªà¤¹à¤°|à¤¶à¤¾à¤®/,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === 'à¤°à¤¾à¤¤') {\n      return hour < 4 ? hour : hour + 12;\n    } else if (meridiem === 'à¤¸à¥à¤¬à¤¹') {\n      return hour;\n    } else if (meridiem === 'à¤¦à¥à¤ªà¤¹à¤°') {\n      return hour >= 10 ? hour : hour + 12;\n    } else if (meridiem === 'à¤¶à¤¾à¤®') {\n      return hour + 12;\n    }\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'à¤°à¤¾à¤¤';\n    } else if (hour < 10) {\n      return 'à¤¸à¥à¤¬à¤¹';\n    } else if (hour < 17) {\n      return 'à¤¦à¥à¤ªà¤¹à¤°';\n    } else if (hour < 20) {\n      return 'à¤¶à¤¾à¤®';\n    } else {\n      return 'à¤°à¤¾à¤¤';\n    }\n  },\n  week: {\n    dow: 0, // Sunday is the first day of the week.\n    doy: 6  // The week that contains Jan 1st is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getDayOfWeek } from '../units/day-of-week';\n\n//! moment.js locale configuration\n//! locale : Hungarian [hu]\n//! author : Adam Brunner : https://github.com/adambrunner\n\nlet weekEndings = 'vasÃ¡rnap hÃ©tfÅn kedden szerdÃ¡n csÃ¼tÃ¶rtÃ¶kÃ¶n pÃ©nteken szombaton'.split(' ');\nfunction translate(num: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\n  switch (key) {\n    case 's':\n      return (isFuture || withoutSuffix) ? 'nÃ©hÃ¡ny mÃ¡sodperc' : 'nÃ©hÃ¡ny mÃ¡sodperce';\n    case 'ss':\n      return num + ((isFuture || withoutSuffix) ? ' mÃ¡sodperc' : ' mÃ¡sodperce');\n    case 'm':\n      return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');\n    case 'mm':\n      return num + (isFuture || withoutSuffix ? ' perc' : ' perce');\n    case 'h':\n      return 'egy' + (isFuture || withoutSuffix ? ' Ã³ra' : ' Ã³rÃ¡ja');\n    case 'hh':\n      return num + (isFuture || withoutSuffix ? ' Ã³ra' : ' Ã³rÃ¡ja');\n    case 'd':\n      return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');\n    case 'dd':\n      return num + (isFuture || withoutSuffix ? ' nap' : ' napja');\n    case 'M':\n      return 'egy' + (isFuture || withoutSuffix ? ' hÃ³nap' : ' hÃ³napja');\n    case 'MM':\n      return num + (isFuture || withoutSuffix ? ' hÃ³nap' : ' hÃ³napja');\n    case 'y':\n      return 'egy' + (isFuture || withoutSuffix ? ' Ã©v' : ' Ã©ve');\n    case 'yy':\n      return num + (isFuture || withoutSuffix ? ' Ã©v' : ' Ã©ve');\n  }\n  return '';\n}\nfunction week(date: Date, isFuture: boolean) {\n  return (isFuture ? '' : '[mÃºlt] ') + '[' + weekEndings[getDayOfWeek(date)] + '] LT[-kor]';\n}\n\nexport const huLocale: LocaleData = {\n  abbr: 'hu',\n  months : 'januÃ¡r_februÃ¡r_mÃ¡rcius_Ã¡prilis_mÃ¡jus_jÃºnius_jÃºlius_augusztus_szeptember_oktÃ³ber_november_december'.split('_'),\n  monthsShort : 'jan_feb_mÃ¡rc_Ã¡pr_mÃ¡j_jÃºn_jÃºl_aug_szept_okt_nov_dec'.split('_'),\n  weekdays : 'vasÃ¡rnap_hÃ©tfÅ_kedd_szerda_csÃ¼tÃ¶rtÃ¶k_pÃ©ntek_szombat'.split('_'),\n  weekdaysShort : 'vas_hÃ©t_kedd_sze_csÃ¼t_pÃ©n_szo'.split('_'),\n  weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),\n  longDateFormat : {\n    LT : 'H:mm',\n    LTS : 'H:mm:ss',\n    L : 'YYYY.MM.DD.',\n    LL : 'YYYY. MMMM D.',\n    LLL : 'YYYY. MMMM D. H:mm',\n    LLLL : 'YYYY. MMMM D., dddd H:mm'\n  },\n  meridiemParse: /de|du/i,\n  isPM (input) {\n    return input.charAt(1).toLowerCase() === 'u';\n  },\n  meridiem (hours, minutes, isLower) {\n    if (hours < 12) {\n      return isLower === true ? 'de' : 'DE';\n    } else {\n      return isLower === true ? 'du' : 'DU';\n    }\n  },\n  calendar : {\n    sameDay : '[ma] LT[-kor]',\n    nextDay : '[holnap] LT[-kor]',\n    nextWeek (date: Date) {\n      return week(date, true);\n    },\n    lastDay : '[tegnap] LT[-kor]',\n    lastWeek (date: Date) {\n      return week(date, false);\n    },\n    sameElse : 'L'\n  },\n  relativeTime : {\n    future : '%s mÃºlva',\n    past : '%s',\n    s : translate,\n    ss : translate,\n    m : translate,\n    mm : translate,\n    h : translate,\n    hh : translate,\n    d : translate,\n    dd : translate,\n    M : translate,\n    MM : translate,\n    y : translate,\n    yy : translate\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal : '%d.',\n  week : {\n    dow : 1, // Monday is the first day of the week.\n    doy : 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:no-parameter-reassignment prefer-switch\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Indonesia [id]\n//! author : Romy Kusuma : https://github.com/rkusuma\n//! reference: https://github.com/moment/moment/blob/develop/locale/id.js\n\nexport const idLocale: LocaleData = {\n  abbr: 'id',\n  months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),\n  monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),\n  weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),\n  weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),\n  weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),\n  longDateFormat : {\n    LT : 'HH.mm',\n    LTS : 'HH.mm.ss',\n    L : 'DD/MM/YYYY',\n    LL : 'D MMMM YYYY',\n    LLL : 'D MMMM YYYY [pukul] HH.mm',\n    LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'\n  },\n  meridiemParse: /pagi|siang|sore|malam/,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === 'pagi') {\n      return hour;\n    } else if (meridiem === 'siang') {\n      return hour >= 11 ? hour : hour + 12;\n    } else if (meridiem === 'sore' || meridiem === 'malam') {\n      return hour + 12;\n    }\n  },\n  meridiem(hours, minutes, isLower) {\n    if (hours < 11) {\n      return 'pagi';\n    } else if (hours < 15) {\n      return 'siang';\n    } else if (hours < 19) {\n      return 'sore';\n    } else {\n      return 'malam';\n    }\n  },\n  calendar : {\n    sameDay : '[Hari ini pukul] LT',\n    nextDay : '[Besok pukul] LT',\n    nextWeek : 'dddd [pukul] LT',\n    lastDay : '[Kemarin pukul] LT',\n    lastWeek : 'dddd [lalu pukul] LT',\n    sameElse : 'L'\n  },\n  relativeTime : {\n    future : 'dalam %s',\n    past : '%s yang lalu',\n    s : 'beberapa detik',\n    ss : '%d detik',\n    m : 'semenit',\n    mm : '%d menit',\n    h : 'sejam',\n    hh : '%d jam',\n    d : 'sehari',\n    dd : '%d hari',\n    M : 'sebulan',\n    MM : '%d bulan',\n    y : 'setahun',\n    yy : '%d tahun'\n  },\n  week : {\n    dow : 1, // Monday is the first day of the week.\n    doy : 7  // The week that contains Jan 1st is the first week of the year.\n  }\n};\n\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getDayOfWeek } from '../units/day-of-week';\n\n//! moment.js locale configuration\n//! locale : Italian [it]\n//! author : Lorenzo : https://github.com/aliem\n//! author: Mattia Larentis: https://github.com/nostalgiaz\n\nexport const itLocale: LocaleData = {\n  abbr: 'it',\n  months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n  monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n  weekdays: 'domenica_lunedÃ¬_martedÃ¬_mercoledÃ¬_giovedÃ¬_venerdÃ¬_sabato'.split('_'),\n  weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n  weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Oggi alle] LT',\n    nextDay: '[Domani alle] LT',\n    nextWeek: 'dddd [alle] LT',\n    lastDay: '[Ieri alle] LT',\n    lastWeek(date: Date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[la scorsa] dddd [alle] LT';\n        default:\n          return '[lo scorso] dddd [alle] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future(num: number): string {\n      return ((/^[0-9].+$/).test(num.toString(10)) ? 'tra' : 'in') + ' ' + num;\n    },\n    past: '%s fa',\n    s: 'alcuni secondi',\n    ss: '%d secondi',\n    m: 'un minuto',\n    mm: '%d minuti',\n    h: 'un\\'ora',\n    hh: '%d ore',\n    d: 'un giorno',\n    dd: '%d giorni',\n    M: 'un mese',\n    MM: '%d mesi',\n    y: 'un anno',\n    yy: '%d anni'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}Âº/,\n  ordinal: '%dÂº',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Japanese [ja]\n//! author : LI Long : https://github.com/baryon\n\nexport const jaLocale: LocaleData =  {\n  abbr: 'ja',\n  months : '1æ_2æ_3æ_4æ_5æ_6æ_7æ_8æ_9æ_10æ_11æ_12æ'.split('_'),\n  monthsShort : '1æ_2æ_3æ_4æ_5æ_6æ_7æ_8æ_9æ_10æ_11æ_12æ'.split('_'),\n  weekdays : 'æ¥ææ¥_æææ¥_ç«ææ¥_æ°´ææ¥_æ¨ææ¥_éææ¥_åææ¥'.split('_'),\n  weekdaysShort : 'æ¥_æ_ç«_æ°´_æ¨_é_å'.split('_'),\n  weekdaysMin : 'æ¥_æ_ç«_æ°´_æ¨_é_å'.split('_'),\n  longDateFormat : {\n    LT : 'HH:mm',\n    LTS : 'HH:mm:ss',\n    L : 'YYYY/MM/DD',\n    LL : 'YYYYå¹´MæDæ¥',\n    LLL : 'YYYYå¹´MæDæ¥ HH:mm',\n    LLLL : 'YYYYå¹´MæDæ¥ HH:mm dddd',\n    l : 'YYYY/MM/DD',\n    ll : 'YYYYå¹´MæDæ¥',\n    lll : 'YYYYå¹´MæDæ¥ HH:mm',\n    llll : 'YYYYå¹´MæDæ¥ HH:mm dddd'\n  },\n  meridiemParse: /åå|åå¾/i,\n  isPM (input) {\n    return input === 'åå¾';\n  },\n  meridiem (hour, minute, isLower) {\n    if (hour < 12) {\n      return 'åå';\n    } else {\n      return 'åå¾';\n    }\n  },\n  calendar : {\n    sameDay : '[ä»æ¥] LT',\n    nextDay : '[ææ¥] LT',\n    nextWeek : '[æ¥é±]dddd LT',\n    lastDay : '[æ¨æ¥] LT',\n    lastWeek : '[åé±]dddd LT',\n    sameElse : 'L'\n  },\n  dayOfMonthOrdinalParse : /\\d{1,2}æ¥/,\n  ordinal (num: number, period: string): string {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + 'æ¥';\n      default:\n        return num.toString(10);\n    }\n  },\n  relativeTime : {\n    future : '%så¾',\n    past : '%så',\n    s : 'æ°ç§',\n    ss : '%dç§',\n    m : '1å',\n    mm : '%då',\n    h : '1æé',\n    hh : '%dæé',\n    d : '1æ¥',\n    dd : '%dæ¥',\n    M : '1ã¶æ',\n    MM : '%dã¶æ',\n    y : '1å¹´',\n    yy : '%då¹´'\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:object-literal-shorthand\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Korean [ko]\n//! author : Kyungwook, Park : https://github.com/kyungw00k\n//! author : Jeeeyul Lee <jeeeyul@gmail.com>\n\nexport const koLocale: LocaleData = {\n  abbr: 'ko',\n  months : '1ì_2ì_3ì_4ì_5ì_6ì_7ì_8ì_9ì_10ì_11ì_12ì'.split('_'),\n  monthsShort : '1ì_2ì_3ì_4ì_5ì_6ì_7ì_8ì_9ì_10ì_11ì_12ì'.split('_'),\n  weekdays : 'ì¼ìì¼_ììì¼_íìì¼_ììì¼_ëª©ìì¼_ê¸ìì¼_í ìì¼'.split('_'),\n  weekdaysShort : 'ì¼_ì_í_ì_ëª©_ê¸_í '.split('_'),\n  weekdaysMin : 'ì¼_ì_í_ì_ëª©_ê¸_í '.split('_'),\n  longDateFormat : {\n    LT : 'A h:mm',\n    LTS : 'A h:mm:ss',\n    L : 'YYYY.MM.DD',\n    LL : 'YYYYë MMMM Dì¼',\n    LLL : 'YYYYë MMMM Dì¼ A h:mm',\n    LLLL : 'YYYYë MMMM Dì¼ dddd A h:mm',\n    l : 'YYYY.MM.DD',\n    ll : 'YYYYë MMMM Dì¼',\n    lll : 'YYYYë MMMM Dì¼ A h:mm',\n    llll : 'YYYYë MMMM Dì¼ dddd A h:mm'\n  },\n  calendar : {\n    sameDay : 'ì¤ë LT',\n    nextDay : 'ë´ì¼ LT',\n    nextWeek : 'dddd LT',\n    lastDay : 'ì´ì  LT',\n    lastWeek : 'ì§ëì£¼ dddd LT',\n    sameElse : 'L'\n  },\n  relativeTime : {\n    future : '%s í',\n    past : '%s ì ',\n    s : 'ëª ì´',\n    ss : '%dì´',\n    m : '1ë¶',\n    mm : '%dë¶',\n    h : 'í ìê°',\n    hh : '%dìê°',\n    d : 'íë£¨',\n    dd : '%dì¼',\n    M : 'í ë¬',\n    MM : '%dë¬',\n    y : 'ì¼ ë',\n    yy : '%dë'\n  },\n  dayOfMonthOrdinalParse : /\\d{1,2}(ì¼|ì|ì£¼)/,\n  ordinal : function (num: number, period: string): string {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + 'ì¼';\n      case 'M':\n        return num + 'ì';\n      case 'w':\n      case 'W':\n        return num + 'ì£¼';\n      default:\n        return num.toString(10);\n    }\n  },\n  meridiemParse : /ì¤ì |ì¤í/,\n  isPM : function (token) {\n    return token === 'ì¤í';\n  },\n  meridiem : function (hour, minute, isUpper) {\n    return hour < 12 ? 'ì¤ì ' : 'ì¤í';\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Lithuanian [lt]\n//! author : Stanislavas Guk : https://github.com/ixoster\n\nconst units = {\n  ss : 'sekundÄ_sekundÅ¾iÅ³_sekundes',\n  m : 'minutÄ_minutÄs_minutÄ',\n  mm: 'minutÄs_minuÄiÅ³_minutes',\n  h : 'valanda_valandos_valandÄ',\n  hh: 'valandos_valandÅ³_valandas',\n  d : 'diena_dienos_dienÄ',\n  dd: 'dienos_dienÅ³_dienas',\n  M : 'mÄnuo_mÄnesio_mÄnesÄ¯',\n  MM: 'mÄnesiai_mÄnesiÅ³_mÄnesius',\n  y : 'metai_metÅ³_metus',\n  yy: 'metai_metÅ³_metus'\n};\nfunction translateSeconds(num: number, withoutSuffix: boolean, key: string, isFuture: boolean) {\n  if (withoutSuffix) {\n      return 'kelios sekundÄs';\n  } else {\n      return isFuture ? 'keliÅ³ sekundÅ¾iÅ³' : 'kelias sekundes';\n  }\n}\nfunction translateSingular(num: number, withoutSuffix: boolean, key: string, isFuture: boolean) {\n  return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);\n}\nfunction special(num: number) {\n  return num % 10 === 0 || (num > 10 && num < 20);\n}\nfunction forms(key: string) {\n  return (units as any)[key].split('_');\n}\nfunction translate(num: number, withoutSuffix: boolean, key: string, isFuture: boolean) {\n  let result = num + ' ';\n  if (num === 1) {\n      return result + translateSingular(num, withoutSuffix, key[0], isFuture);\n  } else if (withoutSuffix) {\n      return result + (special(num) ? forms(key)[1] : forms(key)[0]);\n  } else {\n      if (isFuture) {\n          return result + forms(key)[1];\n      } else {\n          return result + (special(num) ? forms(key)[1] : forms(key)[2]);\n      }\n  }\n}\n\nexport const ltLocale: LocaleData = {\n  abbr: 'lt',\n  months : {\n    format: 'sausio_vasario_kovo_balandÅ¾io_geguÅ¾Äs_birÅ¾elio_liepos_rugpjÅ«Äio_rugsÄjo_spalio_lapkriÄio_gruodÅ¾io'.split('_'),\n    standalone: 'sausis_vasaris_kovas_balandis_geguÅ¾Ä_birÅ¾elis_liepa_rugpjÅ«tis_rugsÄjis_spalis_lapkritis_gruodis'.split('_'),\n    isFormat: /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|MMMM?(\\[[^\\[\\]]*\\]|\\s)+D[oD]?/\n  },\n  monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),\n  weekdays : {\n      format: 'sekmadienÄ¯_pirmadienÄ¯_antradienÄ¯_treÄiadienÄ¯_ketvirtadienÄ¯_penktadienÄ¯_Å¡eÅ¡tadienÄ¯'.split('_'),\n      standalone: 'sekmadienis_pirmadienis_antradienis_treÄiadienis_ketvirtadienis_penktadienis_Å¡eÅ¡tadienis'.split('_'),\n      isFormat: /dddd HH:mm/\n  },\n  weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Å eÅ¡'.split('_'),\n  weekdaysMin : 'S_P_A_T_K_Pn_Å '.split('_'),\n  weekdaysParseExact : true,\n  longDateFormat : {\n      LT : 'HH:mm',\n      LTS : 'HH:mm:ss',\n      L : 'YYYY-MM-DD',\n      LL : 'YYYY [m.] MMMM D [d.]',\n      LLL : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n      LLLL : 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',\n      l : 'YYYY-MM-DD',\n      ll : 'YYYY [m.] MMMM D [d.]',\n      lll : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n      llll : 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'\n  },\n  calendar : {\n      sameDay : '[Å iandien] LT',\n      nextDay : '[Rytoj] LT',\n      nextWeek : 'dddd LT',\n      lastDay : '[Vakar] LT',\n      lastWeek : '[PraÄjusÄ¯] dddd LT',\n      sameElse : 'L'\n  },\n  relativeTime : {\n      future : 'po %s',\n      past : 'prieÅ¡ %s',\n      s : translateSeconds,\n      ss : translate,\n      m : translateSingular,\n      mm : translate,\n      h : translateSingular,\n      hh : translate,\n      d : translateSingular,\n      dd : translate,\n      M : translateSingular,\n      MM : translate,\n      y : translateSingular,\n      yy : translate\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-oji/,\n  ordinal(num) {\n      return num + '-oji';\n  },\n  week : {\n      dow : 1, // Monday is the first day of the week.\n      doy : 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:object-literal-shorthand\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Mongolian [mn]\n//! author : Javkhlantugs Nyamdorj : https://github.com/javkhaanj7\n\nfunction translate(num: number, withoutSuffix: boolean, key: string, isFuture: boolean) {\n  switch (key) {\n    case 's':\n      return withoutSuffix ? 'ÑÑÐ´ÑÑÐ½ ÑÐµÐºÑÐ½Ð´' : 'ÑÑÐ´ÑÑÐ½ ÑÐµÐºÑÐ½Ð´ÑÐ½';\n    case 'ss':\n      return num + (withoutSuffix ? ' ÑÐµÐºÑÐ½Ð´' : ' ÑÐµÐºÑÐ½Ð´ÑÐ½');\n    case 'm':\n    case 'mm':\n      return num + (withoutSuffix ? ' Ð¼Ð¸Ð½ÑÑ' : ' Ð¼Ð¸Ð½ÑÑÑÐ½');\n    case 'h':\n    case 'hh':\n      return num + (withoutSuffix ? ' ÑÐ°Ð³' : ' ÑÐ°Ð³Ð¸Ð¹Ð½');\n    case 'd':\n    case 'dd':\n      return num + (withoutSuffix ? ' Ó©Ð´Ó©Ñ' : ' Ó©Ð´ÑÐ¸Ð¹Ð½');\n    case 'M':\n    case 'MM':\n      return num + (withoutSuffix ? ' ÑÐ°Ñ' : ' ÑÐ°ÑÑÐ½');\n    case 'y':\n    case 'yy':\n      return num + (withoutSuffix ? ' Ð¶Ð¸Ð»' : ' Ð¶Ð¸Ð»Ð¸Ð¹Ð½');\n    default:\n      return num.toString(10);\n  }\n}\n\nexport const mnLocale: LocaleData = {\n  abbr: 'mn',\n  months: 'ÐÑÐ³Ð´Ò¯Ð³ÑÑÑ ÑÐ°Ñ_Ð¥Ð¾ÑÑÐ´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ_ÐÑÑÐ°Ð²Ð´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ_ÐÓ©ÑÓ©Ð²Ð´Ò¯Ð³ÑÑÑ ÑÐ°Ñ_Ð¢Ð°Ð²Ð´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ_ÐÑÑÐ³Ð°Ð´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ_ÐÐ¾Ð»Ð´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ_ÐÐ°Ð¹Ð¼Ð´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ_ÐÑÐ´Ò¯Ð³ÑÑÑ ÑÐ°Ñ_ÐÑÐ°Ð²Ð´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ_ÐÑÐ²Ð°Ð½ Ð½ÑÐ³Ð´Ò¯Ð³ÑÑÑ ÑÐ°Ñ_ÐÑÐ²Ð°Ð½ ÑÐ¾ÑÑÐ´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ'.split('_'),\n  monthsShort: '1 ÑÐ°Ñ_2 ÑÐ°Ñ_3 ÑÐ°Ñ_4 ÑÐ°Ñ_5 ÑÐ°Ñ_6 ÑÐ°Ñ_7 ÑÐ°Ñ_8 ÑÐ°Ñ_9 ÑÐ°Ñ_10 ÑÐ°Ñ_11 ÑÐ°Ñ_12 ÑÐ°Ñ'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'ÐÑÐ¼_ÐÐ°Ð²Ð°Ð°_ÐÑÐ³Ð¼Ð°Ñ_ÐÑÐ°Ð³Ð²Ð°_ÐÒ¯ÑÑÐ²_ÐÐ°Ð°ÑÐ°Ð½_ÐÑÐ¼Ð±Ð°'.split('_'),\n  weekdaysShort: 'ÐÑÐ¼_ÐÐ°Ð²_ÐÑÐ³_ÐÑÐ°_ÐÒ¯Ñ_ÐÐ°Ð°_ÐÑÐ¼'.split('_'),\n  weekdaysMin: 'ÐÑ_ÐÐ°_ÐÑ_ÐÑ_ÐÒ¯_ÐÐ°_ÐÑ'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY-MM-DD',\n    LL: 'YYYY Ð¾Ð½Ñ MMMMÑÐ½ D',\n    LLL: 'YYYY Ð¾Ð½Ñ MMMMÑÐ½ D HH:mm',\n    LLLL: 'dddd, YYYY Ð¾Ð½Ñ MMMMÑÐ½ D HH:mm'\n  },\n  meridiemParse: /Ò®Ó¨|Ò®Ð¥/i,\n  isPM: function (input) {\n    return input === 'Ò®Ð¥';\n  },\n  meridiem: function (hour, minute, isLower) {\n    if (hour < 12) {\n      return 'Ò®Ó¨';\n    } else {\n      return 'Ò®Ð¥';\n    }\n  },\n  calendar: {\n    sameDay: '[Ó¨Ð½Ó©Ó©Ð´Ó©Ñ] LT',\n    nextDay: '[ÐÐ°ÑÐ³Ð°Ð°Ñ] LT',\n    nextWeek: '[ÐÑÑÑ] dddd LT',\n    lastDay: '[Ó¨ÑÐ¸Ð³Ð´Ó©Ñ] LT',\n    lastWeek: '[Ó¨Ð½Ð³Ó©ÑÑÓ©Ð½] dddd LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s Ð´Ð°ÑÐ°Ð°',\n    past: '%s Ó©Ð¼Ð½Ó©',\n    s: translate,\n    ss: translate,\n    m: translate,\n    mm: translate,\n    h: translate,\n    hh: translate,\n    d: translate,\n    dd: translate,\n    M: translate,\n    MM: translate,\n    y: translate,\n    yy: translate\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2} Ó©Ð´Ó©Ñ/,\n  ordinal: function (num: number, period: string): string {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + ' Ó©Ð´Ó©Ñ';\n      default:\n        return num.toString(10);\n    }\n  }\n};\n","// tslint:disable:comment-format\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Norwegian BokmÃ¥l [nb]\n//! authors : Espen Hovlandsdal : https://github.com/rexxars\n//!           Sigurd Gartmann : https://github.com/sigurdga\n\nexport const nbLocale: LocaleData = {\n  abbr: 'nb',\n  months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n  monthsShort: 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'sÃ¸ndag_mandag_tirsdag_onsdag_torsdag_fredag_lÃ¸rdag'.split('_'),\n  weekdaysShort: 'sÃ¸._ma._ti._on._to._fr._lÃ¸.'.split('_'),\n  weekdaysMin: 'sÃ¸_ma_ti_on_to_fr_lÃ¸'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY [kl.] HH:mm',\n    LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm'\n  },\n  calendar: {\n    sameDay: '[i dag kl.] LT',\n    nextDay: '[i morgen kl.] LT',\n    nextWeek: 'dddd [kl.] LT',\n    lastDay: '[i gÃ¥r kl.] LT',\n    lastWeek: '[forrige] dddd [kl.] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'om %s',\n    past: '%s siden',\n    s: 'noen sekunder',\n    ss: '%d sekunder',\n    m: 'ett minutt',\n    mm: '%d minutter',\n    h: 'en time',\n    hh: '%d timer',\n    d: 'en dag',\n    dd: '%d dager',\n    M: 'en mÃ¥ned',\n    MM: '%d mÃ¥neder',\n    y: 'ett Ã¥r',\n    yy: '%d Ã¥r'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getMonth } from '../utils/date-getters';\n\n//! moment.js locale configuration\n//! locale : Dutch (Belgium) [nl-be]\n//! author : Joris RÃ¶ling : https://github.com/jorisroling\n//! author : Jacob Middag : https://github.com/middagj\n\nlet monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');\nlet monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n\nlet monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\nlet monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n\nexport const nlBeLocale: LocaleData = {\n  abbr: 'nl-be',\n  months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\n    if (!date) {\n      return monthsShortWithDots;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShortWithoutDots[getMonth(date, isUTC)];\n    } else {\n      return monthsShortWithDots[getMonth(date, isUTC)];\n    }\n  },\n\n  monthsRegex,\n  monthsShortRegex: monthsRegex,\n  monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n  monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n\n  monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n\n  weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n  weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\n  weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[vandaag om] LT',\n    nextDay: '[morgen om] LT',\n    nextWeek: 'dddd [om] LT',\n    lastDay: '[gisteren om] LT',\n    lastWeek: '[afgelopen] dddd [om] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'over %s',\n    past: '%s geleden',\n    s: 'een paar seconden',\n    ss: '%d seconden',\n    m: 'Ã©Ã©n minuut',\n    mm: '%d minuten',\n    h: 'Ã©Ã©n uur',\n    hh: '%d uur',\n    d: 'Ã©Ã©n dag',\n    dd: '%d dagen',\n    M: 'Ã©Ã©n maand',\n    MM: '%d maanden',\n    y: 'Ã©Ã©n jaar',\n    yy: '%d jaar'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n  ordinal(_num: number): string {\n    const num = Number(_num);\n    return num + ((num === 1 || num === 8 || num >= 20) ? 'ste' : 'de');\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getMonth } from '../utils/date-getters';\n\n//! moment.js locale configuration\n//! locale : Dutch [nl]\n//! author : Joris RÃ¶ling : https://github.com/jorisroling\n//! author : Jacob Middag : https://github.com/middagj\n\nlet monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n  monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n\nlet monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\nlet monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n\nexport const nlLocale: LocaleData = {\n  abbr: 'nl',\n  months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n  monthsShort (date: Date, format: string, isUTC?: boolean): string | string[] {\n    if (!date) {\n      return monthsShortWithDots;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShortWithoutDots[getMonth(date, isUTC)];\n    } else {\n      return monthsShortWithDots[getMonth(date, isUTC)];\n    }\n  },\n\n  monthsRegex,\n  monthsShortRegex: monthsRegex,\n  monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n  monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n\n  monthsParse,\n  longMonthsParse : monthsParse,\n  shortMonthsParse : monthsParse,\n\n  weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n  weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),\n  weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),\n  weekdaysParseExact : true,\n  longDateFormat : {\n    LT : 'HH:mm',\n    LTS : 'HH:mm:ss',\n    L : 'DD-MM-YYYY',\n    LL : 'D MMMM YYYY',\n    LLL : 'D MMMM YYYY HH:mm',\n    LLLL : 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar : {\n    sameDay: '[vandaag om] LT',\n    nextDay: '[morgen om] LT',\n    nextWeek: 'dddd [om] LT',\n    lastDay: '[gisteren om] LT',\n    lastWeek: '[afgelopen] dddd [om] LT',\n    sameElse: 'L'\n  },\n  relativeTime : {\n    future : 'over %s',\n    past : '%s geleden',\n    s : 'een paar seconden',\n    ss : '%d seconden',\n    m : 'Ã©Ã©n minuut',\n    mm : '%d minuten',\n    h : 'Ã©Ã©n uur',\n    hh : '%d uur',\n    d : 'Ã©Ã©n dag',\n    dd : '%d dagen',\n    M : 'Ã©Ã©n maand',\n    MM : '%d maanden',\n    y : 'Ã©Ã©n jaar',\n    yy : '%d jaar'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n  ordinal (_num: number): string {\n    const num = Number(_num);\n    return num + ((num === 1 || num === 8 || num >= 20) ? 'ste' : 'de');\n  },\n  week : {\n    dow : 1, // Monday is the first day of the week.\n    doy : 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getMonth } from '../utils/date-getters';\nimport { getDayOfWeek } from '../units/day-of-week';\n\n//! moment.js locale configuration\n//! locale : Polish [pl]\n//! author : Rafal Hirsz : https://github.com/evoL\n\nlet monthsNominative = 'styczeÅ_luty_marzec_kwiecieÅ_maj_czerwiec_lipiec_sierpieÅ_wrzesieÅ_paÅºdziernik_listopad_grudzieÅ'.split('_');\nlet monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_wrzeÅnia_paÅºdziernika_listopada_grudnia'.split('_');\n\nfunction plural(num: number): boolean {\n  return (num % 10 < 5) && (num % 10 > 1) && ((~~(num / 10) % 10) !== 1);\n}\n\nfunction translate(num: number, withoutSuffix: boolean, key: string): string {\n  let result = num + ' ';\n  switch (key) {\n    case 'ss':\n      return result + (plural(num) ? 'sekundy' : 'sekund');\n    case 'm':\n      return withoutSuffix ? 'minuta' : 'minutÄ';\n    case 'mm':\n      return result + (plural(num) ? 'minuty' : 'minut');\n    case 'h':\n      return withoutSuffix ? 'godzina' : 'godzinÄ';\n    case 'hh':\n      return result + (plural(num) ? 'godziny' : 'godzin');\n    case 'MM':\n      return result + (plural(num) ? 'miesiÄce' : 'miesiÄcy');\n    case 'yy':\n      return result + (plural(num) ? 'lata' : 'lat');\n  }\n}\n\nexport const plLocale: LocaleData = {\n  abbr: 'pl',\n  months(date: Date, format: string, isUTC?: boolean): string | string[] {\n    if (!date) {\n      return monthsNominative;\n    } else if (format === '') {\n      // Hack: if format empty we know this is used to generate\n      // RegExp by moment. Give then back both valid forms of months\n      // in RegExp ready format.\n      return '(' + monthsSubjective[getMonth(date, isUTC)] + '|' + monthsNominative[getMonth(date, isUTC)] + ')';\n    } else if (/D MMMM/.test(format)) {\n      return monthsSubjective[getMonth(date, isUTC)];\n    } else {\n      return monthsNominative[getMonth(date, isUTC)];\n    }\n  },\n  monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paÅº_lis_gru'.split('_'),\n  weekdays: 'niedziela_poniedziaÅek_wtorek_Åroda_czwartek_piÄtek_sobota'.split('_'),\n  weekdaysShort: 'ndz_pon_wt_År_czw_pt_sob'.split('_'),\n  weekdaysMin: 'Nd_Pn_Wt_År_Cz_Pt_So'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[DziÅ o] LT',\n    nextDay: '[Jutro o] LT',\n    nextWeek(date: Date): string {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[W niedzielÄ o] LT';\n\n        case 2:\n          return '[We wtorek o] LT';\n\n        case 3:\n          return '[W ÅrodÄ o] LT';\n\n        case 5:\n          return '[W piÄtek o] LT';\n\n        case 6:\n          return '[W sobotÄ o] LT';\n\n        default:\n          return '[W] dddd [o] LT';\n      }\n    },\n    lastDay: '[Wczoraj o] LT',\n    lastWeek(date: Date): string {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[W zeszÅÄ niedzielÄ o] LT';\n        case 3:\n          return '[W zeszÅÄ ÅrodÄ o] LT';\n        case 4:\n          return '[W zeszÅÄ czwartek o] LT';\n        case 5:\n          return '[W zeszÅÄ piÄtek o] LT';\n        case 6:\n          return '[W zeszÅÄ sobotÄ o] LT';\n        default:\n          return '[W zeszÅy] dddd [o] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'za %s',\n    past: '%s temu',\n    s: 'kilka sekund',\n    ss: translate,\n    m: translate,\n    mm: translate,\n    h: translate,\n    hh: translate,\n    d: '1 dzieÅ',\n    dd: '%d dni',\n    M: 'miesiÄc',\n    MM: translate,\n    y: 'rok',\n    yy: translate\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getDayOfWeek } from '../units/day-of-week';\n\n//! moment.js locale configuration\n//! locale : Portuguese (Brazil) [pt-br]\n//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira\n\nexport const ptBrLocale: LocaleData = {\n  abbr: 'pt-br',\n  months: 'Janeiro_Fevereiro_MarÃ§o_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),\n  monthsShort: 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),\n  weekdays: 'Domingo_Segunda-feira_TerÃ§a-feira_Quarta-feira_Quinta-feira_Sexta-feira_SÃ¡bado'.split('_'),\n  weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_SÃ¡b'.split('_'),\n  weekdaysMin: 'Do_2Âª_3Âª_4Âª_5Âª_6Âª_SÃ¡'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY [Ã s] HH:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY [Ã s] HH:mm'\n  },\n  calendar: {\n    sameDay: '[Hoje Ã s] LT',\n    nextDay: '[AmanhÃ£ Ã s] LT',\n    nextWeek: 'dddd [Ã s] LT',\n    lastDay: '[Ontem Ã s] LT',\n    lastWeek(date: Date) {\n      return (getDayOfWeek(date) === 0 || getDayOfWeek(date) === 6) ?\n        '[Ãltimo] dddd [Ã s] LT' : // Saturday + Sunday\n        '[Ãltima] dddd [Ã s] LT'; // Monday - Friday\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'em %s',\n    past: '%s atrÃ¡s',\n    s: 'poucos segundos',\n    ss: '%d segundos',\n    m: 'um minuto',\n    mm: '%d minutos',\n    h: 'uma hora',\n    hh: '%d horas',\n    d: 'um dia',\n    dd: '%d dias',\n    M: 'um mÃªs',\n    MM: '%d meses',\n    y: 'um ano',\n    yy: '%d anos'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}Âº/,\n  ordinal: '%dÂº'\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\nimport { LocaleData } from '../locale/locale.class';\n\n// ! moment.js locale configuration\n// ! locale : Romanian [ro]\n//! author : Vlad Gurdiga : https://github.com/gurdiga\n//! author : Valentin Agachi : https://github.com/avaly\n// ! author : Earle white: https://github.com/5earle\n\nfunction relativeTimeWithPlural(num: number, withoutSuffix: boolean, key: string): string {\n  let format: {[key:string]: string} = {\n    ss: 'secunde',\n    mm: 'minute',\n    hh: 'ore',\n    dd: 'zile',\n    MM: 'luni',\n    yy: 'ani'\n  };\n\n  let separator = ' ';\n  if (num % 100 >= 20 || (num >= 100 && num % 100 === 0)) {\n    separator = ' de ';\n  }\n  return num + separator + format[key];\n}\n\n\nexport const roLocale: LocaleData = {\n  abbr: 'ro',\n  months: 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),\n  monthsShort: 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'duminicÄ_luni_marÈi_miercuri_joi_vineri_sÃ¢mbÄtÄ'.split('_'),\n  weekdaysShort: 'Dum_Lun_Mar_Mie_Joi_Vin_SÃ¢m'.split('_'),\n  weekdaysMin: 'Du_Lu_Ma_Mi_Jo_Vi_SÃ¢'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY H:mm',\n    LLLL: 'dddd, D MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay: '[azi la] LT',\n    nextDay: '[mÃ¢ine la] LT',\n    nextWeek: 'dddd [la] LT',\n    lastDay: '[ieri la] LT',\n    lastWeek: '[fosta] dddd [la] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'peste %s',\n    past: '%s Ã®n urmÄ',\n    s: 'cÃ¢teva secunde',\n    ss: relativeTimeWithPlural,\n    m: 'un minut',\n    mm: relativeTimeWithPlural,\n    h: 'o orÄ',\n    hh: relativeTimeWithPlural,\n    d: 'o zi',\n    dd: relativeTimeWithPlural,\n    M: 'o lunÄ',\n    MM: relativeTimeWithPlural,\n    y: 'un an',\n    yy: relativeTimeWithPlural\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7  // The week that contains Jan 1st is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getWeek } from '../units/week';\nimport { getDayOfWeek } from '../units/day-of-week';\n\n//! moment.js locale configuration\n//! locale : Russian [ru]\n//! author : Viktorminator : https://github.com/Viktorminator\n//! Author : Menelion ElensÃºle : https://github.com/Oire\n//! author : ÐÐ¾ÑÐµÐ½Ð±ÐµÑÐ³ ÐÐ°ÑÐº : https://github.com/socketpair\n\nfunction plural(word: string, num: number): string {\n  let forms = word.split('_');\n  return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n}\n\nfunction relativeTimeWithPlural(num: number, withoutSuffix: boolean, key: string): string {\n  let format: {[key: string]: string} = {\n    ss: withoutSuffix ? 'ÑÐµÐºÑÐ½Ð´Ð°_ÑÐµÐºÑÐ½Ð´Ñ_ÑÐµÐºÑÐ½Ð´' : 'ÑÐµÐºÑÐ½Ð´Ñ_ÑÐµÐºÑÐ½Ð´Ñ_ÑÐµÐºÑÐ½Ð´',\n    mm: withoutSuffix ? 'Ð¼Ð¸Ð½ÑÑÐ°_Ð¼Ð¸Ð½ÑÑÑ_Ð¼Ð¸Ð½ÑÑ' : 'Ð¼Ð¸Ð½ÑÑÑ_Ð¼Ð¸Ð½ÑÑÑ_Ð¼Ð¸Ð½ÑÑ',\n    hh: 'ÑÐ°Ñ_ÑÐ°ÑÐ°_ÑÐ°ÑÐ¾Ð²',\n    dd: 'Ð´ÐµÐ½Ñ_Ð´Ð½Ñ_Ð´Ð½ÐµÐ¹',\n    MM: 'Ð¼ÐµÑÑÑ_Ð¼ÐµÑÑÑÐ°_Ð¼ÐµÑÑÑÐµÐ²',\n    yy: 'Ð³Ð¾Ð´_Ð³Ð¾Ð´Ð°_Ð»ÐµÑ'\n  };\n  if (key === 'm') {\n    return withoutSuffix ? 'Ð¼Ð¸Ð½ÑÑÐ°' : 'Ð¼Ð¸Ð½ÑÑÑ';\n  }\n  return num + ' ' + plural(format[key], +num);\n}\n\nlet monthsParse = [/^ÑÐ½Ð²/i, /^ÑÐµÐ²/i, /^Ð¼Ð°Ñ/i, /^Ð°Ð¿Ñ/i, /^Ð¼Ð°[Ð¹Ñ]/i, /^Ð¸ÑÐ½/i, /^Ð¸ÑÐ»/i, /^Ð°Ð²Ð³/i, /^ÑÐµÐ½/i, /^Ð¾ÐºÑ/i, /^Ð½Ð¾Ñ/i, /^Ð´ÐµÐº/i];\n\n// http://new.gramota.ru/spravka/rules/139-prop : Â§ 103\n// Ð¡Ð¾ÐºÑÐ°ÑÐµÐ½Ð¸Ñ Ð¼ÐµÑÑÑÐµÐ²: http://new.gramota.ru/spravka/buro/search-answer?s=242637\n// CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753\nexport const ruLocale: LocaleData = {\n  abbr: 'ru',\n  months: {\n    format: 'ÑÐ½Ð²Ð°ÑÑ_ÑÐµÐ²ÑÐ°Ð»Ñ_Ð¼Ð°ÑÑÐ°_Ð°Ð¿ÑÐµÐ»Ñ_Ð¼Ð°Ñ_Ð¸ÑÐ½Ñ_Ð¸ÑÐ»Ñ_Ð°Ð²Ð³ÑÑÑÐ°_ÑÐµÐ½ÑÑÐ±ÑÑ_Ð¾ÐºÑÑÐ±ÑÑ_Ð½Ð¾ÑÐ±ÑÑ_Ð´ÐµÐºÐ°Ð±ÑÑ'.split('_'),\n    standalone: 'ÑÐ½Ð²Ð°ÑÑ_ÑÐµÐ²ÑÐ°Ð»Ñ_Ð¼Ð°ÑÑ_Ð°Ð¿ÑÐµÐ»Ñ_Ð¼Ð°Ð¹_Ð¸ÑÐ½Ñ_Ð¸ÑÐ»Ñ_Ð°Ð²Ð³ÑÑÑ_ÑÐµÐ½ÑÑÐ±ÑÑ_Ð¾ÐºÑÑÐ±ÑÑ_Ð½Ð¾ÑÐ±ÑÑ_Ð´ÐµÐºÐ°Ð±ÑÑ'.split('_')\n  },\n  monthsShort: {\n    // Ð¿Ð¾ CLDR Ð¸Ð¼ÐµÐ½Ð½Ð¾ \"Ð¸ÑÐ».\" Ð¸ \"Ð¸ÑÐ½.\", Ð½Ð¾ ÐºÐ°ÐºÐ¾Ð¹ ÑÐ¼ÑÑÐ» Ð¼ÐµÐ½ÑÑÑ Ð±ÑÐºÐ²Ñ Ð½Ð° ÑÐ¾ÑÐºÑ ?\n    format: 'ÑÐ½Ð²._ÑÐµÐ²Ñ._Ð¼Ð°Ñ._Ð°Ð¿Ñ._Ð¼Ð°Ñ_Ð¸ÑÐ½Ñ_Ð¸ÑÐ»Ñ_Ð°Ð²Ð³._ÑÐµÐ½Ñ._Ð¾ÐºÑ._Ð½Ð¾ÑÐ±._Ð´ÐµÐº.'.split('_'),\n    standalone: 'ÑÐ½Ð²._ÑÐµÐ²Ñ._Ð¼Ð°ÑÑ_Ð°Ð¿Ñ._Ð¼Ð°Ð¹_Ð¸ÑÐ½Ñ_Ð¸ÑÐ»Ñ_Ð°Ð²Ð³._ÑÐµÐ½Ñ._Ð¾ÐºÑ._Ð½Ð¾ÑÐ±._Ð´ÐµÐº.'.split('_')\n  },\n  weekdays: {\n    standalone: 'Ð²Ð¾ÑÐºÑÐµÑÐµÐ½ÑÐµ_Ð¿Ð¾Ð½ÐµÐ´ÐµÐ»ÑÐ½Ð¸Ðº_Ð²ÑÐ¾ÑÐ½Ð¸Ðº_ÑÑÐµÐ´Ð°_ÑÐµÑÐ²ÐµÑÐ³_Ð¿ÑÑÐ½Ð¸ÑÐ°_ÑÑÐ±Ð±Ð¾ÑÐ°'.split('_'),\n    format: 'Ð²Ð¾ÑÐºÑÐµÑÐµÐ½ÑÐµ_Ð¿Ð¾Ð½ÐµÐ´ÐµÐ»ÑÐ½Ð¸Ðº_Ð²ÑÐ¾ÑÐ½Ð¸Ðº_ÑÑÐµÐ´Ñ_ÑÐµÑÐ²ÐµÑÐ³_Ð¿ÑÑÐ½Ð¸ÑÑ_ÑÑÐ±Ð±Ð¾ÑÑ'.split('_'),\n    isFormat: /\\[ ?[ÐÐ²] ?(?:Ð¿ÑÐ¾ÑÐ»ÑÑ|ÑÐ»ÐµÐ´ÑÑÑÑÑ|ÑÑÑ)? ?\\] ?dddd/\n  },\n  weekdaysShort: 'Ð²Ñ_Ð¿Ð½_Ð²Ñ_ÑÑ_ÑÑ_Ð¿Ñ_ÑÐ±'.split('_'),\n  weekdaysMin: 'Ð²Ñ_Ð¿Ð½_Ð²Ñ_ÑÑ_ÑÑ_Ð¿Ñ_ÑÐ±'.split('_'),\n  monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n\n  // Ð¿Ð¾Ð»Ð½ÑÐµ Ð½Ð°Ð·Ð²Ð°Ð½Ð¸Ñ Ñ Ð¿Ð°Ð´ÐµÐ¶Ð°Ð¼Ð¸, Ð¿Ð¾ ÑÑÐ¸ Ð±ÑÐºÐ²Ñ, Ð´Ð»Ñ Ð½ÐµÐºÐ¾ÑÐ¾ÑÑÑ, Ð¿Ð¾ 4 Ð±ÑÐºÐ²Ñ, ÑÐ¾ÐºÑÐ°ÑÐµÐ½Ð¸Ñ Ñ ÑÐ¾ÑÐºÐ¾Ð¹ Ð¸ Ð±ÐµÐ· ÑÐ¾ÑÐºÐ¸\n  monthsRegex: /^(ÑÐ½Ð²Ð°Ñ[ÑÑ]|ÑÐ½Ð²\\.?|ÑÐµÐ²ÑÐ°Ð»[ÑÑ]|ÑÐµÐ²Ñ?\\.?|Ð¼Ð°ÑÑÐ°?|Ð¼Ð°Ñ\\.?|Ð°Ð¿ÑÐµÐ»[ÑÑ]|Ð°Ð¿Ñ\\.?|Ð¼Ð°[Ð¹Ñ]|Ð¸ÑÐ½[ÑÑ]|Ð¸ÑÐ½\\.?|Ð¸ÑÐ»[ÑÑ]|Ð¸ÑÐ»\\.?|Ð°Ð²Ð³ÑÑÑÐ°?|Ð°Ð²Ð³\\.?|ÑÐµÐ½ÑÑÐ±Ñ[ÑÑ]|ÑÐµÐ½Ñ?\\.?|Ð¾ÐºÑÑÐ±Ñ[ÑÑ]|Ð¾ÐºÑ\\.?|Ð½Ð¾ÑÐ±Ñ[ÑÑ]|Ð½Ð¾ÑÐ±?\\.?|Ð´ÐµÐºÐ°Ð±Ñ[ÑÑ]|Ð´ÐµÐº\\.?)/i,\n\n  // ÐºÐ¾Ð¿Ð¸Ñ Ð¿ÑÐµÐ´ÑÐ´ÑÑÐµÐ³Ð¾\n  monthsShortRegex: /^(ÑÐ½Ð²Ð°Ñ[ÑÑ]|ÑÐ½Ð²\\.?|ÑÐµÐ²ÑÐ°Ð»[ÑÑ]|ÑÐµÐ²Ñ?\\.?|Ð¼Ð°ÑÑÐ°?|Ð¼Ð°Ñ\\.?|Ð°Ð¿ÑÐµÐ»[ÑÑ]|Ð°Ð¿Ñ\\.?|Ð¼Ð°[Ð¹Ñ]|Ð¸ÑÐ½[ÑÑ]|Ð¸ÑÐ½\\.?|Ð¸ÑÐ»[ÑÑ]|Ð¸ÑÐ»\\.?|Ð°Ð²Ð³ÑÑÑÐ°?|Ð°Ð²Ð³\\.?|ÑÐµÐ½ÑÑÐ±Ñ[ÑÑ]|ÑÐµÐ½Ñ?\\.?|Ð¾ÐºÑÑÐ±Ñ[ÑÑ]|Ð¾ÐºÑ\\.?|Ð½Ð¾ÑÐ±Ñ[ÑÑ]|Ð½Ð¾ÑÐ±?\\.?|Ð´ÐµÐºÐ°Ð±Ñ[ÑÑ]|Ð´ÐµÐº\\.?)/i,\n\n  // Ð¿Ð¾Ð»Ð½ÑÐµ Ð½Ð°Ð·Ð²Ð°Ð½Ð¸Ñ Ñ Ð¿Ð°Ð´ÐµÐ¶Ð°Ð¼Ð¸\n  monthsStrictRegex: /^(ÑÐ½Ð²Ð°Ñ[ÑÑ]|ÑÐµÐ²ÑÐ°Ð»[ÑÑ]|Ð¼Ð°ÑÑÐ°?|Ð°Ð¿ÑÐµÐ»[ÑÑ]|Ð¼Ð°[ÑÐ¹]|Ð¸ÑÐ½[ÑÑ]|Ð¸ÑÐ»[ÑÑ]|Ð°Ð²Ð³ÑÑÑÐ°?|ÑÐµÐ½ÑÑÐ±Ñ[ÑÑ]|Ð¾ÐºÑÑÐ±Ñ[ÑÑ]|Ð½Ð¾ÑÐ±Ñ[ÑÑ]|Ð´ÐµÐºÐ°Ð±Ñ[ÑÑ])/i,\n\n  // ÐÑÑÐ°Ð¶ÐµÐ½Ð¸Ðµ, ÐºÐ¾ÑÐ¾ÑÐ¾Ðµ ÑÐ¾Ð¾ÑÐ²ÐµÑÑÐ²ÑÐµÑ ÑÐ¾Ð»ÑÐºÐ¾ ÑÐ¾ÐºÑÐ°ÑÑÐ½Ð½ÑÐ¼ ÑÐ¾ÑÐ¼Ð°Ð¼\n  monthsShortStrictRegex: /^(ÑÐ½Ð²\\.|ÑÐµÐ²Ñ?\\.|Ð¼Ð°Ñ[Ñ.]|Ð°Ð¿Ñ\\.|Ð¼Ð°[ÑÐ¹]|Ð¸ÑÐ½[ÑÑ.]|Ð¸ÑÐ»[ÑÑ.]|Ð°Ð²Ð³\\.|ÑÐµÐ½Ñ?\\.|Ð¾ÐºÑ\\.|Ð½Ð¾ÑÐ±?\\.|Ð´ÐµÐº\\.)/i,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY Ð³.',\n    LLL: 'D MMMM YYYY Ð³., H:mm',\n    LLLL: 'dddd, D MMMM YYYY Ð³., H:mm'\n  },\n  calendar: {\n    sameDay: '[Ð¡ÐµÐ³Ð¾Ð´Ð½Ñ Ð²] LT',\n    nextDay: '[ÐÐ°Ð²ÑÑÐ° Ð²] LT',\n    lastDay: '[ÐÑÐµÑÐ° Ð²] LT',\n    nextWeek(date: Date, now: Date) {\n      if (getWeek(now) !== getWeek(date)) {\n        switch (getDayOfWeek(date)) {\n          case 0:\n            return '[Ð ÑÐ»ÐµÐ´ÑÑÑÐµÐµ] dddd [Ð²] LT';\n          case 1:\n          case 2:\n          case 4:\n            return '[Ð ÑÐ»ÐµÐ´ÑÑÑÐ¸Ð¹] dddd [Ð²] LT';\n          case 3:\n          case 5:\n          case 6:\n            return '[Ð ÑÐ»ÐµÐ´ÑÑÑÑÑ] dddd [Ð²] LT';\n        }\n      } else {\n        if (getDayOfWeek(date) === 2) {\n          return '[ÐÐ¾] dddd [Ð²] LT';\n        } else {\n          return '[Ð] dddd [Ð²] LT';\n        }\n      }\n    },\n    lastWeek(date: Date, now: Date) {\n      if (getWeek(now) !== getWeek(date)) {\n        switch (getDayOfWeek(date)) {\n          case 0:\n            return '[Ð Ð¿ÑÐ¾ÑÐ»Ð¾Ðµ] dddd [Ð²] LT';\n          case 1:\n          case 2:\n          case 4:\n            return '[Ð Ð¿ÑÐ¾ÑÐ»ÑÐ¹] dddd [Ð²] LT';\n          case 3:\n          case 5:\n          case 6:\n            return '[Ð Ð¿ÑÐ¾ÑÐ»ÑÑ] dddd [Ð²] LT';\n        }\n      } else {\n        if (getDayOfWeek(date) === 2) {\n          return '[ÐÐ¾] dddd [Ð²] LT';\n        } else {\n          return '[Ð] dddd [Ð²] LT';\n        }\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'ÑÐµÑÐµÐ· %s',\n    past: '%s Ð½Ð°Ð·Ð°Ð´',\n    s: 'Ð½ÐµÑÐºÐ¾Ð»ÑÐºÐ¾ ÑÐµÐºÑÐ½Ð´',\n    ss: relativeTimeWithPlural,\n    m: relativeTimeWithPlural,\n    mm: relativeTimeWithPlural,\n    h: 'ÑÐ°Ñ',\n    hh: relativeTimeWithPlural,\n    d: 'Ð´ÐµÐ½Ñ',\n    dd: relativeTimeWithPlural,\n    M: 'Ð¼ÐµÑÑÑ',\n    MM: relativeTimeWithPlural,\n    y: 'Ð³Ð¾Ð´',\n    yy: relativeTimeWithPlural\n  },\n  meridiemParse: /Ð½Ð¾ÑÐ¸|ÑÑÑÐ°|Ð´Ð½Ñ|Ð²ÐµÑÐµÑÐ°/i,\n  isPM(input) {\n    return /^(Ð´Ð½Ñ|Ð²ÐµÑÐµÑÐ°)$/.test(input);\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'Ð½Ð¾ÑÐ¸';\n    } else if (hour < 12) {\n      return 'ÑÑÑÐ°';\n    } else if (hour < 17) {\n      return 'Ð´Ð½Ñ';\n    } else {\n      return 'Ð²ÐµÑÐµÑÐ°';\n    }\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(Ð¹|Ð³Ð¾|Ñ)/,\n  ordinal(_num: number, period: string): string {\n    const num = Number(_num);\n    switch (period) {\n      case 'M':\n      case 'd':\n      case 'DDD':\n        return num + '-Ð¹';\n      case 'D':\n        return num + '-Ð³Ð¾';\n      case 'w':\n      case 'W':\n        return num + '-Ñ';\n      default:\n        return num.toString(10);\n    }\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getDayOfWeek } from '../units/day-of-week';\n\n//! moment.js locale configuration\n//! locale : Slovak [sk]\n//! author : Jozef PaÅ¾in : https://github.com/atiris\n\nconst months = 'januÃ¡r_februÃ¡r_marec_aprÃ­l_mÃ¡j_jÃºn_jÃºl_august_september_oktÃ³ber_november_december'.split('_');\nconst monthsShort = 'jan_feb_mar_apr_mÃ¡j_jÃºn_jÃºl_aug_sep_okt_nov_dec'.split('_');\n\nfunction plural(num: number): boolean {\n  return (num > 1) && (num < 5) && (~~(num / 10) !== 1);\n}\n\nfunction translate(num: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\n  const result = num + ' ';\n\n  switch (key) {\n    case 's':// a few seconds / in a few seconds / a few seconds ago\n      return (withoutSuffix || isFuture) ? 'pÃ¡r sekÃºnd' : 'pÃ¡r sekundami';\n    case 'ss':// 9 seconds / in 9 seconds / 9 seconds ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'sekundy' : 'sekÃºnd');\n      }\n      else {\n        return result + 'sekundami';\n      }\n    // break;\n    case 'm':// a minute / in a minute / a minute ago\n      return withoutSuffix ? 'minÃºta' : (isFuture ? 'minÃºtu' : 'minÃºtou');\n    case 'mm':// 9 minutes / in 9 minutes / 9 minutes ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'minÃºty' : 'minÃºt');\n      }\n      else {\n        return result + 'minÃºtami';\n      }\n    // break;\n    case 'h':// an hour / in an hour / an hour ago\n      return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n    case 'hh':// 9 hours / in 9 hours / 9 hours ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'hodiny' : 'hodÃ­n');\n      }\n      else {\n        return result + 'hodinami';\n      }\n    // break;\n    case 'd':// a day / in a day / a day ago\n      return (withoutSuffix || isFuture) ? 'deÅ' : 'dÅom';\n    case 'dd':// 9 days / in 9 days / 9 days ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'dni' : 'dnÃ­');\n      }\n      else {\n        return result + 'dÅami';\n      }\n    // break;\n    case 'M':// a month / in a month / a month ago\n      return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';\n    case 'MM':// 9 months / in 9 months / 9 months ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'mesiace' : 'mesiacov');\n      }\n      else {\n        return result + 'mesiacmi';\n      }\n    // break;\n    case 'y':// a year / in a year / a year ago\n      return (withoutSuffix || isFuture) ? 'rok' : 'rokom';\n    case 'yy':// 9 years / in 9 years / 9 years ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'roky' : 'rokov');\n      }\n      else {\n        return result + 'rokmi';\n      }\n    // break;\n  }\n}\n\nexport const skLocale: LocaleData = {\n  abbr: 'sk',\n  months,\n  monthsShort,\n  weekdays: 'nedeÄ¾a_pondelok_utorok_streda_Å¡tvrtok_piatok_sobota'.split('_'),\n  weekdaysShort: 'ne_po_ut_st_Å¡t_pi_so'.split('_'),\n  weekdaysMin: 'ne_po_ut_st_Å¡t_pi_so'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd D. MMMM YYYY H:mm',\n    l: 'D. M. YYYY'\n  },\n  calendar: {\n    sameDay: '[dnes o] LT',\n    nextDay: '[zajtra o] LT',\n    nextWeek(date: Date): string {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[v nedeÄ¾u o] LT';\n        case 1:\n        case 2:\n          return '[v] dddd [o] LT';\n        case 3:\n          return '[v stredu o] LT';\n        case 4:\n          return '[vo Å¡tvrtok o] LT';\n        case 5:\n          return '[v piatok o] LT';\n        case 6:\n          return '[v sobotu o] LT';\n      }\n    },\n    lastDay: '[vÄera o] LT',\n    lastWeek(date: Date): string {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[minulÃº nedeÄ¾u o] LT';\n        case 1:\n        case 2:\n          return '[minulÃ½] dddd [o] LT';\n        case 3:\n          return '[minulÃº stredu o] LT';\n        case 4:\n        case 5:\n          return '[minulÃ½] dddd [o] LT';\n        case 6:\n          return '[minulÃº sobotu o] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'o %s',\n    past: 'pred %s',\n    s: translate,\n    ss: translate,\n    m: translate,\n    mm: translate,\n    h: translate,\n    hh: translate,\n    d: translate,\n    dd: translate,\n    M: translate,\n    MM: translate,\n    y: translate,\n    yy: translate\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:object-literal-key-quotes\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getDayOfWeek } from '../units/day-of-week';\n\n//! moment.js locale configuration\n//! locale : Slovenian [sl]\n//! author : mihan : https://github.com/mihan\n\nfunction processRelativeTime(number: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\n  var result = number + ' ';\n  switch (key) {\n    case 's':\n      return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';\n    case 'ss':\n      if (number === 1) {\n        result += withoutSuffix ? 'sekundo' : 'sekundi';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';\n      } else {\n        result += withoutSuffix || isFuture ? 'sekund' : 'sekund';\n      }\n      return result;\n    case 'm':\n      return withoutSuffix ? 'ena minuta' : 'eno minuto';\n    case 'mm':\n      if (number === 1) {\n        result += withoutSuffix ? 'minuta' : 'minuto';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'minuti' : 'minutama';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'minute' : 'minutami';\n      } else {\n        result += withoutSuffix || isFuture ? 'minut' : 'minutami';\n      }\n      return result;\n    case 'h':\n      return withoutSuffix ? 'ena ura' : 'eno uro';\n    case 'hh':\n      if (number === 1) {\n        result += withoutSuffix ? 'ura' : 'uro';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'uri' : 'urama';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'ure' : 'urami';\n      } else {\n        result += withoutSuffix || isFuture ? 'ur' : 'urami';\n      }\n      return result;\n    case 'd':\n      return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';\n    case 'dd':\n      if (number === 1) {\n        result += withoutSuffix || isFuture ? 'dan' : 'dnem';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';\n      } else {\n        result += withoutSuffix || isFuture ? 'dni' : 'dnevi';\n      }\n      return result;\n    case 'M':\n      return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';\n    case 'MM':\n      if (number === 1) {\n        result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'mesece' : 'meseci';\n      } else {\n        result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';\n      }\n      return result;\n    case 'y':\n      return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';\n    case 'yy':\n      if (number === 1) {\n        result += withoutSuffix || isFuture ? 'leto' : 'letom';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'leti' : 'letoma';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'leta' : 'leti';\n      } else {\n        result += withoutSuffix || isFuture ? 'let' : 'leti';\n      }\n      return result;\n  }\n}\n\nexport const slLocale: LocaleData = {\n  abbr: 'sl',\n  months: 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),\n  monthsShort: 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'nedelja_ponedeljek_torek_sreda_Äetrtek_petek_sobota'.split('_'),\n  weekdaysShort: 'ned._pon._tor._sre._Äet._pet._sob.'.split('_'),\n  weekdaysMin: 'ne_po_to_sr_Äe_pe_so'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd, D. MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay: '[danes ob] LT',\n    nextDay: '[jutri ob] LT',\n\n    nextWeek(date: Date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[v] [nedeljo] [ob] LT';\n        case 3:\n          return '[v] [sredo] [ob] LT';\n        case 6:\n          return '[v] [soboto] [ob] LT';\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[v] dddd [ob] LT';\n      }\n    },\n    lastDay: '[vÄeraj ob] LT',\n    lastWeek(date: Date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[prejÅ¡njo] [nedeljo] [ob] LT';\n        case 3:\n          return '[prejÅ¡njo] [sredo] [ob] LT';\n        case 6:\n          return '[prejÅ¡njo] [soboto] [ob] LT';\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[prejÅ¡nji] dddd [ob] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'Äez %s',\n    past: 'pred %s',\n    s: processRelativeTime,\n    ss: processRelativeTime,\n    m: processRelativeTime,\n    mm: processRelativeTime,\n    h: processRelativeTime,\n    hh: processRelativeTime,\n    d: processRelativeTime,\n    dd: processRelativeTime,\n    M: processRelativeTime,\n    MM: processRelativeTime,\n    y: processRelativeTime,\n    yy: processRelativeTime\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7  // The week that contains Jan 1st is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Swedish [sv]\n//! author : Jens Alm : https://github.com/ulmus\n\nexport const svLocale: LocaleData = {\n  abbr: 'sv',\n  months: 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),\n  monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n  weekdays: 'sÃ¶ndag_mÃ¥ndag_tisdag_onsdag_torsdag_fredag_lÃ¶rdag'.split('_'),\n  weekdaysShort: 'sÃ¶n_mÃ¥n_tis_ons_tor_fre_lÃ¶r'.split('_'),\n  weekdaysMin: 'sÃ¶_mÃ¥_ti_on_to_fr_lÃ¶'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY-MM-DD',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY [kl.] HH:mm',\n    LLLL: 'dddd D MMMM YYYY [kl.] HH:mm',\n    lll: 'D MMM YYYY HH:mm',\n    llll: 'ddd D MMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Idag] LT',\n    nextDay: '[Imorgon] LT',\n    lastDay: '[IgÃ¥r] LT',\n    nextWeek: '[PÃ¥] dddd LT',\n    lastWeek: '[I] dddd[s] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'om %s',\n    past: 'fÃ¶r %s sedan',\n    s: 'nÃ¥gra sekunder',\n    ss: '%d sekunder',\n    m: 'en minut',\n    mm: '%d minuter',\n    h: 'en timme',\n    hh: '%d timmar',\n    d: 'en dag',\n    dd: '%d dagar',\n    M: 'en mÃ¥nad',\n    MM: '%d mÃ¥nader',\n    y: 'ett Ã¥r',\n    yy: '%d Ã¥r'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(e|a)/,\n  ordinal(_num: number): string {\n    const num = Number(_num);\n    let b = num % 10,\n      output = (~~(num % 100 / 10) === 1) ? 'e' :\n        (b === 1) ? 'a' :\n          (b === 2) ? 'a' :\n            (b === 3) ? 'e' : 'e';\n    return num + output;\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\n// moment.js locale configuration\n// locale : Thai [th]\n// author : Watcharapol Sanitwong : https://github.com/tumit\n\nimport { LocaleData } from '../locale/locale.class';\n\nexport const thLocale: LocaleData = {\n  abbr: 'th',\n  months: 'à¸¡à¸à¸£à¸²à¸à¸¡_à¸à¸¸à¸¡à¸ à¸²à¸à¸±à¸à¸à¹_à¸¡à¸µà¸à¸²à¸à¸¡_à¹à¸¡à¸©à¸²à¸¢à¸_à¸à¸¤à¸©à¸ à¸²à¸à¸¡_à¸¡à¸´à¸à¸¸à¸à¸²à¸¢à¸_à¸à¸£à¸à¸à¸²à¸à¸¡_à¸ªà¸´à¸à¸«à¸²à¸à¸¡_à¸à¸±à¸à¸¢à¸²à¸¢à¸_à¸à¸¸à¸¥à¸²à¸à¸¡_à¸à¸¤à¸¨à¸à¸´à¸à¸²à¸¢à¸_à¸à¸±à¸à¸§à¸²à¸à¸¡'.split('_'),\n  monthsShort: 'à¸¡.à¸._à¸.à¸._à¸¡à¸µ.à¸._à¹à¸¡.à¸¢._à¸.à¸._à¸¡à¸´.à¸¢._à¸.à¸._à¸ª.à¸._à¸.à¸¢._à¸.à¸._à¸.à¸¢._à¸.à¸.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'à¸­à¸²à¸à¸´à¸à¸¢à¹_à¸à¸±à¸à¸à¸£à¹_à¸­à¸±à¸à¸à¸²à¸£_à¸à¸¸à¸_à¸à¸¤à¸«à¸±à¸ªà¸à¸à¸µ_à¸¨à¸¸à¸à¸£à¹_à¹à¸ªà¸²à¸£à¹'.split('_'),\n  weekdaysShort: 'à¸­à¸²à¸à¸´à¸à¸¢à¹_à¸à¸±à¸à¸à¸£à¹_à¸­à¸±à¸à¸à¸²à¸£_à¸à¸¸à¸_à¸à¸¤à¸«à¸±à¸ª_à¸¨à¸¸à¸à¸£à¹_à¹à¸ªà¸²à¸£à¹'.split('_'), // yes, three characters difference\n  weekdaysMin: 'à¸­à¸²._à¸._à¸­._à¸._à¸à¸¤._à¸¨._à¸ª.'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY à¹à¸§à¸¥à¸² H:mm',\n    LLLL: 'à¸§à¸±à¸ddddà¸à¸µà¹ D MMMM YYYY à¹à¸§à¸¥à¸² H:mm'\n  },\n  meridiemParse: /à¸à¹à¸­à¸à¹à¸à¸µà¹à¸¢à¸|à¸«à¸¥à¸±à¸à¹à¸à¸µà¹à¸¢à¸/,\n  isPM(input) {\n    return input === 'à¸«à¸¥à¸±à¸à¹à¸à¸µà¹à¸¢à¸';\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'à¸à¹à¸­à¸à¹à¸à¸µà¹à¸¢à¸';\n    } else {\n      return 'à¸«à¸¥à¸±à¸à¹à¸à¸µà¹à¸¢à¸';\n    }\n  },\n  calendar: {\n    sameDay: '[à¸§à¸±à¸à¸à¸µà¹ à¹à¸§à¸¥à¸²] LT',\n    nextDay: '[à¸à¸£à¸¸à¹à¸à¸à¸µà¹ à¹à¸§à¸¥à¸²] LT',\n    nextWeek: 'dddd[à¸«à¸à¹à¸² à¹à¸§à¸¥à¸²] LT',\n    lastDay: '[à¹à¸¡à¸·à¹à¸­à¸§à¸²à¸à¸à¸µà¹ à¹à¸§à¸¥à¸²] LT',\n    lastWeek: '[à¸§à¸±à¸]dddd[à¸à¸µà¹à¹à¸¥à¹à¸§ à¹à¸§à¸¥à¸²] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'à¸­à¸µà¸ %s',\n    past: '%sà¸à¸µà¹à¹à¸¥à¹à¸§',\n    s: 'à¹à¸¡à¹à¸à¸µà¹à¸§à¸´à¸à¸²à¸à¸µ',\n    ss: '%d à¸§à¸´à¸à¸²à¸à¸µ',\n    m: '1 à¸à¸²à¸à¸µ',\n    mm: '%d à¸à¸²à¸à¸µ',\n    h: '1 à¸à¸±à¹à¸§à¹à¸¡à¸',\n    hh: '%d à¸à¸±à¹à¸§à¹à¸¡à¸',\n    d: '1 à¸§à¸±à¸',\n    dd: '%d à¸§à¸±à¸',\n    M: '1 à¹à¸à¸·à¸­à¸',\n    MM: '%d à¹à¸à¸·à¸­à¸',\n    y: '1 à¸à¸µ',\n    yy: '%d à¸à¸µ'\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Turkish [tr]\n//! authors : Erhan Gundogan : https://github.com/erhangundogan,\n//!           Burak YiÄit Kaya: https://github.com/BYK\n\nlet suffixes: { [key: string]: string } = {\n  1: '\\'inci',\n  5: '\\'inci',\n  8: '\\'inci',\n  70: '\\'inci',\n  80: '\\'inci',\n  2: '\\'nci',\n  7: '\\'nci',\n  20: '\\'nci',\n  50: '\\'nci',\n  3: '\\'Ã¼ncÃ¼',\n  4: '\\'Ã¼ncÃ¼',\n  100: '\\'Ã¼ncÃ¼',\n  6: '\\'ncÄ±',\n  9: '\\'uncu',\n  10: '\\'uncu',\n  30: '\\'uncu',\n  60: '\\'Ä±ncÄ±',\n  90: '\\'Ä±ncÄ±'\n};\n\nexport const trLocale: LocaleData = {\n  abbr: 'tr',\n  months: 'Ocak_Åubat_Mart_Nisan_MayÄ±s_Haziran_Temmuz_AÄustos_EylÃ¼l_Ekim_KasÄ±m_AralÄ±k'.split('_'),\n  monthsShort: 'Oca_Åub_Mar_Nis_May_Haz_Tem_AÄu_Eyl_Eki_Kas_Ara'.split('_'),\n  weekdays: 'Pazar_Pazartesi_SalÄ±_ÃarÅamba_PerÅembe_Cuma_Cumartesi'.split('_'),\n  weekdaysShort: 'Paz_Pts_Sal_Ãar_Per_Cum_Cts'.split('_'),\n  weekdaysMin: 'Pz_Pt_Sa_Ãa_Pe_Cu_Ct'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[bugÃ¼n saat] LT',\n    nextDay: '[yarÄ±n saat] LT',\n    nextWeek: '[gelecek] dddd [saat] LT',\n    lastDay: '[dÃ¼n] LT',\n    lastWeek: '[geÃ§en] dddd [saat] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s sonra',\n    past: '%s Ã¶nce',\n    s: 'birkaÃ§ saniye',\n    ss: '%d saniye',\n    m: 'bir dakika',\n    mm: '%d dakika',\n    h: 'bir saat',\n    hh: '%d saat',\n    d: 'bir gÃ¼n',\n    dd: '%d gÃ¼n',\n    M: 'bir ay',\n    MM: '%d ay',\n    y: 'bir yÄ±l',\n    yy: '%d yÄ±l'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}'(inci|nci|Ã¼ncÃ¼|ncÄ±|uncu|Ä±ncÄ±)/,\n  ordinal(_num: number): string {\n    const num = Number(_num);\n    if (num === 0) {  // special case for zero\n      return num + '\\'Ä±ncÄ±';\n    }\n    let a = num % 10,\n      b = num % 100 - a,\n      c = num >= 100 ? 100 : null;\n    return num + (suffixes[a] || suffixes[b] || suffixes[c]);\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7  // The week that contains Jan 1st is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:no-parameter-reassignment prefer-switch\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Chinese (China) [zh-cn]\n//! author : suupic : https://github.com/suupic\n//! author : Zeno Zeng : https://github.com/zenozeng\n\nexport const zhCnLocale: LocaleData = {\n  abbr: 'zh-cn',\n  months: 'ä¸æ_äºæ_ä¸æ_åæ_äºæ_å­æ_ä¸æ_å«æ_ä¹æ_åæ_åä¸æ_åäºæ'.split('_'),\n  monthsShort: '1æ_2æ_3æ_4æ_5æ_6æ_7æ_8æ_9æ_10æ_11æ_12æ'.split('_'),\n  weekdays: 'æææ¥_ææä¸_ææäº_ææä¸_ææå_ææäº_ææå­'.split('_'),\n  weekdaysShort: 'å¨æ¥_å¨ä¸_å¨äº_å¨ä¸_å¨å_å¨äº_å¨å­'.split('_'),\n  weekdaysMin: 'æ¥_ä¸_äº_ä¸_å_äº_å­'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY/MM/DD',\n    LL: 'YYYYå¹´MæDæ¥',\n    LLL: 'YYYYå¹´MæDæ¥Ahç¹mmå',\n    LLLL: 'YYYYå¹´MæDæ¥ddddAhç¹mmå',\n    l: 'YYYY/M/D',\n    ll: 'YYYYå¹´MæDæ¥',\n    lll: 'YYYYå¹´MæDæ¥ HH:mm',\n    llll: 'YYYYå¹´MæDæ¥dddd HH:mm'\n  },\n  meridiemParse: /åæ¨|æ©ä¸|ä¸å|ä¸­å|ä¸å|æä¸/,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === 'åæ¨' || meridiem === 'æ©ä¸' ||\n      meridiem === 'ä¸å') {\n      return hour;\n    } else if (meridiem === 'ä¸å' || meridiem === 'æä¸') {\n      return hour + 12;\n    } else {\n      // 'ä¸­å'\n      return hour >= 11 ? hour : hour + 12;\n    }\n  },\n  meridiem(hour, minute, isLower) {\n    let hm = hour * 100 + minute;\n    if (hm < 600) {\n      return 'åæ¨';\n    } else if (hm < 900) {\n      return 'æ©ä¸';\n    } else if (hm < 1130) {\n      return 'ä¸å';\n    } else if (hm < 1230) {\n      return 'ä¸­å';\n    } else if (hm < 1800) {\n      return 'ä¸å';\n    } else {\n      return 'æä¸';\n    }\n  },\n  calendar: {\n    sameDay: '[ä»å¤©]LT',\n    nextDay: '[æå¤©]LT',\n    nextWeek: '[ä¸]ddddLT',\n    lastDay: '[æ¨å¤©]LT',\n    lastWeek: '[ä¸]ddddLT',\n    sameElse: 'L'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(æ¥|æ|å¨)/,\n  ordinal(_num: number, period) {\n    const num = Number(_num);\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + 'æ¥';\n      case 'M':\n        return num + 'æ';\n      case 'w':\n      case 'W':\n        return num + 'å¨';\n      default:\n        return num.toString();\n    }\n  },\n  relativeTime: {\n    future: '%så',\n    past: '%så',\n    s: 'å ç§',\n    ss: '%d ç§',\n    m: '1 åé',\n    mm: '%d åé',\n    h: '1 å°æ¶',\n    hh: '%d å°æ¶',\n    d: '1 å¤©',\n    dd: '%d å¤©',\n    M: '1 ä¸ªæ',\n    MM: '%d ä¸ªæ',\n    y: '1 å¹´',\n    yy: '%d å¹´'\n  },\n  week: {\n    // GB/T 7408-1994ãæ°æ®ååäº¤æ¢æ ¼å¼Â·ä¿¡æ¯äº¤æ¢Â·æ¥æåæ¶é´è¡¨ç¤ºæ³ãä¸ISO 8601:1988ç­æ\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n"]}