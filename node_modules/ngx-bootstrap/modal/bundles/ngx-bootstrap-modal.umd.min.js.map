{"version":3,"sources":["ng://ngx-bootstrap/modal/bs-modal-ref.service.ts","ng://ngx-bootstrap/modal/modal-backdrop.options.ts","ng://ngx-bootstrap/modal/modal-options.class.ts","ng://ngx-bootstrap/modal/modal-container.component.ts","ng://ngx-bootstrap/modal/modal-backdrop.component.ts","ng://ngx-bootstrap/modal/modal.directive.ts","ng://ngx-bootstrap/modal/bs-modal.service.ts","ng://ngx-bootstrap/modal/modal.module.ts"],"names":["BsModalRef","this","hide","Function","setClass","Injectable","ModalBackdropOptions","options","animate","Object","assign","ModalOptions","modalConfigDefaults","backdrop","keyboard","focus","show","ignoreBackdropClick","class","animated","initialState","CLASS_NAME","SCROLLBAR_MEASURER","BACKDROP","OPEN","FADE","IN","SHOW","TRANSITION_DURATIONS","DISMISS_REASONS","ModalContainerComponent","_element","_renderer","isShown","isModalHiding","config","prototype","ngOnInit","_this","isAnimated","addClass","nativeElement","setStyle","setTimeout","isBs3","document","body","bsModalService","getModalsCount","checkScrollbar","setScrollbar","onClick","event","target","setDismissReason","onEsc","keyCode","key","preventDefault","level","ngOnDestroy","removeClass","Component","args","selector","template","host","role","tabindex","[attr.aria-modal]","ElementRef","Renderer2","HostListener","ModalBackdropComponent","element","renderer","_isShown","defineProperty","_isAnimated","value","Utils","reflow","ModalDirective","_viewContainerRef","clf","onShow","EventEmitter","onShown","onHide","onHidden","isBodyOverflowing","originalBodyPadding","scrollbarWidth","timerHideModal","timerRmBackDrop","isNested","_backdrop","createLoader","_config","conf","getConfig","dismissReason","hideModal","dispose","toggle","emit","clearTimeout","classList","contains","showBackdrop","showElement","window","parentNode","nodeType","Node","ELEMENT_NODE","appendChild","setAttribute","setProperty","transitionComplete","resetScrollbar","resetAdjustments","focusOtherModal","callback","instance","callbackRemove","removeBackdrop","attach","to","_componentRef","parentElement","otherOpenedModals","querySelectorAll","length","clientWidth","innerWidth","getScrollbarWidth","parseInt","getComputedStyle","getPropertyValue","style","paddingRight","scrollDiv","createElement","offsetWidth","removeChild","Directive","exportAs","ViewContainerRef","ComponentLoaderFactory","Input","Output","BsModalService","rendererFactory","modalsCount","lastDismissReason","loaders","_backdropLoader","createRenderer","content","_createLoaders","_showBackdrop","_showModal","_hideBackdrop","_hideModal","removeLoaders","isBackdropEnabled","isBackdropInDOM","backdropRef","duration","modalLoader","bsModalRef","modalContainerRef","provide","useValue","getInnerComponent","newClass","reason","loader","copyEvent","onBeforeShow","onBeforeHide","push","splice","forEach","i","from","subscribe","RendererFactory2","ModalModule","forRoot","ngModule","providers","PositioningService","NgModule","declarations","exports","entryComponents"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class BsModalRef {\n  /**\n   * Reference to a component inside the modal. Null if modal's been created with TemplateRef\n   */\n  // tslint:disable-next-line:no-any\n  content?: any | null;\n\n  /**\n   * Hides the modal\n   */\n  hide: () => void = Function;\n  /**\n   * Sets new class to modal window\n   */\n  setClass: (newClass: string) => void = Function;\n}\n","export class ModalBackdropOptions {\n  animate = true;\n\n  constructor(options: ModalBackdropOptions) {\n    Object.assign(this, options);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ClassName, DismissReasons, Selector, TransitionDurations } from './models';\n\n@Injectable()\nexport class ModalOptions {\n  /**\n   *  Includes a modal-backdrop element. Alternatively,\n   *  specify static for a backdrop which doesn't close the modal on click.\n   */\n  backdrop?: boolean | 'static';\n  /**\n   * Closes the modal when escape key is pressed.\n   */\n  keyboard?: boolean;\n\n  focus?: boolean;\n  /**\n   * Shows the modal when initialized.\n   */\n  show?: boolean;\n  /**\n   * Ignore the backdrop click\n   */\n  ignoreBackdropClick?: boolean;\n  /**\n   * Css class for opened modal\n   */\n  class?: string;\n  /**\n   * Toggle animation\n   */\n  animated?: boolean;\n  /**\n   * Modal data\n   */\n  initialState?: Object;\n}\n\n\nexport const modalConfigDefaults: ModalOptions = {\n  backdrop: true,\n  keyboard: true,\n  focus: true,\n  show: false,\n  ignoreBackdropClick: false,\n  class: '',\n  animated: true,\n  initialState: {}\n};\n\nexport const CLASS_NAME: ClassName = {\n  SCROLLBAR_MEASURER: 'modal-scrollbar-measure',\n  BACKDROP: 'modal-backdrop',\n  OPEN: 'modal-open',\n  FADE: 'fade',\n  IN: 'in', // bs3\n  SHOW: 'show' // bs4\n};\n\nexport const SELECTOR: Selector = {\n  DIALOG: '.modal-dialog',\n  DATA_TOGGLE: '[data-toggle=\"modal\"]',\n  DATA_DISMISS: '[data-dismiss=\"modal\"]',\n  FIXED_CONTENT: '.navbar-fixed-top, .navbar-fixed-bottom, .is-fixed'\n};\n\nexport const TRANSITION_DURATIONS: TransitionDurations = {\n  MODAL: 300,\n  BACKDROP: 150\n};\n\nexport const DISMISS_REASONS: DismissReasons = {\n  BACKRDOP: 'backdrop-click',\n  ESC: 'esc'\n};\n","import {\n  Component,\n  ElementRef,\n  HostListener,\n  OnDestroy,\n  OnInit,\n  Renderer2\n} from '@angular/core';\nimport {\n  CLASS_NAME,\n  DISMISS_REASONS,\n  ModalOptions,\n  TRANSITION_DURATIONS\n} from './modal-options.class';\nimport { BsModalService } from './bs-modal.service';\nimport { isBs3 } from 'ngx-bootstrap/utils';\n\n@Component({\n  selector: 'modal-container',\n  template: `\n    <div [class]=\"'modal-dialog' + (config.class ? ' ' + config.class : '')\" role=\"document\">\n      <div class=\"modal-content\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n  `,\n  host: {\n    class: 'modal',\n    role: 'dialog',\n    tabindex: '-1',\n    '[attr.aria-modal]': 'true'\n  }\n})\nexport class ModalContainerComponent implements OnInit, OnDestroy {\n  config: ModalOptions;\n  isShown = false;\n  level: number;\n  isAnimated: boolean;\n  bsModalService: BsModalService;\n  private isModalHiding = false;\n\n  constructor(options: ModalOptions,\n              protected _element: ElementRef,\n              private _renderer: Renderer2) {\n    this.config = Object.assign({}, options);\n  }\n\n  ngOnInit(): void {\n    if (this.isAnimated) {\n      this._renderer.addClass(\n        this._element.nativeElement,\n        CLASS_NAME.FADE\n      );\n    }\n    this._renderer.setStyle(\n      this._element.nativeElement,\n      'display',\n      'block'\n    );\n    setTimeout(() => {\n      this.isShown = true;\n      this._renderer.addClass(\n        this._element.nativeElement,\n        isBs3() ? CLASS_NAME.IN : CLASS_NAME.SHOW\n      );\n    }, this.isAnimated ? TRANSITION_DURATIONS.BACKDROP : 0);\n    if (document && document.body) {\n      if (this.bsModalService.getModalsCount() === 1) {\n        this.bsModalService.checkScrollbar();\n        this.bsModalService.setScrollbar();\n      }\n      this._renderer.addClass(document.body, CLASS_NAME.OPEN);\n    }\n    if (this._element.nativeElement) {\n      this._element.nativeElement.focus();\n    }\n  }\n\n  @HostListener('click', ['$event'])\n  onClick(event: MouseEvent): void {\n    if (\n      this.config.ignoreBackdropClick ||\n      this.config.backdrop === 'static' ||\n      event.target !== this._element.nativeElement\n    ) {\n      return;\n    }\n    this.bsModalService.setDismissReason(DISMISS_REASONS.BACKRDOP);\n    this.hide();\n  }\n\n  @HostListener('window:keydown.esc', ['$event'])\n  onEsc(event: KeyboardEvent): void {\n    if (!this.isShown) {\n      return;\n    }\n\n    // tslint:disable-next-line:deprecation\n    if (event.keyCode === 27 || event.key === 'Escape') {\n      event.preventDefault();\n    }\n\n    if (\n      this.config.keyboard &&\n      this.level === this.bsModalService.getModalsCount()\n    ) {\n      this.bsModalService.setDismissReason(DISMISS_REASONS.ESC);\n      this.hide();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.isShown) {\n      this.hide();\n    }\n  }\n\n  hide(): void {\n    if (this.isModalHiding || !this.isShown) {\n      return;\n    }\n    this.isModalHiding = true;\n    this._renderer.removeClass(\n      this._element.nativeElement,\n      isBs3() ? CLASS_NAME.IN : CLASS_NAME.SHOW\n    );\n    setTimeout(() => {\n      this.isShown = false;\n      if (\n        document &&\n        document.body &&\n        this.bsModalService.getModalsCount() === 1\n      ) {\n        this._renderer.removeClass(document.body, CLASS_NAME.OPEN);\n      }\n      this.bsModalService.hide(this.level);\n      this.isModalHiding = false;\n    }, this.isAnimated ? TRANSITION_DURATIONS.MODAL : 0);\n  }\n}\n","import { Component, ElementRef, OnInit, Renderer2 } from '@angular/core';\n\nimport { CLASS_NAME } from './modal-options.class';\nimport { isBs3, Utils } from 'ngx-bootstrap/utils';\n\n\n/** This component will be added as background layout for modals if enabled */\n@Component({\n  selector: 'bs-modal-backdrop',\n  template: ' ',\n  host: { class: CLASS_NAME.BACKDROP }\n})\nexport class ModalBackdropComponent implements OnInit {\n  get isAnimated(): boolean {\n    return this._isAnimated;\n  }\n\n  set isAnimated(value: boolean) {\n    this._isAnimated = value;\n    // this.renderer.setElementClass(this.element.nativeElement, `${ClassName.FADE}`, value);\n  }\n\n  get isShown(): boolean {\n    return this._isShown;\n  }\n\n  set isShown(value: boolean) {\n    this._isShown = value;\n    if (value) {\n      this.renderer.addClass(\n        this.element.nativeElement,\n        `${CLASS_NAME.IN}`\n      );\n    } else {\n      this.renderer.removeClass(\n        this.element.nativeElement,\n        `${CLASS_NAME.IN}`\n      );\n    }\n    if (!isBs3()) {\n      if (value) {\n        this.renderer.addClass(\n          this.element.nativeElement,\n          `${CLASS_NAME.SHOW}`\n        );\n      } else {\n        this.renderer.removeClass(\n          this.element.nativeElement,\n          `${CLASS_NAME.SHOW}`\n        );\n      }\n    }\n  }\n\n  element: ElementRef;\n  renderer: Renderer2;\n\n  protected _isAnimated: boolean;\n  protected _isShown = false;\n\n  constructor(element: ElementRef, renderer: Renderer2) {\n    this.element = element;\n    this.renderer = renderer;\n  }\n\n  ngOnInit(): void {\n    if (this.isAnimated) {\n      this.renderer.addClass(\n        this.element.nativeElement,\n        `${CLASS_NAME.FADE}`\n      );\n      Utils.reflow(this.element.nativeElement);\n    }\n    this.isShown = true;\n  }\n}\n","/* tslint:disable:max-file-line-count */\n// todo: should we support enforce focus in?\n// todo: in original bs there are was a way to prevent modal from showing\n// todo: original modal had resize events\n\nimport {\n  ComponentRef, Directive, ElementRef, EventEmitter, HostListener, Input,\n  OnDestroy, OnInit, Output, Renderer2, ViewContainerRef\n} from '@angular/core';\n\nimport { document, window, isBs3, Utils } from 'ngx-bootstrap/utils';\nimport { ModalBackdropComponent } from './modal-backdrop.component';\nimport {\n  CLASS_NAME, DISMISS_REASONS, modalConfigDefaults, ModalOptions\n} from './modal-options.class';\nimport { ComponentLoader, ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\n\nconst TRANSITION_DURATION = 300;\nconst BACKDROP_TRANSITION_DURATION = 150;\n\n/** Mark any code with directive to show it's content in modal */\n@Directive({\n  selector: '[bsModal]',\n  exportAs: 'bs-modal'\n})\nexport class ModalDirective implements OnDestroy, OnInit {\n  /** allows to set modal configuration via element property */\n  @Input()\n  set config(conf: ModalOptions) {\n    this._config = this.getConfig(conf);\n  }\n\n  get config(): ModalOptions {\n    return this._config;\n  }\n\n  /** This event fires immediately when the `show` instance method is called. */\n  @Output()\n  onShow: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\n  /** This event is fired when the modal has been made visible to the user\n   * (will wait for CSS transitions to complete)\n   */\n  @Output()\n  onShown: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\n  /** This event is fired immediately when\n   * the hide instance method has been called.\n   */\n  @Output()\n  onHide: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\n  /** This event is fired when the modal has finished being\n   * hidden from the user (will wait for CSS transitions to complete).\n   */\n  @Output()\n  onHidden: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\n\n  /** This field contains last dismiss reason.\n   * Possible values: `backdrop-click`, `esc` and `null`\n   * (if modal was closed by direct call of `.hide()`).\n   */\n  dismissReason: string;\n\n  get isShown(): boolean {\n    return this._isShown;\n  }\n\n  protected _config: ModalOptions;\n  protected _isShown = false;\n\n  protected isBodyOverflowing = false;\n  protected originalBodyPadding = 0;\n  protected scrollbarWidth = 0;\n\n  protected timerHideModal = 0;\n  protected timerRmBackDrop = 0;\n\n  // reference to backdrop component\n  protected backdrop: ComponentRef<ModalBackdropComponent>;\n  private _backdrop: ComponentLoader<ModalBackdropComponent>;\n\n  private isNested = false;\n\n  constructor(private _element: ElementRef,\n              _viewContainerRef: ViewContainerRef,\n              private _renderer: Renderer2,\n              clf: ComponentLoaderFactory) {\n    this._backdrop = clf.createLoader<ModalBackdropComponent>(\n      _element,\n      _viewContainerRef,\n      _renderer\n    );\n  }\n\n  @HostListener('click', ['$event'])\n  onClick(event: MouseEvent): void {\n    if (\n      this.config.ignoreBackdropClick ||\n      this.config.backdrop === 'static' ||\n      event.target !== this._element.nativeElement\n    ) {\n      return;\n    }\n    this.dismissReason = DISMISS_REASONS.BACKRDOP;\n    this.hide(event);\n  }\n\n  // todo: consider preventing default and stopping propagation\n  @HostListener('keydown.esc', ['$event'])\n  onEsc(event: KeyboardEvent): void {\n    if (!this._isShown) {\n      return;\n    }\n    // tslint:disable-next-line:deprecation\n    if (event.keyCode === 27 || event.key === 'Escape') {\n      event.preventDefault();\n    }\n\n    if (this.config.keyboard) {\n      this.dismissReason = DISMISS_REASONS.ESC;\n      this.hide();\n    }\n  }\n\n  ngOnDestroy() {\n    this.config = void 0;\n    if (this._isShown) {\n      this._isShown = false;\n      this.hideModal();\n      this._backdrop.dispose();\n    }\n  }\n\n  ngOnInit(): void {\n    this._config = this._config || this.getConfig();\n    setTimeout(() => {\n      if (this._config.show) {\n        this.show();\n      }\n    }, 0);\n  }\n\n  /* Public methods */\n\n  /** Allows to manually toggle modal visibility */\n  toggle(): void {\n    return this._isShown ? this.hide() : this.show();\n  }\n\n  /** Allows to manually open modal */\n  show(): void {\n    this.dismissReason = null;\n    this.onShow.emit(this);\n    if (this._isShown) {\n      return;\n    }\n    clearTimeout(this.timerHideModal);\n    clearTimeout(this.timerRmBackDrop);\n\n    this._isShown = true;\n\n    this.checkScrollbar();\n    this.setScrollbar();\n\n    if (document && document.body) {\n      if (document.body.classList.contains(CLASS_NAME.OPEN)) {\n        this.isNested = true;\n      } else {\n        this._renderer.addClass(document.body, CLASS_NAME.OPEN);\n      }\n    }\n\n    this.showBackdrop(() => {\n      this.showElement();\n    });\n  }\n\n  /** Allows to manually close modal */\n  hide(event?: Event): void {\n    if (event) {\n      event.preventDefault();\n    }\n\n    this.onHide.emit(this);\n\n    // todo: add an option to prevent hiding\n    if (!this._isShown) {\n      return;\n    }\n\n    window.clearTimeout(this.timerHideModal);\n    window.clearTimeout(this.timerRmBackDrop);\n\n    this._isShown = false;\n    this._renderer.removeClass(this._element.nativeElement, CLASS_NAME.IN);\n    if (!isBs3()) {\n      this._renderer.removeClass(this._element.nativeElement, CLASS_NAME.SHOW);\n    }\n    // this._addClassIn = false;\n\n    if (this._config.animated) {\n      this.timerHideModal = window.setTimeout(\n        () => this.hideModal(),\n        TRANSITION_DURATION\n      );\n    } else {\n      this.hideModal();\n    }\n  }\n\n  /** Private methods @internal */\n  protected getConfig(config?: ModalOptions): ModalOptions {\n    return Object.assign({}, modalConfigDefaults, config);\n  }\n\n  /**\n   *  Show dialog\n   *  @internal\n   */\n  protected showElement(): void {\n    // todo: replace this with component loader usage\n    if (\n      !this._element.nativeElement.parentNode ||\n      this._element.nativeElement.parentNode.nodeType !== Node.ELEMENT_NODE\n    ) {\n      // don't move modals dom position\n      if (document && document.body) {\n        document.body.appendChild(this._element.nativeElement);\n      }\n    }\n\n    this._renderer.setAttribute(\n      this._element.nativeElement,\n      'aria-hidden',\n      'false'\n    );\n    this._renderer.setAttribute(\n      this._element.nativeElement,\n      'aria-modal',\n      'true'\n    );\n    this._renderer.setStyle(\n      this._element.nativeElement,\n      'display',\n      'block'\n    );\n    this._renderer.setProperty(\n      this._element.nativeElement,\n      'scrollTop',\n      0\n    );\n\n    if (this._config.animated) {\n      Utils.reflow(this._element.nativeElement);\n    }\n\n    // this._addClassIn = true;\n    this._renderer.addClass(this._element.nativeElement, CLASS_NAME.IN);\n    if (!isBs3()) {\n      this._renderer.addClass(this._element.nativeElement, CLASS_NAME.SHOW);\n    }\n\n    const transitionComplete = () => {\n      if (this._config.focus) {\n        this._element.nativeElement.focus();\n      }\n      this.onShown.emit(this);\n    };\n\n    if (this._config.animated) {\n      setTimeout(transitionComplete, TRANSITION_DURATION);\n    } else {\n      transitionComplete();\n    }\n  }\n\n  /** @internal */\n  protected hideModal(): void {\n    this._renderer.setAttribute(\n      this._element.nativeElement,\n      'aria-hidden',\n      'true'\n    );\n    this._renderer.setStyle(\n      this._element.nativeElement,\n      'display',\n      'none'\n    );\n    this.showBackdrop(() => {\n      if (!this.isNested) {\n        if (document && document.body) {\n          this._renderer.removeClass(document.body, CLASS_NAME.OPEN);\n        }\n        this.resetScrollbar();\n      }\n      this.resetAdjustments();\n      this.focusOtherModal();\n      this.onHidden.emit(this);\n    });\n  }\n\n  // todo: original show was calling a callback when done, but we can use\n  // promise\n  /** @internal */\n  protected showBackdrop(callback?: Function): void {\n    if (\n      this._isShown &&\n      this.config.backdrop &&\n      (!this.backdrop || !this.backdrop.instance.isShown)\n    ) {\n      this.removeBackdrop();\n      this._backdrop\n        .attach(ModalBackdropComponent)\n        .to('body')\n        .show({isAnimated: this._config.animated});\n      this.backdrop = this._backdrop._componentRef;\n\n      if (!callback) {\n        return;\n      }\n\n      if (!this._config.animated) {\n        callback();\n\n        return;\n      }\n\n      setTimeout(callback, BACKDROP_TRANSITION_DURATION);\n    } else if (!this._isShown && this.backdrop) {\n      this.backdrop.instance.isShown = false;\n\n      const callbackRemove = () => {\n        this.removeBackdrop();\n        if (callback) {\n          callback();\n        }\n      };\n\n      if (this.backdrop.instance.isAnimated) {\n        this.timerRmBackDrop = window.setTimeout(\n          callbackRemove,\n          BACKDROP_TRANSITION_DURATION\n        );\n      } else {\n        callbackRemove();\n      }\n    } else if (callback) {\n      callback();\n    }\n  }\n\n  /** @internal */\n  protected removeBackdrop(): void {\n    this._backdrop.hide();\n  }\n\n  /** Events tricks */\n\n  // no need for it\n  // protected setEscapeEvent():void {\n  //   if (this._isShown && this._config.keyboard) {\n  //     $(this._element).on(Event.KEYDOWN_DISMISS, (event) => {\n  //       if (event.which === 27) {\n  //         this.hide()\n  //       }\n  //     })\n  //\n  //   } else if (!this._isShown) {\n  //     $(this._element).off(Event.KEYDOWN_DISMISS)\n  //   }\n  // }\n\n  // protected setResizeEvent():void {\n  // console.log(this.renderer.listenGlobal('', Event.RESIZE));\n  // if (this._isShown) {\n  //   $(window).on(Event.RESIZE, $.proxy(this._handleUpdate, this))\n  // } else {\n  //   $(window).off(Event.RESIZE)\n  // }\n  // }\n\n  protected focusOtherModal() {\n    if (this._element.nativeElement.parentElement == null) {\n      return;\n    }\n    const otherOpenedModals = this._element.nativeElement.parentElement.querySelectorAll('.in[bsModal]');\n    if (!otherOpenedModals.length) {\n      return;\n    }\n    otherOpenedModals[otherOpenedModals.length - 1].focus();\n  }\n\n  /** @internal */\n  protected resetAdjustments(): void {\n    this._renderer.setStyle(\n      this._element.nativeElement,\n      'paddingLeft',\n      ''\n    );\n    this._renderer.setStyle(\n      this._element.nativeElement,\n      'paddingRight',\n      ''\n    );\n  }\n\n  /** Scroll bar tricks */\n  /** @internal */\n  protected checkScrollbar(): void {\n    this.isBodyOverflowing = document.body.clientWidth < window.innerWidth;\n    this.scrollbarWidth = this.getScrollbarWidth();\n  }\n\n  protected setScrollbar(): void {\n    if (!document) {\n      return;\n    }\n\n    this.originalBodyPadding = parseInt(\n      window\n        .getComputedStyle(document.body)\n        .getPropertyValue('padding-right') || 0,\n      10\n    );\n\n    if (this.isBodyOverflowing) {\n      document.body.style.paddingRight = `${this.originalBodyPadding +\n      this.scrollbarWidth}px`;\n    }\n  }\n\n  protected resetScrollbar(): void {\n    document.body.style.paddingRight = `${this.originalBodyPadding}px`;\n  }\n\n  // thx d.walsh\n  protected getScrollbarWidth(): number {\n    const scrollDiv = this._renderer.createElement('div');\n    this._renderer.addClass(scrollDiv, CLASS_NAME.SCROLLBAR_MEASURER);\n    this._renderer.appendChild(document.body, scrollDiv);\n    const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n    this._renderer.removeChild(document.body, scrollDiv);\n\n    return scrollbarWidth;\n  }\n}\n","import {\n  ComponentRef,\n  Injectable,\n  TemplateRef,\n  EventEmitter,\n  Renderer2,\n  RendererFactory2\n} from '@angular/core';\n\nimport { ComponentLoader, ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { ModalBackdropComponent } from './modal-backdrop.component';\nimport { ModalContainerComponent } from './modal-container.component';\nimport {\n  CLASS_NAME,\n  modalConfigDefaults,\n  ModalOptions,\n  TRANSITION_DURATIONS\n} from './modal-options.class';\nimport { BsModalRef } from './bs-modal-ref.service';\n\n@Injectable()\nexport class BsModalService {\n  // constructor props\n  config: ModalOptions = modalConfigDefaults;\n\n  // tslint:disable-next-line:no-any\n  onShow: EventEmitter<any> = new EventEmitter();\n  // tslint:disable-next-line:no-any\n  onShown: EventEmitter<any> = new EventEmitter();\n  // tslint:disable-next-line:no-any\n  onHide: EventEmitter<any> = new EventEmitter();\n  // tslint:disable-next-line:no-any\n  onHidden: EventEmitter<any> = new EventEmitter();\n\n  protected isBodyOverflowing = false;\n  protected originalBodyPadding = 0;\n\n  protected scrollbarWidth = 0;\n\n  protected backdropRef: ComponentRef<ModalBackdropComponent>;\n  private _backdropLoader: ComponentLoader<ModalBackdropComponent>;\n  private modalsCount = 0;\n  private lastDismissReason = '';\n\n  private loaders: ComponentLoader<ModalContainerComponent>[] = [];\n\n  private _renderer: Renderer2;\n\n  constructor(rendererFactory: RendererFactory2, private clf: ComponentLoaderFactory) {\n    this._backdropLoader = this.clf.createLoader<ModalBackdropComponent>(\n      null,\n      null,\n      null\n    );\n    this._renderer = rendererFactory.createRenderer(null, null);\n  }\n\n  /** Shows a modal */\n  // tslint:disable-next-line:no-any\n  show(content: string | TemplateRef<any> | any, config?: ModalOptions): BsModalRef {\n    this.modalsCount++;\n    this._createLoaders();\n    this.config = Object.assign({}, modalConfigDefaults, config);\n    this._showBackdrop();\n    this.lastDismissReason = null;\n\n    return this._showModal(content);\n  }\n\n  hide(level: number) {\n    if (this.modalsCount === 1) {\n      this._hideBackdrop();\n      this.resetScrollbar();\n    }\n    this.modalsCount = this.modalsCount >= 1 ? this.modalsCount - 1 : 0;\n    setTimeout(() => {\n      this._hideModal(level);\n      this.removeLoaders(level);\n    }, this.config.animated ? TRANSITION_DURATIONS.BACKDROP : 0);\n  }\n\n  _showBackdrop(): void {\n    const isBackdropEnabled =\n      this.config.backdrop || this.config.backdrop === 'static';\n    const isBackdropInDOM =\n      !this.backdropRef || !this.backdropRef.instance.isShown;\n\n    if (this.modalsCount === 1) {\n      this.removeBackdrop();\n\n      if (isBackdropEnabled && isBackdropInDOM) {\n        this._backdropLoader\n          .attach(ModalBackdropComponent)\n          .to('body')\n          .show({ isAnimated: this.config.animated });\n        this.backdropRef = this._backdropLoader._componentRef;\n      }\n    }\n  }\n\n  _hideBackdrop(): void {\n    if (!this.backdropRef) {\n      return;\n    }\n    this.backdropRef.instance.isShown = false;\n    const duration = this.config.animated ? TRANSITION_DURATIONS.BACKDROP : 0;\n    setTimeout(() => this.removeBackdrop(), duration);\n  }\n  // tslint:disable-next-line:no-any\n  _showModal(content: any): BsModalRef {\n    const modalLoader = this.loaders[this.loaders.length - 1];\n    const bsModalRef = new BsModalRef();\n    const modalContainerRef = modalLoader\n      .provide({ provide: ModalOptions, useValue: this.config })\n      .provide({ provide: BsModalRef, useValue: bsModalRef })\n      .attach(ModalContainerComponent)\n      .to('body')\n      .show({content, isAnimated: this.config.animated, initialState: this.config.initialState, bsModalService: this});\n    modalContainerRef.instance.level = this.getModalsCount();\n    bsModalRef.hide = () => {\n      modalContainerRef.instance.hide();\n    };\n    bsModalRef.content = modalLoader.getInnerComponent() || null;\n    bsModalRef.setClass = (newClass: string) => {\n      modalContainerRef.instance.config.class = newClass;\n    };\n\n    return bsModalRef;\n  }\n\n  _hideModal(level: number): void {\n    const modalLoader = this.loaders[level - 1];\n    if (modalLoader) {\n      modalLoader.hide();\n    }\n  }\n\n  getModalsCount(): number {\n    return this.modalsCount;\n  }\n\n  setDismissReason(reason: string) {\n    this.lastDismissReason = reason;\n  }\n\n  removeBackdrop(): void {\n    this._backdropLoader.hide();\n    this.backdropRef = null;\n  }\n\n  /** AFTER PR MERGE MODAL.COMPONENT WILL BE USING THIS CODE */\n  /** Scroll bar tricks */\n  /** @internal */\n  checkScrollbar(): void {\n    this.isBodyOverflowing = document.body.clientWidth < window.innerWidth;\n    this.scrollbarWidth = this.getScrollbarWidth();\n  }\n\n  setScrollbar(): void {\n    if (!document) {\n      return;\n    }\n\n    this.originalBodyPadding = parseInt(\n      window\n        .getComputedStyle(document.body)\n        .getPropertyValue('padding-right') || '0',\n      10\n    );\n\n    if (this.isBodyOverflowing) {\n      document.body.style.paddingRight = `${this.originalBodyPadding +\n        this.scrollbarWidth}px`;\n    }\n  }\n\n  private resetScrollbar(): void {\n    document.body.style.paddingRight = `${this.originalBodyPadding}px`;\n  }\n\n  // thx d.walsh\n  private getScrollbarWidth(): number {\n    const scrollDiv = this._renderer.createElement('div');\n    this._renderer.addClass(scrollDiv, CLASS_NAME.SCROLLBAR_MEASURER);\n    this._renderer.appendChild(document.body, scrollDiv);\n    const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n    this._renderer.removeChild(document.body, scrollDiv);\n\n    return scrollbarWidth;\n  }\n\n  private _createLoaders(): void {\n    const loader = this.clf.createLoader<ModalContainerComponent>(\n      null,\n      null,\n      null\n    );\n    this.copyEvent(loader.onBeforeShow, this.onShow);\n    this.copyEvent(loader.onShown, this.onShown);\n    this.copyEvent(loader.onBeforeHide, this.onHide);\n    this.copyEvent(loader.onHidden, this.onHidden);\n    this.loaders.push(loader);\n  }\n\n  private removeLoaders(level: number): void {\n    this.loaders.splice(level - 1, 1);\n    this.loaders.forEach(\n      (loader: ComponentLoader<ModalContainerComponent>, i: number) => {\n        loader.instance.level = i + 1;\n      }\n    );\n  }\n\n  // tslint:disable-next-line:no-any\n  private copyEvent(from: EventEmitter<any>, to: EventEmitter<any>) {\n    from.subscribe(() => {\n      to.emit(this.lastDismissReason);\n    });\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { ModalBackdropComponent } from './modal-backdrop.component';\nimport { ModalDirective } from './modal.directive';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { ModalContainerComponent } from './modal-container.component';\nimport { BsModalService } from './bs-modal.service';\n\n@NgModule({\n  declarations: [\n    ModalBackdropComponent,\n    ModalDirective,\n    ModalContainerComponent\n  ],\n  exports: [ModalBackdropComponent, ModalDirective],\n  entryComponents: [ModalBackdropComponent, ModalContainerComponent]\n})\nexport class ModalModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: ModalModule,\n      providers: [BsModalService, ComponentLoaderFactory, PositioningService]\n    };\n  }\n}\n"]}