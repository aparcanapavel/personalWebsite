!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("ngx-bootstrap/utils"),require("@angular/common"),require("@angular/core"),require("ngx-bootstrap/collapse")):"function"==typeof define&&define.amd?define("ngx-bootstrap/accordion",["exports","ngx-bootstrap/utils","@angular/common","@angular/core","ngx-bootstrap/collapse"],n):n((e["ngx-bootstrap"]=e["ngx-bootstrap"]||{},e["ngx-bootstrap"].accordion={}),e.utils,e.ng.common,e.ng.core,e.collapse)}(this,function(e,n,t,o,s){"use strict";var r=function(){function e(){this.closeOthers=!1}return e.decorators=[{type:o.Injectable}],e}(),i=function(){function e(e){this.groups=[],Object.assign(this,e)}return e.prototype.closeOtherPanels=function(n){this.closeOthers&&this.groups.forEach(function(e){e!==n&&(e.isOpen=!1)})},e.prototype.addGroup=function(e){this.groups.push(e)},e.prototype.removeGroup=function(e){var n=this.groups.indexOf(e);-1!==n&&this.groups.splice(n,1)},e.decorators=[{type:o.Component,args:[{selector:"accordion",template:"<ng-content></ng-content>",host:{"[attr.aria-multiselectable]":"closeOthers",role:"tablist","class":"panel-group",style:"display: block"}}]}],e.ctorParameters=function(){return[{type:r}]},e.propDecorators={closeOthers:[{type:o.Input}]},e}(),a=function(){function e(e){this.isOpenChange=new o.EventEmitter,this._isOpen=!1,this.accordion=e}return Object.defineProperty(e.prototype,"isOpen",{get:function(){return this._isOpen},set:function(e){var n=this;e!==this.isOpen&&(e&&this.accordion.closeOtherPanels(this),this._isOpen=e,Promise.resolve(null).then(function(){n.isOpenChange.emit(e)})["catch"](function(e){console.log(e)}))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isBs3",{get:function(){return n.isBs3()},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){this.panelClass=this.panelClass||"panel-default",this.accordion.addGroup(this)},e.prototype.ngOnDestroy=function(){this.accordion.removeGroup(this)},e.prototype.toggleOpen=function(){this.isDisabled||(this.isOpen=!this.isOpen)},e.decorators=[{type:o.Component,args:[{selector:"accordion-group, accordion-panel",template:'<div class="panel card" [ngClass]="panelClass">\n  <div class="panel-heading card-header" role="tab"\n       (click)="toggleOpen()">\n    <div class="panel-title">\n      <div role="button" class="accordion-toggle"\n           [attr.aria-expanded]="isOpen">\n        <button class="btn btn-link" *ngIf="heading" [ngClass]="{\'text-muted\': isDisabled}">\n          {{ heading }}\n        </button>\n        <ng-content select="[accordion-heading]"></ng-content>\n      </div>\n    </div>\n  </div>\n  <div class="panel-collapse collapse" role="tabpanel" [collapse]="!isOpen">\n    <div class="panel-body card-block card-body">\n      <ng-content></ng-content>\n    </div>\n  </div>\n</div>\n',host:{"class":"panel",style:"display: block"}}]}],e.ctorParameters=function(){return[{type:i,decorators:[{type:o.Inject,args:[i]}]}]},e.propDecorators={heading:[{type:o.Input}],panelClass:[{type:o.Input}],isDisabled:[{type:o.Input}],isOpenChange:[{type:o.Output}],isOpen:[{type:o.HostBinding,args:["class.panel-open"]},{type:o.Input}]},e}(),c=function(){function e(){}return e.forRoot=function(){return{ngModule:e,providers:[r]}},e.decorators=[{type:o.NgModule,args:[{imports:[t.CommonModule,s.CollapseModule],declarations:[i,a],exports:[i,a]}]}],e}();e.AccordionPanelComponent=a,e.AccordionComponent=i,e.AccordionModule=c,e.AccordionConfig=r,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-bootstrap-accordion.umd.min.js.map